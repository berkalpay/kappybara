<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="506" onload="init(evt)" viewBox="0 0 1200 506" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="506" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o results/profile_uni_bi_small_flamegraph.svg -- python profile_uni_bi_small.py # commit c2b7f58</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="495.00"> </text><svg id="frames" x="10" width="1180" total_samples="1635"><g><title>&lt;module&gt; (inspect.py:146) (2 samples, 0.12%)</title><rect x="0.0612%" y="356" width="0.1223%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="2"/><text x="0.3112%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.12%)</title><rect x="0.0612%" y="372" width="0.1223%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.3112%" y="382.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:1) (4 samples, 0.24%)</title><rect x="0.0000%" y="68" width="0.2446%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.24%)</title><rect x="0.0000%" y="84" width="0.2446%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.24%)</title><rect x="0.0000%" y="100" width="0.2446%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.24%)</title><rect x="0.0000%" y="116" width="0.2446%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (4 samples, 0.24%)</title><rect x="0.0000%" y="132" width="0.2446%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.24%)</title><rect x="0.0000%" y="148" width="0.2446%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (kappybara/mixture.py:1) (4 samples, 0.24%)</title><rect x="0.0000%" y="164" width="0.2446%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.24%)</title><rect x="0.0000%" y="180" width="0.2446%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.24%)</title><rect x="0.0000%" y="196" width="0.2446%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.24%)</title><rect x="0.0000%" y="212" width="0.2446%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (4 samples, 0.24%)</title><rect x="0.0000%" y="228" width="0.2446%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.24%)</title><rect x="0.0000%" y="244" width="0.2446%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (dataclasses.py:5) (4 samples, 0.24%)</title><rect x="0.0000%" y="260" width="0.2446%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4"/><text x="0.2500%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.24%)</title><rect x="0.0000%" y="276" width="0.2446%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="4"/><text x="0.2500%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.24%)</title><rect x="0.0000%" y="292" width="0.2446%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="4"/><text x="0.2500%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.24%)</title><rect x="0.0000%" y="308" width="0.2446%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="4"/><text x="0.2500%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (4 samples, 0.24%)</title><rect x="0.0000%" y="324" width="0.2446%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.24%)</title><rect x="0.0000%" y="340" width="0.2446%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="4"/><text x="0.2500%" y="350.50"></text></g><g><title>rules (kappybara/kappa.py:53) (2 samples, 0.12%)</title><rect x="0.3058%" y="84" width="0.1223%" height="15" fill="rgb(249,33,26)" fg:x="5" fg:w="2"/><text x="0.5558%" y="94.50"></text></g><g><title>parse (kappybara/grammar.py:28) (2 samples, 0.12%)</title><rect x="0.3058%" y="100" width="0.1223%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="2"/><text x="0.5558%" y="110.50"></text></g><g><title>parse (lark/lark.py:655) (2 samples, 0.12%)</title><rect x="0.3058%" y="116" width="0.1223%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="2"/><text x="0.5558%" y="126.50"></text></g><g><title>parse (lark/parser_frontends.py:104) (2 samples, 0.12%)</title><rect x="0.3058%" y="132" width="0.1223%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="2"/><text x="0.5558%" y="142.50"></text></g><g><title>parse (lark/parsers/earley.py:280) (2 samples, 0.12%)</title><rect x="0.3058%" y="148" width="0.1223%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="2"/><text x="0.5558%" y="158.50"></text></g><g><title>_parse (lark/parsers/xearley.py:150) (2 samples, 0.12%)</title><rect x="0.3058%" y="164" width="0.1223%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="2"/><text x="0.5558%" y="174.50"></text></g><g><title>predict_and_complete (lark/parsers/earley.py:165) (2 samples, 0.12%)</title><rect x="0.3058%" y="180" width="0.1223%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="2"/><text x="0.5558%" y="190.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:19) (3 samples, 0.18%)</title><rect x="0.3058%" y="68" width="0.1835%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="3"/><text x="0.5558%" y="78.50"></text></g><g><title>n_embeddings (kappybara/rule.py:188) (2 samples, 0.12%)</title><rect x="1.0398%" y="180" width="0.1223%" height="15" fill="rgb(214,148,48)" fg:x="17" fg:w="2"/><text x="1.2898%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (kappybara/rule.py:189) (3 samples, 0.18%)</title><rect x="1.4067%" y="196" width="0.1835%" height="15" fill="rgb(232,36,49)" fg:x="23" fg:w="3"/><text x="1.6567%" y="206.50"></text></g><g><title>n_embeddings (kappybara/rule.py:189) (10 samples, 0.61%)</title><rect x="1.1621%" y="180" width="0.6116%" height="15" fill="rgb(209,103,24)" fg:x="19" fg:w="10"/><text x="1.4121%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (kappybara/rule.py:190) (3 samples, 0.18%)</title><rect x="1.5902%" y="196" width="0.1835%" height="15" fill="rgb(229,88,8)" fg:x="26" fg:w="3"/><text x="1.8402%" y="206.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (3 samples, 0.18%)</title><rect x="1.5902%" y="212" width="0.1835%" height="15" fill="rgb(213,181,19)" fg:x="26" fg:w="3"/><text x="1.8402%" y="222.50"></text></g><g><title>n_embeddings (kappybara/rule.py:191) (2 samples, 0.12%)</title><rect x="1.7737%" y="180" width="0.1223%" height="15" fill="rgb(254,191,54)" fg:x="29" fg:w="2"/><text x="2.0237%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:238) (3 samples, 0.18%)</title><rect x="1.9572%" y="180" width="0.1835%" height="15" fill="rgb(241,83,37)" fg:x="32" fg:w="3"/><text x="2.2072%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:240) (3 samples, 0.18%)</title><rect x="2.1407%" y="180" width="0.1835%" height="15" fill="rgb(233,36,39)" fg:x="35" fg:w="3"/><text x="2.3907%" y="190.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (2 samples, 0.12%)</title><rect x="2.2018%" y="196" width="0.1223%" height="15" fill="rgb(226,3,54)" fg:x="36" fg:w="2"/><text x="2.4518%" y="206.50"></text></g><g><title>lookup (kappybara/indexed_set.py:172) (2 samples, 0.12%)</title><rect x="2.2018%" y="212" width="0.1223%" height="15" fill="rgb(245,192,40)" fg:x="36" fg:w="2"/><text x="2.4518%" y="222.50"></text></g><g><title>n_embeddings (kappybara/rule.py:242) (4 samples, 0.24%)</title><rect x="2.3242%" y="180" width="0.2446%" height="15" fill="rgb(238,167,29)" fg:x="38" fg:w="4"/><text x="2.5742%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:243) (2 samples, 0.12%)</title><rect x="2.5688%" y="180" width="0.1223%" height="15" fill="rgb(232,182,51)" fg:x="42" fg:w="2"/><text x="2.8188%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:247) (2 samples, 0.12%)</title><rect x="2.6911%" y="180" width="0.1223%" height="15" fill="rgb(231,60,39)" fg:x="44" fg:w="2"/><text x="2.9411%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:76) (2 samples, 0.12%)</title><rect x="2.8135%" y="180" width="0.1223%" height="15" fill="rgb(208,69,12)" fg:x="46" fg:w="2"/><text x="3.0635%" y="190.50"></text></g><g><title>update (kappybara/system.py:70) (39 samples, 2.39%)</title><rect x="0.6116%" y="84" width="2.3853%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="39"/><text x="0.8616%" y="94.50">up..</text></g><g><title>wait (kappybara/system.py:58) (39 samples, 2.39%)</title><rect x="0.6116%" y="100" width="2.3853%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="39"/><text x="0.8616%" y="110.50">wa..</text></g><g><title>reactivity (kappybara/system.py:55) (39 samples, 2.39%)</title><rect x="0.6116%" y="116" width="2.3853%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="39"/><text x="0.8616%" y="126.50">re..</text></g><g><title>__get__ (functools.py:998) (38 samples, 2.32%)</title><rect x="0.6728%" y="132" width="2.3242%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="38"/><text x="0.9228%" y="142.50">_..</text></g><g><title>rule_reactivities (kappybara/system.py:51) (37 samples, 2.26%)</title><rect x="0.7339%" y="148" width="2.2630%" height="15" fill="rgb(218,138,4)" fg:x="12" fg:w="37"/><text x="0.9839%" y="158.50">r..</text></g><g><title>reactivity (kappybara/rule.py:32) (35 samples, 2.14%)</title><rect x="0.8563%" y="164" width="2.1407%" height="15" fill="rgb(250,191,14)" fg:x="14" fg:w="35"/><text x="1.1063%" y="174.50">r..</text></g><g><title>act (kappybara/system.py:62) (3 samples, 0.18%)</title><rect x="3.0581%" y="100" width="0.1835%" height="15" fill="rgb(239,60,40)" fg:x="50" fg:w="3"/><text x="3.3081%" y="110.50"></text></g><g><title>_produce_update (kappybara/rule.py:141) (4 samples, 0.24%)</title><rect x="3.5474%" y="132" width="0.2446%" height="15" fill="rgb(206,27,48)" fg:x="58" fg:w="4"/><text x="3.7974%" y="142.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (2 samples, 0.12%)</title><rect x="3.6697%" y="148" width="0.1223%" height="15" fill="rgb(225,35,8)" fg:x="60" fg:w="2"/><text x="3.9197%" y="158.50"></text></g><g><title>sites (kappybara/pattern.py:113) (2 samples, 0.12%)</title><rect x="3.6697%" y="164" width="0.1223%" height="15" fill="rgb(250,213,24)" fg:x="60" fg:w="2"/><text x="3.9197%" y="174.50"></text></g><g><title>__hash__ (kappybara/mixture.py:22) (2 samples, 0.12%)</title><rect x="3.9755%" y="164" width="0.1223%" height="15" fill="rgb(247,123,22)" fg:x="65" fg:w="2"/><text x="4.2255%" y="174.50"></text></g><g><title>select (kappybara/rule.py:104) (14 samples, 0.86%)</title><rect x="3.3639%" y="116" width="0.8563%" height="15" fill="rgb(231,138,38)" fg:x="55" fg:w="14"/><text x="3.6139%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:165) (5 samples, 0.31%)</title><rect x="3.9144%" y="132" width="0.3058%" height="15" fill="rgb(231,145,46)" fg:x="64" fg:w="5"/><text x="4.1644%" y="142.50"></text></g><g><title>disconnect_site (kappybara/mixture.py:335) (4 samples, 0.24%)</title><rect x="3.9755%" y="148" width="0.2446%" height="15" fill="rgb(251,118,11)" fg:x="65" fg:w="4"/><text x="4.2255%" y="158.50"></text></g><g><title>__init__ (&lt;string&gt;:3) (2 samples, 0.12%)</title><rect x="4.0979%" y="164" width="0.1223%" height="15" fill="rgb(217,147,25)" fg:x="67" fg:w="2"/><text x="4.3479%" y="174.50"></text></g><g><title>select (kappybara/rule.py:208) (2 samples, 0.12%)</title><rect x="4.3425%" y="116" width="0.1223%" height="15" fill="rgb(247,81,37)" fg:x="71" fg:w="2"/><text x="4.5925%" y="126.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (2 samples, 0.12%)</title><rect x="4.3425%" y="132" width="0.1223%" height="15" fill="rgb(209,12,38)" fg:x="71" fg:w="2"/><text x="4.5925%" y="142.50"></text></g><g><title>select (kappybara/rule.py:212) (4 samples, 0.24%)</title><rect x="4.4648%" y="116" width="0.2446%" height="15" fill="rgb(227,1,9)" fg:x="73" fg:w="4"/><text x="4.7148%" y="126.50"></text></g><g><title>choice (random.py:348) (4 samples, 0.24%)</title><rect x="4.4648%" y="132" width="0.2446%" height="15" fill="rgb(248,47,43)" fg:x="73" fg:w="4"/><text x="4.7148%" y="142.50"></text></g><g><title>select (kappybara/rule.py:215) (3 samples, 0.18%)</title><rect x="4.7706%" y="116" width="0.1835%" height="15" fill="rgb(221,10,30)" fg:x="78" fg:w="3"/><text x="5.0206%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:140) (2 samples, 0.12%)</title><rect x="5.2599%" y="132" width="0.1223%" height="15" fill="rgb(210,229,1)" fg:x="86" fg:w="2"/><text x="5.5099%" y="142.50"></text></g><g><title>_produce_update (kappybara/rule.py:157) (2 samples, 0.12%)</title><rect x="5.4434%" y="132" width="0.1223%" height="15" fill="rgb(222,148,37)" fg:x="89" fg:w="2"/><text x="5.6934%" y="142.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (2 samples, 0.12%)</title><rect x="5.4434%" y="148" width="0.1223%" height="15" fill="rgb(234,67,33)" fg:x="89" fg:w="2"/><text x="5.6934%" y="158.50"></text></g><g><title>sites (kappybara/pattern.py:113) (2 samples, 0.12%)</title><rect x="5.4434%" y="164" width="0.1223%" height="15" fill="rgb(247,98,35)" fg:x="89" fg:w="2"/><text x="5.6934%" y="174.50"></text></g><g><title>connect_sites (kappybara/mixture.py:325) (2 samples, 0.12%)</title><rect x="5.5657%" y="148" width="0.1223%" height="15" fill="rgb(247,138,52)" fg:x="91" fg:w="2"/><text x="5.8157%" y="158.50"></text></g><g><title>coupled (kappybara/pattern.py:66) (2 samples, 0.12%)</title><rect x="5.5657%" y="164" width="0.1223%" height="15" fill="rgb(213,79,30)" fg:x="91" fg:w="2"/><text x="5.8157%" y="174.50"></text></g><g><title>connect_sites (kappybara/mixture.py:329) (2 samples, 0.12%)</title><rect x="5.6881%" y="148" width="0.1223%" height="15" fill="rgb(246,177,23)" fg:x="93" fg:w="2"/><text x="5.9381%" y="158.50"></text></g><g><title>select (kappybara/rule.py:222) (19 samples, 1.16%)</title><rect x="4.9541%" y="116" width="1.1621%" height="15" fill="rgb(230,62,27)" fg:x="81" fg:w="19"/><text x="5.2041%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:163) (9 samples, 0.55%)</title><rect x="5.5657%" y="132" width="0.5505%" height="15" fill="rgb(216,154,8)" fg:x="91" fg:w="9"/><text x="5.8157%" y="142.50"></text></g><g><title>connect_sites (kappybara/mixture.py:330) (5 samples, 0.31%)</title><rect x="5.8104%" y="148" width="0.3058%" height="15" fill="rgb(244,35,45)" fg:x="95" fg:w="5"/><text x="6.0604%" y="158.50"></text></g><g><title>act (kappybara/system.py:64) (49 samples, 3.00%)</title><rect x="3.2416%" y="100" width="2.9969%" height="15" fill="rgb(251,115,12)" fg:x="53" fg:w="49"/><text x="3.4916%" y="110.50">act..</text></g><g><title>apply_update (kappybara/mixture.py:100) (4 samples, 0.24%)</title><rect x="6.3609%" y="132" width="0.2446%" height="15" fill="rgb(240,54,50)" fg:x="104" fg:w="4"/><text x="6.6109%" y="142.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (3 samples, 0.18%)</title><rect x="6.9725%" y="180" width="0.1835%" height="15" fill="rgb(233,84,52)" fg:x="114" fg:w="3"/><text x="7.2225%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:113) (2 samples, 0.12%)</title><rect x="7.0336%" y="196" width="0.1223%" height="15" fill="rgb(207,117,47)" fg:x="115" fg:w="2"/><text x="7.2836%" y="206.50"></text></g><g><title>neighborhood (kappybara/mixture.py:398) (8 samples, 0.49%)</title><rect x="6.8502%" y="148" width="0.4893%" height="15" fill="rgb(249,43,39)" fg:x="112" fg:w="8"/><text x="7.1002%" y="158.50"></text></g><g><title>neighbors (kappybara/pattern.py:122) (8 samples, 0.49%)</title><rect x="6.8502%" y="164" width="0.4893%" height="15" fill="rgb(209,38,44)" fg:x="112" fg:w="8"/><text x="7.1002%" y="174.50"></text></g><g><title>coupled (kappybara/pattern.py:66) (2 samples, 0.12%)</title><rect x="7.2171%" y="180" width="0.1223%" height="15" fill="rgb(236,212,23)" fg:x="118" fg:w="2"/><text x="7.4671%" y="190.50"></text></g><g><title>neighborhood (kappybara/mixture.py:399) (2 samples, 0.12%)</title><rect x="7.3394%" y="148" width="0.1223%" height="15" fill="rgb(242,79,21)" fg:x="120" fg:w="2"/><text x="7.5894%" y="158.50"></text></g><g><title>touched_after (kappybara/mixture.py:346) (2 samples, 0.12%)</title><rect x="7.5841%" y="148" width="0.1223%" height="15" fill="rgb(211,96,35)" fg:x="124" fg:w="2"/><text x="7.8341%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:111) (20 samples, 1.22%)</title><rect x="6.6055%" y="132" width="1.2232%" height="15" fill="rgb(253,215,40)" fg:x="108" fg:w="20"/><text x="6.8555%" y="142.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:123) (2 samples, 0.12%)</title><rect x="8.0122%" y="148" width="0.1223%" height="15" fill="rgb(211,81,21)" fg:x="131" fg:w="2"/><text x="8.2622%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:113) (10 samples, 0.61%)</title><rect x="7.8287%" y="132" width="0.6116%" height="15" fill="rgb(208,190,38)" fg:x="128" fg:w="10"/><text x="8.0787%" y="142.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:124) (5 samples, 0.31%)</title><rect x="8.1346%" y="148" width="0.3058%" height="15" fill="rgb(235,213,38)" fg:x="133" fg:w="5"/><text x="8.3846%" y="158.50"></text></g><g><title>create_index (kappybara/indexed_set.py:215) (8 samples, 0.49%)</title><rect x="8.4404%" y="148" width="0.4893%" height="15" fill="rgb(237,122,38)" fg:x="138" fg:w="8"/><text x="8.6904%" y="158.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:124) (2 samples, 0.12%)</title><rect x="9.2355%" y="164" width="0.1223%" height="15" fill="rgb(244,218,35)" fg:x="151" fg:w="2"/><text x="9.4855%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:136) (2 samples, 0.12%)</title><rect x="9.4190%" y="164" width="0.1223%" height="15" fill="rgb(240,68,47)" fg:x="154" fg:w="2"/><text x="9.6690%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:137) (4 samples, 0.24%)</title><rect x="9.5413%" y="164" width="0.2446%" height="15" fill="rgb(210,16,53)" fg:x="156" fg:w="4"/><text x="9.7913%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:114) (23 samples, 1.41%)</title><rect x="8.4404%" y="132" width="1.4067%" height="15" fill="rgb(235,124,12)" fg:x="138" fg:w="23"/><text x="8.6904%" y="142.50"></text></g><g><title>create_index (kappybara/indexed_set.py:218) (15 samples, 0.92%)</title><rect x="8.9297%" y="148" width="0.9174%" height="15" fill="rgb(224,169,11)" fg:x="146" fg:w="15"/><text x="9.1797%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:116) (2 samples, 0.12%)</title><rect x="9.8471%" y="132" width="0.1223%" height="15" fill="rgb(250,166,2)" fg:x="161" fg:w="2"/><text x="10.0971%" y="142.50"></text></g><g><title>embeddings (kappybara/pattern.py:261) (3 samples, 0.18%)</title><rect x="10.2752%" y="148" width="0.1835%" height="15" fill="rgb(242,216,29)" fg:x="168" fg:w="3"/><text x="10.5252%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:264) (2 samples, 0.12%)</title><rect x="10.4587%" y="148" width="0.1223%" height="15" fill="rgb(230,116,27)" fg:x="171" fg:w="2"/><text x="10.7087%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:268) (14 samples, 0.86%)</title><rect x="10.6422%" y="148" width="0.8563%" height="15" fill="rgb(228,99,48)" fg:x="174" fg:w="14"/><text x="10.8922%" y="158.50"></text></g><g><title>lookup (kappybara/indexed_set.py:172) (3 samples, 0.18%)</title><rect x="11.3150%" y="164" width="0.1835%" height="15" fill="rgb(253,11,6)" fg:x="185" fg:w="3"/><text x="11.5650%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.12%)</title><rect x="14.3119%" y="164" width="0.1223%" height="15" fill="rgb(247,143,39)" fg:x="234" fg:w="2"/><text x="14.5619%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:270) (49 samples, 3.00%)</title><rect x="11.4985%" y="148" width="2.9969%" height="15" fill="rgb(236,97,10)" fg:x="188" fg:w="49"/><text x="11.7485%" y="158.50">emb..</text></g><g><title>embeddings (kappybara/pattern.py:271) (16 samples, 0.98%)</title><rect x="14.4954%" y="148" width="0.9786%" height="15" fill="rgb(233,208,19)" fg:x="237" fg:w="16"/><text x="14.7454%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:274) (4 samples, 0.24%)</title><rect x="15.4740%" y="148" width="0.2446%" height="15" fill="rgb(216,164,2)" fg:x="253" fg:w="4"/><text x="15.7240%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:275) (2 samples, 0.12%)</title><rect x="15.7187%" y="148" width="0.1223%" height="15" fill="rgb(220,129,5)" fg:x="257" fg:w="2"/><text x="15.9687%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:276) (13 samples, 0.80%)</title><rect x="15.8410%" y="148" width="0.7951%" height="15" fill="rgb(242,17,10)" fg:x="259" fg:w="13"/><text x="16.0910%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:278) (14 samples, 0.86%)</title><rect x="16.6361%" y="148" width="0.8563%" height="15" fill="rgb(242,107,0)" fg:x="272" fg:w="14"/><text x="16.8861%" y="158.50"></text></g><g><title>embeds_in (kappybara/pattern.py:173) (5 samples, 0.31%)</title><rect x="17.9817%" y="164" width="0.3058%" height="15" fill="rgb(251,28,31)" fg:x="294" fg:w="5"/><text x="18.2317%" y="174.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (6 samples, 0.37%)</title><rect x="18.6544%" y="180" width="0.3670%" height="15" fill="rgb(233,223,10)" fg:x="305" fg:w="6"/><text x="18.9044%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:111) (4 samples, 0.24%)</title><rect x="19.3272%" y="196" width="0.2446%" height="15" fill="rgb(215,21,27)" fg:x="316" fg:w="4"/><text x="19.5772%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:176) (35 samples, 2.14%)</title><rect x="18.2875%" y="164" width="2.1407%" height="15" fill="rgb(232,23,21)" fg:x="299" fg:w="35"/><text x="18.5375%" y="174.50">e..</text></g><g><title>__iter__ (kappybara/pattern.py:99) (23 samples, 1.41%)</title><rect x="19.0214%" y="180" width="1.4067%" height="15" fill="rgb(244,5,23)" fg:x="311" fg:w="23"/><text x="19.2714%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:113) (14 samples, 0.86%)</title><rect x="19.5719%" y="196" width="0.8563%" height="15" fill="rgb(226,81,46)" fg:x="320" fg:w="14"/><text x="19.8219%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:177) (6 samples, 0.37%)</title><rect x="20.4281%" y="164" width="0.3670%" height="15" fill="rgb(247,70,30)" fg:x="334" fg:w="6"/><text x="20.6781%" y="174.50"></text></g><g><title>__getitem__ (kappybara/pattern.py:101) (2 samples, 0.12%)</title><rect x="21.1621%" y="180" width="0.1223%" height="15" fill="rgb(212,68,19)" fg:x="346" fg:w="2"/><text x="21.4121%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:179) (13 samples, 0.80%)</title><rect x="20.7951%" y="164" width="0.7951%" height="15" fill="rgb(240,187,13)" fg:x="340" fg:w="13"/><text x="21.0451%" y="174.50"></text></g><g><title>__getitem__ (kappybara/pattern.py:102) (5 samples, 0.31%)</title><rect x="21.2844%" y="180" width="0.3058%" height="15" fill="rgb(223,113,26)" fg:x="348" fg:w="5"/><text x="21.5344%" y="190.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (7 samples, 0.43%)</title><rect x="24.0979%" y="180" width="0.4281%" height="15" fill="rgb(206,192,2)" fg:x="394" fg:w="7"/><text x="24.3479%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:70) (6 samples, 0.37%)</title><rect x="24.5260%" y="180" width="0.3670%" height="15" fill="rgb(241,108,4)" fg:x="401" fg:w="6"/><text x="24.7760%" y="190.50"></text></g><g><title>stated (kappybara/pattern.py:54) (3 samples, 0.18%)</title><rect x="24.7095%" y="196" width="0.1835%" height="15" fill="rgb(247,173,49)" fg:x="404" fg:w="3"/><text x="24.9595%" y="206.50"></text></g><g><title>bound (kappybara/pattern.py:59) (20 samples, 1.22%)</title><rect x="24.9541%" y="196" width="1.2232%" height="15" fill="rgb(224,114,35)" fg:x="408" fg:w="20"/><text x="25.2041%" y="206.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (9 samples, 0.55%)</title><rect x="25.6269%" y="212" width="0.5505%" height="15" fill="rgb(245,159,27)" fg:x="419" fg:w="9"/><text x="25.8769%" y="222.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.12%)</title><rect x="26.0550%" y="228" width="0.1223%" height="15" fill="rgb(245,172,44)" fg:x="426" fg:w="2"/><text x="26.3050%" y="238.50"></text></g><g><title>bound (kappybara/pattern.py:60) (4 samples, 0.24%)</title><rect x="26.1774%" y="196" width="0.2446%" height="15" fill="rgb(236,23,11)" fg:x="428" fg:w="4"/><text x="26.4274%" y="206.50"></text></g><g><title>bound (kappybara/pattern.py:61) (4 samples, 0.24%)</title><rect x="26.4220%" y="196" width="0.2446%" height="15" fill="rgb(205,117,38)" fg:x="432" fg:w="4"/><text x="26.6720%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:71) (32 samples, 1.96%)</title><rect x="24.8930%" y="180" width="1.9572%" height="15" fill="rgb(237,72,25)" fg:x="407" fg:w="32"/><text x="25.1430%" y="190.50">e..</text></g><g><title>coupled (kappybara/pattern.py:66) (2 samples, 0.12%)</title><rect x="26.7278%" y="196" width="0.1223%" height="15" fill="rgb(244,70,9)" fg:x="437" fg:w="2"/><text x="26.9778%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:76) (5 samples, 0.31%)</title><rect x="26.8502%" y="180" width="0.3058%" height="15" fill="rgb(217,125,39)" fg:x="439" fg:w="5"/><text x="27.1002%" y="190.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (3 samples, 0.18%)</title><rect x="26.9725%" y="196" width="0.1835%" height="15" fill="rgb(235,36,10)" fg:x="441" fg:w="3"/><text x="27.2225%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:77) (23 samples, 1.41%)</title><rect x="27.1560%" y="180" width="1.4067%" height="15" fill="rgb(251,123,47)" fg:x="444" fg:w="23"/><text x="27.4060%" y="190.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (14 samples, 0.86%)</title><rect x="27.7064%" y="196" width="0.8563%" height="15" fill="rgb(221,13,13)" fg:x="453" fg:w="14"/><text x="27.9564%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.18%)</title><rect x="28.3792%" y="212" width="0.1835%" height="15" fill="rgb(238,131,9)" fg:x="464" fg:w="3"/><text x="28.6292%" y="222.50"></text></g><g><title>embeds_in (kappybara/pattern.py:83) (7 samples, 0.43%)</title><rect x="28.6239%" y="180" width="0.4281%" height="15" fill="rgb(211,50,8)" fg:x="468" fg:w="7"/><text x="28.8739%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:85) (7 samples, 0.43%)</title><rect x="29.0520%" y="180" width="0.4281%" height="15" fill="rgb(245,182,24)" fg:x="475" fg:w="7"/><text x="29.3020%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:86) (2 samples, 0.12%)</title><rect x="29.4801%" y="180" width="0.1223%" height="15" fill="rgb(242,14,37)" fg:x="482" fg:w="2"/><text x="29.7301%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:180) (143 samples, 8.75%)</title><rect x="21.5902%" y="164" width="8.7462%" height="15" fill="rgb(246,228,12)" fg:x="353" fg:w="143"/><text x="21.8402%" y="174.50">embeds_in (k..</text></g><g><title>sites (kappybara/pattern.py:113) (12 samples, 0.73%)</title><rect x="29.6024%" y="180" width="0.7339%" height="15" fill="rgb(213,55,15)" fg:x="484" fg:w="12"/><text x="29.8524%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:279) (213 samples, 13.03%)</title><rect x="17.4924%" y="148" width="13.0275%" height="15" fill="rgb(209,9,3)" fg:x="286" fg:w="213"/><text x="17.7424%" y="158.50">embeddings (kappybar..</text></g><g><title>embeds_in (kappybara/pattern.py:181) (3 samples, 0.18%)</title><rect x="30.3364%" y="164" width="0.1835%" height="15" fill="rgb(230,59,30)" fg:x="496" fg:w="3"/><text x="30.5864%" y="174.50"></text></g><g><title>sites (kappybara/pattern.py:111) (3 samples, 0.18%)</title><rect x="30.7034%" y="180" width="0.1835%" height="15" fill="rgb(209,121,21)" fg:x="502" fg:w="3"/><text x="30.9534%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:283) (13 samples, 0.80%)</title><rect x="30.5199%" y="148" width="0.7951%" height="15" fill="rgb(220,109,13)" fg:x="499" fg:w="13"/><text x="30.7699%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (12 samples, 0.73%)</title><rect x="30.5810%" y="164" width="0.7339%" height="15" fill="rgb(232,18,1)" fg:x="500" fg:w="12"/><text x="30.8310%" y="174.50"></text></g><g><title>sites (kappybara/pattern.py:113) (7 samples, 0.43%)</title><rect x="30.8869%" y="180" width="0.4281%" height="15" fill="rgb(215,41,42)" fg:x="505" fg:w="7"/><text x="31.1369%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:284) (6 samples, 0.37%)</title><rect x="31.3150%" y="148" width="0.3670%" height="15" fill="rgb(224,123,36)" fg:x="512" fg:w="6"/><text x="31.5650%" y="158.50"></text></g><g><title>__getitem__ (kappybara/pattern.py:102) (3 samples, 0.18%)</title><rect x="31.4985%" y="164" width="0.1835%" height="15" fill="rgb(240,125,3)" fg:x="515" fg:w="3"/><text x="31.7485%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:286) (11 samples, 0.67%)</title><rect x="31.6820%" y="148" width="0.6728%" height="15" fill="rgb(205,98,50)" fg:x="518" fg:w="11"/><text x="31.9320%" y="158.50"></text></g><g><title>coupled (kappybara/pattern.py:66) (6 samples, 0.37%)</title><rect x="31.9878%" y="164" width="0.3670%" height="15" fill="rgb(205,185,37)" fg:x="523" fg:w="6"/><text x="32.2378%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:290) (4 samples, 0.24%)</title><rect x="32.3547%" y="148" width="0.2446%" height="15" fill="rgb(238,207,15)" fg:x="529" fg:w="4"/><text x="32.6047%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (3 samples, 0.18%)</title><rect x="33.0887%" y="164" width="0.1835%" height="15" fill="rgb(213,199,42)" fg:x="541" fg:w="3"/><text x="33.3387%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:293) (13 samples, 0.80%)</title><rect x="32.5994%" y="148" width="0.7951%" height="15" fill="rgb(235,201,11)" fg:x="533" fg:w="13"/><text x="32.8494%" y="158.50"></text></g><g><title>sites (kappybara/pattern.py:113) (2 samples, 0.12%)</title><rect x="33.2722%" y="164" width="0.1223%" height="15" fill="rgb(207,46,11)" fg:x="544" fg:w="2"/><text x="33.5222%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:295) (6 samples, 0.37%)</title><rect x="33.3945%" y="148" width="0.3670%" height="15" fill="rgb(241,35,35)" fg:x="546" fg:w="6"/><text x="33.6445%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:296) (2 samples, 0.12%)</title><rect x="33.7615%" y="148" width="0.1223%" height="15" fill="rgb(243,32,47)" fg:x="552" fg:w="2"/><text x="34.0115%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:297) (6 samples, 0.37%)</title><rect x="33.8838%" y="148" width="0.3670%" height="15" fill="rgb(247,202,23)" fg:x="554" fg:w="6"/><text x="34.1338%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:298) (17 samples, 1.04%)</title><rect x="34.2508%" y="148" width="1.0398%" height="15" fill="rgb(219,102,11)" fg:x="560" fg:w="17"/><text x="34.5008%" y="158.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (4 samples, 0.24%)</title><rect x="35.0459%" y="164" width="0.2446%" height="15" fill="rgb(243,110,44)" fg:x="573" fg:w="4"/><text x="35.2959%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:303) (3 samples, 0.18%)</title><rect x="35.2905%" y="148" width="0.1835%" height="15" fill="rgb(222,74,54)" fg:x="577" fg:w="3"/><text x="35.5405%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:117) (419 samples, 25.63%)</title><rect x="9.9694%" y="132" width="25.6269%" height="15" fill="rgb(216,99,12)" fg:x="163" fg:w="419"/><text x="10.2194%" y="142.50">apply_update (kappybara/mixture.py:117)</text></g><g><title>add (kappybara/indexed_set.py:130) (21 samples, 1.28%)</title><rect x="35.7798%" y="148" width="1.2844%" height="15" fill="rgb(226,22,26)" fg:x="585" fg:w="21"/><text x="36.0298%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (15 samples, 0.92%)</title><rect x="36.1468%" y="164" width="0.9174%" height="15" fill="rgb(217,163,10)" fg:x="591" fg:w="15"/><text x="36.3968%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:133) (12 samples, 0.73%)</title><rect x="37.0642%" y="148" width="0.7339%" height="15" fill="rgb(213,25,53)" fg:x="606" fg:w="12"/><text x="37.3142%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (4 samples, 0.24%)</title><rect x="37.5535%" y="164" width="0.2446%" height="15" fill="rgb(252,105,26)" fg:x="614" fg:w="4"/><text x="37.8035%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:137) (10 samples, 0.61%)</title><rect x="37.8593%" y="148" width="0.6116%" height="15" fill="rgb(220,39,43)" fg:x="619" fg:w="10"/><text x="38.1093%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (6 samples, 0.37%)</title><rect x="38.1040%" y="164" width="0.3670%" height="15" fill="rgb(229,68,48)" fg:x="623" fg:w="6"/><text x="38.3540%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:140) (2 samples, 0.12%)</title><rect x="38.4709%" y="148" width="0.1223%" height="15" fill="rgb(252,8,32)" fg:x="629" fg:w="2"/><text x="38.7209%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:141) (3 samples, 0.18%)</title><rect x="38.5933%" y="148" width="0.1835%" height="15" fill="rgb(223,20,43)" fg:x="631" fg:w="3"/><text x="38.8433%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:143) (25 samples, 1.53%)</title><rect x="38.7768%" y="148" width="1.5291%" height="15" fill="rgb(229,81,49)" fg:x="634" fg:w="25"/><text x="39.0268%" y="158.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:66) (16 samples, 0.98%)</title><rect x="39.3272%" y="164" width="0.9786%" height="15" fill="rgb(236,28,36)" fg:x="643" fg:w="16"/><text x="39.5772%" y="174.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:184) (13 samples, 0.80%)</title><rect x="39.5107%" y="180" width="0.7951%" height="15" fill="rgb(249,185,26)" fg:x="646" fg:w="13"/><text x="39.7607%" y="190.50"></text></g><g><title>lookup (kappybara/indexed_set.py:172) (3 samples, 0.18%)</title><rect x="40.1223%" y="196" width="0.1835%" height="15" fill="rgb(249,174,33)" fg:x="656" fg:w="3"/><text x="40.3723%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:144) (3 samples, 0.18%)</title><rect x="40.3058%" y="148" width="0.1835%" height="15" fill="rgb(233,201,37)" fg:x="659" fg:w="3"/><text x="40.5558%" y="158.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:121) (4 samples, 0.24%)</title><rect x="42.1407%" y="164" width="0.2446%" height="15" fill="rgb(221,78,26)" fg:x="689" fg:w="4"/><text x="42.3907%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:124) (7 samples, 0.43%)</title><rect x="42.3853%" y="164" width="0.4281%" height="15" fill="rgb(250,127,30)" fg:x="693" fg:w="7"/><text x="42.6353%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:126) (3 samples, 0.18%)</title><rect x="42.8135%" y="164" width="0.1835%" height="15" fill="rgb(230,49,44)" fg:x="700" fg:w="3"/><text x="43.0635%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:130) (30 samples, 1.83%)</title><rect x="42.9969%" y="164" width="1.8349%" height="15" fill="rgb(229,67,23)" fg:x="703" fg:w="30"/><text x="43.2469%" y="174.50">a..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (22 samples, 1.35%)</title><rect x="43.4862%" y="180" width="1.3456%" height="15" fill="rgb(249,83,47)" fg:x="711" fg:w="22"/><text x="43.7362%" y="190.50"></text></g><g><title>add (kappybara/indexed_set.py:133) (31 samples, 1.90%)</title><rect x="44.8930%" y="164" width="1.8960%" height="15" fill="rgb(215,43,3)" fg:x="734" fg:w="31"/><text x="45.1430%" y="174.50">a..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (26 samples, 1.59%)</title><rect x="45.1988%" y="180" width="1.5902%" height="15" fill="rgb(238,154,13)" fg:x="739" fg:w="26"/><text x="45.4488%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.12%)</title><rect x="46.6667%" y="196" width="0.1223%" height="15" fill="rgb(219,56,2)" fg:x="763" fg:w="2"/><text x="46.9167%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:136) (2 samples, 0.12%)</title><rect x="46.7890%" y="164" width="0.1223%" height="15" fill="rgb(233,0,4)" fg:x="765" fg:w="2"/><text x="47.0390%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:137) (31 samples, 1.90%)</title><rect x="46.9113%" y="164" width="1.8960%" height="15" fill="rgb(235,30,7)" fg:x="767" fg:w="31"/><text x="47.1613%" y="174.50">a..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (20 samples, 1.22%)</title><rect x="47.5841%" y="180" width="1.2232%" height="15" fill="rgb(250,79,13)" fg:x="778" fg:w="20"/><text x="47.8341%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.18%)</title><rect x="48.6239%" y="196" width="0.1835%" height="15" fill="rgb(211,146,34)" fg:x="795" fg:w="3"/><text x="48.8739%" y="206.50"></text></g><g><title>apply_update (kappybara/mixture.py:118) (225 samples, 13.76%)</title><rect x="35.5963%" y="132" width="13.7615%" height="15" fill="rgb(228,22,38)" fg:x="582" fg:w="225"/><text x="35.8463%" y="142.50">apply_update (kappyba..</text></g><g><title>add (kappybara/indexed_set.py:146) (145 samples, 8.87%)</title><rect x="40.4893%" y="148" width="8.8685%" height="15" fill="rgb(235,168,5)" fg:x="662" fg:w="145"/><text x="40.7393%" y="158.50">add (kappybar..</text></g><g><title>add (kappybara/indexed_set.py:140) (9 samples, 0.55%)</title><rect x="48.8073%" y="164" width="0.5505%" height="15" fill="rgb(221,155,16)" fg:x="798" fg:w="9"/><text x="49.0573%" y="174.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:180) (2 samples, 0.12%)</title><rect x="49.8471%" y="148" width="0.1223%" height="15" fill="rgb(215,215,53)" fg:x="815" fg:w="2"/><text x="50.0971%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:185) (3 samples, 0.18%)</title><rect x="49.9694%" y="148" width="0.1835%" height="15" fill="rgb(223,4,10)" fg:x="817" fg:w="3"/><text x="50.2194%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:190) (2 samples, 0.12%)</title><rect x="50.1529%" y="148" width="0.1223%" height="15" fill="rgb(234,103,6)" fg:x="820" fg:w="2"/><text x="50.4029%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:192) (2 samples, 0.12%)</title><rect x="50.2752%" y="148" width="0.1223%" height="15" fill="rgb(227,97,0)" fg:x="822" fg:w="2"/><text x="50.5252%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:195) (20 samples, 1.22%)</title><rect x="50.3976%" y="148" width="1.2232%" height="15" fill="rgb(234,150,53)" fg:x="824" fg:w="20"/><text x="50.6476%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (16 samples, 0.98%)</title><rect x="50.6422%" y="164" width="0.9786%" height="15" fill="rgb(228,201,54)" fg:x="828" fg:w="16"/><text x="50.8922%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (4 samples, 0.24%)</title><rect x="51.3761%" y="180" width="0.2446%" height="15" fill="rgb(222,22,37)" fg:x="840" fg:w="4"/><text x="51.6261%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:149) (4 samples, 0.24%)</title><rect x="51.8043%" y="164" width="0.2446%" height="15" fill="rgb(237,53,32)" fg:x="847" fg:w="4"/><text x="52.0543%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (4 samples, 0.24%)</title><rect x="51.8043%" y="180" width="0.2446%" height="15" fill="rgb(233,25,53)" fg:x="847" fg:w="4"/><text x="52.0543%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:150) (14 samples, 0.86%)</title><rect x="52.0489%" y="164" width="0.8563%" height="15" fill="rgb(210,40,34)" fg:x="851" fg:w="14"/><text x="52.2989%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (6 samples, 0.37%)</title><rect x="52.5382%" y="180" width="0.3670%" height="15" fill="rgb(241,220,44)" fg:x="859" fg:w="6"/><text x="52.7882%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:153) (11 samples, 0.67%)</title><rect x="52.9052%" y="164" width="0.6728%" height="15" fill="rgb(235,28,35)" fg:x="865" fg:w="11"/><text x="53.1552%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (8 samples, 0.49%)</title><rect x="53.0887%" y="180" width="0.4893%" height="15" fill="rgb(210,56,17)" fg:x="868" fg:w="8"/><text x="53.3387%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:157) (13 samples, 0.80%)</title><rect x="53.7003%" y="164" width="0.7951%" height="15" fill="rgb(224,130,29)" fg:x="878" fg:w="13"/><text x="53.9503%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (12 samples, 0.73%)</title><rect x="53.7615%" y="180" width="0.7339%" height="15" fill="rgb(235,212,8)" fg:x="879" fg:w="12"/><text x="54.0115%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:160) (3 samples, 0.18%)</title><rect x="54.4954%" y="164" width="0.1835%" height="15" fill="rgb(223,33,50)" fg:x="891" fg:w="3"/><text x="54.7454%" y="174.50"></text></g><g><title>lookup (kappybara/indexed_set.py:171) (2 samples, 0.12%)</title><rect x="55.7798%" y="212" width="0.1223%" height="15" fill="rgb(219,149,13)" fg:x="912" fg:w="2"/><text x="56.0298%" y="222.50"></text></g><g><title>lookup (kappybara/indexed_set.py:172) (2 samples, 0.12%)</title><rect x="55.9021%" y="212" width="0.1223%" height="15" fill="rgb(250,156,29)" fg:x="914" fg:w="2"/><text x="56.1521%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:163) (23 samples, 1.41%)</title><rect x="54.7401%" y="164" width="1.4067%" height="15" fill="rgb(216,193,19)" fg:x="895" fg:w="23"/><text x="54.9901%" y="174.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:66) (13 samples, 0.80%)</title><rect x="55.3517%" y="180" width="0.7951%" height="15" fill="rgb(216,135,14)" fg:x="905" fg:w="13"/><text x="55.6017%" y="190.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:184) (13 samples, 0.80%)</title><rect x="55.3517%" y="196" width="0.7951%" height="15" fill="rgb(241,47,5)" fg:x="905" fg:w="13"/><text x="55.6017%" y="206.50"></text></g><g><title>remove (kappybara/indexed_set.py:149) (31 samples, 1.90%)</title><rect x="56.8196%" y="180" width="1.8960%" height="15" fill="rgb(233,42,35)" fg:x="929" fg:w="31"/><text x="57.0696%" y="190.50">r..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (26 samples, 1.59%)</title><rect x="57.1254%" y="196" width="1.5902%" height="15" fill="rgb(231,13,6)" fg:x="934" fg:w="26"/><text x="57.3754%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.18%)</title><rect x="58.5321%" y="212" width="0.1835%" height="15" fill="rgb(207,181,40)" fg:x="957" fg:w="3"/><text x="58.7821%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:150) (42 samples, 2.57%)</title><rect x="58.7156%" y="180" width="2.5688%" height="15" fill="rgb(254,173,49)" fg:x="960" fg:w="42"/><text x="58.9656%" y="190.50">re..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (26 samples, 1.59%)</title><rect x="59.6942%" y="196" width="1.5902%" height="15" fill="rgb(221,1,38)" fg:x="976" fg:w="26"/><text x="59.9442%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.18%)</title><rect x="61.1009%" y="212" width="0.1835%" height="15" fill="rgb(206,124,46)" fg:x="999" fg:w="3"/><text x="61.3509%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:153) (32 samples, 1.96%)</title><rect x="61.2844%" y="180" width="1.9572%" height="15" fill="rgb(249,21,11)" fg:x="1002" fg:w="32"/><text x="61.5344%" y="190.50">r..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (24 samples, 1.47%)</title><rect x="61.7737%" y="196" width="1.4679%" height="15" fill="rgb(222,201,40)" fg:x="1010" fg:w="24"/><text x="62.0237%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.18%)</title><rect x="63.0581%" y="212" width="0.1835%" height="15" fill="rgb(235,61,29)" fg:x="1031" fg:w="3"/><text x="63.3081%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:154) (4 samples, 0.24%)</title><rect x="63.2416%" y="180" width="0.2446%" height="15" fill="rgb(219,207,3)" fg:x="1034" fg:w="4"/><text x="63.4916%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:155) (8 samples, 0.49%)</title><rect x="63.4862%" y="180" width="0.4893%" height="15" fill="rgb(222,56,46)" fg:x="1038" fg:w="8"/><text x="63.7362%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:157) (14 samples, 0.86%)</title><rect x="64.0367%" y="180" width="0.8563%" height="15" fill="rgb(239,76,54)" fg:x="1047" fg:w="14"/><text x="64.2867%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (8 samples, 0.49%)</title><rect x="64.4037%" y="196" width="0.4893%" height="15" fill="rgb(231,124,27)" fg:x="1053" fg:w="8"/><text x="64.6537%" y="206.50"></text></g><g><title>remove (kappybara/indexed_set.py:164) (147 samples, 8.99%)</title><rect x="56.1468%" y="164" width="8.9908%" height="15" fill="rgb(249,195,6)" fg:x="918" fg:w="147"/><text x="56.3968%" y="174.50">remove (kappy..</text></g><g><title>remove (kappybara/indexed_set.py:160) (4 samples, 0.24%)</title><rect x="64.8930%" y="180" width="0.2446%" height="15" fill="rgb(237,174,47)" fg:x="1061" fg:w="4"/><text x="65.1430%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:167) (5 samples, 0.31%)</title><rect x="65.1376%" y="164" width="0.3058%" height="15" fill="rgb(206,201,31)" fg:x="1065" fg:w="5"/><text x="65.3876%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:91) (266 samples, 16.27%)</title><rect x="49.4801%" y="132" width="16.2691%" height="15" fill="rgb(231,57,52)" fg:x="809" fg:w="266"/><text x="49.7301%" y="142.50">apply_update (kappybara/m..</text></g><g><title>remove_by (kappybara/indexed_set.py:196) (231 samples, 14.13%)</title><rect x="51.6208%" y="148" width="14.1284%" height="15" fill="rgb(248,177,22)" fg:x="844" fg:w="231"/><text x="51.8708%" y="158.50">remove_by (kappybara/..</text></g><g><title>remove (kappybara/indexed_set.py:168) (5 samples, 0.31%)</title><rect x="65.4434%" y="164" width="0.3058%" height="15" fill="rgb(215,211,37)" fg:x="1070" fg:w="5"/><text x="65.6934%" y="174.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:155) (3 samples, 0.18%)</title><rect x="66.1162%" y="164" width="0.1835%" height="15" fill="rgb(241,128,51)" fg:x="1081" fg:w="3"/><text x="66.3662%" y="174.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (2 samples, 0.12%)</title><rect x="66.1774%" y="180" width="0.1223%" height="15" fill="rgb(227,165,31)" fg:x="1082" fg:w="2"/><text x="66.4274%" y="190.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:252) (5 samples, 0.31%)</title><rect x="66.0550%" y="148" width="0.3058%" height="15" fill="rgb(228,167,24)" fg:x="1080" fg:w="5"/><text x="66.3050%" y="158.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:121) (17 samples, 1.04%)</title><rect x="66.7278%" y="180" width="1.0398%" height="15" fill="rgb(228,143,12)" fg:x="1091" fg:w="17"/><text x="66.9778%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.12%)</title><rect x="67.6453%" y="196" width="0.1223%" height="15" fill="rgb(249,149,8)" fg:x="1106" fg:w="2"/><text x="67.8953%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.12%)</title><rect x="68.5627%" y="196" width="0.1223%" height="15" fill="rgb(243,35,44)" fg:x="1121" fg:w="2"/><text x="68.8127%" y="206.50"></text></g><g><title>__init__ (kappybara/pattern.py:219) (35 samples, 2.14%)</title><rect x="66.6667%" y="164" width="2.1407%" height="15" fill="rgb(246,89,9)" fg:x="1090" fg:w="35"/><text x="66.9167%" y="174.50">_..</text></g><g><title>__init__ (kappybara/indexed_set.py:124) (16 samples, 0.98%)</title><rect x="67.8287%" y="180" width="0.9786%" height="15" fill="rgb(233,213,13)" fg:x="1109" fg:w="16"/><text x="68.0787%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.12%)</title><rect x="68.6850%" y="196" width="0.1223%" height="15" fill="rgb(233,141,41)" fg:x="1123" fg:w="2"/><text x="68.9350%" y="206.50"></text></g><g><title>create_index (kappybara/indexed_set.py:214) (4 samples, 0.24%)</title><rect x="69.0520%" y="180" width="0.2446%" height="15" fill="rgb(239,167,4)" fg:x="1129" fg:w="4"/><text x="69.3020%" y="190.50"></text></g><g><title>create_index (kappybara/indexed_set.py:215) (53 samples, 3.24%)</title><rect x="69.2966%" y="180" width="3.2416%" height="15" fill="rgb(209,217,16)" fg:x="1133" fg:w="53"/><text x="69.5466%" y="190.50">cre..</text></g><g><title>__call__ (kappybara/indexed_set.py:66) (18 samples, 1.10%)</title><rect x="71.4373%" y="196" width="1.1009%" height="15" fill="rgb(219,88,35)" fg:x="1168" fg:w="18"/><text x="71.6873%" y="206.50"></text></g><g><title>&lt;lambda&gt; (kappybara/pattern.py:221) (3 samples, 0.18%)</title><rect x="72.3547%" y="212" width="0.1835%" height="15" fill="rgb(220,193,23)" fg:x="1183" fg:w="3"/><text x="72.6047%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:129) (2 samples, 0.12%)</title><rect x="74.6789%" y="196" width="0.1223%" height="15" fill="rgb(230,90,52)" fg:x="1221" fg:w="2"/><text x="74.9289%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:130) (17 samples, 1.04%)</title><rect x="74.8012%" y="196" width="1.0398%" height="15" fill="rgb(252,106,19)" fg:x="1223" fg:w="17"/><text x="75.0512%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.12%)</title><rect x="75.7187%" y="212" width="0.1223%" height="15" fill="rgb(206,74,20)" fg:x="1238" fg:w="2"/><text x="75.9687%" y="222.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.12%)</title><rect x="76.8196%" y="212" width="0.1223%" height="15" fill="rgb(230,138,44)" fg:x="1256" fg:w="2"/><text x="77.0696%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:133) (20 samples, 1.22%)</title><rect x="75.9021%" y="196" width="1.2232%" height="15" fill="rgb(235,182,43)" fg:x="1241" fg:w="20"/><text x="76.1521%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.18%)</title><rect x="76.9419%" y="212" width="0.1835%" height="15" fill="rgb(242,16,51)" fg:x="1258" fg:w="3"/><text x="77.1919%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:136) (7 samples, 0.43%)</title><rect x="77.1254%" y="196" width="0.4281%" height="15" fill="rgb(248,9,4)" fg:x="1261" fg:w="7"/><text x="77.3754%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:137) (32 samples, 1.96%)</title><rect x="77.5535%" y="196" width="1.9572%" height="15" fill="rgb(210,31,22)" fg:x="1268" fg:w="32"/><text x="77.8035%" y="206.50">a..</text></g><g><title>__init__ (kappybara/pattern.py:221) (184 samples, 11.25%)</title><rect x="68.8073%" y="164" width="11.2538%" height="15" fill="rgb(239,54,39)" fg:x="1125" fg:w="184"/><text x="69.0573%" y="174.50">__init__ (kappyba..</text></g><g><title>create_index (kappybara/indexed_set.py:218) (123 samples, 7.52%)</title><rect x="72.5382%" y="180" width="7.5229%" height="15" fill="rgb(230,99,41)" fg:x="1186" fg:w="123"/><text x="72.7882%" y="190.50">create_ind..</text></g><g><title>add (kappybara/indexed_set.py:140) (9 samples, 0.55%)</title><rect x="79.5107%" y="196" width="0.5505%" height="15" fill="rgb(253,106,12)" fg:x="1300" fg:w="9"/><text x="79.7607%" y="206.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:130) (5 samples, 0.31%)</title><rect x="80.0612%" y="164" width="0.3058%" height="15" fill="rgb(213,46,41)" fg:x="1309" fg:w="5"/><text x="80.3112%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (6 samples, 0.37%)</title><rect x="83.5474%" y="180" width="0.3670%" height="15" fill="rgb(215,133,35)" fg:x="1366" fg:w="6"/><text x="83.7974%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:131) (68 samples, 4.16%)</title><rect x="80.3670%" y="164" width="4.1590%" height="15" fill="rgb(213,28,5)" fg:x="1314" fg:w="68"/><text x="80.6170%" y="174.50">depth..</text></g><g><title>__hash__ (kappybara/utils.py:30) (10 samples, 0.61%)</title><rect x="83.9144%" y="180" width="0.6116%" height="15" fill="rgb(215,77,49)" fg:x="1372" fg:w="10"/><text x="84.1644%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:132) (17 samples, 1.04%)</title><rect x="84.5260%" y="164" width="1.0398%" height="15" fill="rgb(248,100,22)" fg:x="1382" fg:w="17"/><text x="84.7760%" y="174.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:133) (4 samples, 0.24%)</title><rect x="85.5657%" y="164" width="0.2446%" height="15" fill="rgb(208,67,9)" fg:x="1399" fg:w="4"/><text x="85.8157%" y="174.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (3 samples, 0.18%)</title><rect x="91.8654%" y="196" width="0.1835%" height="15" fill="rgb(219,133,21)" fg:x="1502" fg:w="3"/><text x="92.1154%" y="206.50"></text></g><g><title>sites (kappybara/pattern.py:111) (6 samples, 0.37%)</title><rect x="92.9052%" y="212" width="0.3670%" height="15" fill="rgb(246,46,29)" fg:x="1519" fg:w="6"/><text x="93.1552%" y="222.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (46 samples, 2.81%)</title><rect x="92.0489%" y="196" width="2.8135%" height="15" fill="rgb(246,185,52)" fg:x="1505" fg:w="46"/><text x="92.2989%" y="206.50">__..</text></g><g><title>sites (kappybara/pattern.py:113) (26 samples, 1.59%)</title><rect x="93.2722%" y="212" width="1.5902%" height="15" fill="rgb(252,136,11)" fg:x="1525" fg:w="26"/><text x="93.5222%" y="222.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:260) (488 samples, 29.85%)</title><rect x="66.4220%" y="148" width="29.8471%" height="15" fill="rgb(219,138,53)" fg:x="1086" fg:w="488"/><text x="66.6720%" y="158.50">_remove_edge (kappybara/mixture.py:260)</text></g><g><title>depth_first_traversal (kappybara/pattern.py:134) (171 samples, 10.46%)</title><rect x="85.8104%" y="164" width="10.4587%" height="15" fill="rgb(211,51,23)" fg:x="1403" fg:w="171"/><text x="86.0604%" y="174.50">depth_first_tra..</text></g><g><title>neighbors (kappybara/pattern.py:122) (144 samples, 8.81%)</title><rect x="87.4618%" y="180" width="8.8073%" height="15" fill="rgb(247,221,28)" fg:x="1430" fg:w="144"/><text x="87.7118%" y="190.50">neighbors (k..</text></g><g><title>coupled (kappybara/pattern.py:66) (22 samples, 1.35%)</title><rect x="94.9235%" y="196" width="1.3456%" height="15" fill="rgb(251,222,45)" fg:x="1552" fg:w="22"/><text x="95.1735%" y="206.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (12 samples, 0.73%)</title><rect x="96.7584%" y="164" width="0.7339%" height="15" fill="rgb(217,162,53)" fg:x="1582" fg:w="12"/><text x="97.0084%" y="174.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:262) (26 samples, 1.59%)</title><rect x="96.2691%" y="148" width="1.5902%" height="15" fill="rgb(229,93,14)" fg:x="1574" fg:w="26"/><text x="96.5191%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:225) (6 samples, 0.37%)</title><rect x="97.4924%" y="164" width="0.3670%" height="15" fill="rgb(209,67,49)" fg:x="1594" fg:w="6"/><text x="97.7424%" y="174.50"></text></g><g><title>remove (kappybara/indexed_set.py:149) (3 samples, 0.18%)</title><rect x="97.8593%" y="164" width="0.1835%" height="15" fill="rgb(213,87,29)" fg:x="1600" fg:w="3"/><text x="98.1093%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (3 samples, 0.18%)</title><rect x="97.8593%" y="180" width="0.1835%" height="15" fill="rgb(205,151,52)" fg:x="1600" fg:w="3"/><text x="98.1093%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:164) (5 samples, 0.31%)</title><rect x="98.1651%" y="164" width="0.3058%" height="15" fill="rgb(253,215,39)" fg:x="1605" fg:w="5"/><text x="98.4151%" y="174.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:274) (11 samples, 0.67%)</title><rect x="97.8593%" y="148" width="0.6728%" height="15" fill="rgb(221,220,41)" fg:x="1600" fg:w="11"/><text x="98.1093%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:130) (2 samples, 0.12%)</title><rect x="98.7156%" y="180" width="0.1223%" height="15" fill="rgb(218,133,21)" fg:x="1614" fg:w="2"/><text x="98.9656%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (2 samples, 0.12%)</title><rect x="98.7156%" y="196" width="0.1223%" height="15" fill="rgb(221,193,43)" fg:x="1614" fg:w="2"/><text x="98.9656%" y="206.50"></text></g><g><title>apply_update (kappybara/mixture.py:94) (544 samples, 33.27%)</title><rect x="65.7492%" y="132" width="33.2722%" height="15" fill="rgb(240,128,52)" fg:x="1075" fg:w="544"/><text x="65.9992%" y="142.50">apply_update (kappybara/mixture.py:94)</text></g><g><title>_remove_edge (kappybara/mixture.py:294) (7 samples, 0.43%)</title><rect x="98.5933%" y="148" width="0.4281%" height="15" fill="rgb(253,114,12)" fg:x="1612" fg:w="7"/><text x="98.8433%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:146) (5 samples, 0.31%)</title><rect x="98.7156%" y="164" width="0.3058%" height="15" fill="rgb(215,223,47)" fg:x="1614" fg:w="5"/><text x="98.9656%" y="174.50"></text></g><g><title>act (kappybara/system.py:66) (1,518 samples, 92.84%)</title><rect x="6.2385%" y="100" width="92.8440%" height="15" fill="rgb(248,225,23)" fg:x="102" fg:w="1518"/><text x="6.4885%" y="110.50">act (kappybara/system.py:66)</text></g><g><title>apply_update (kappybara/mixture.py:188) (1,518 samples, 92.84%)</title><rect x="6.2385%" y="116" width="92.8440%" height="15" fill="rgb(250,108,0)" fg:x="102" fg:w="1518"/><text x="6.4885%" y="126.50">apply_update (kappybara/mixture.py:188)</text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:23) (1,611 samples, 98.53%)</title><rect x="0.6116%" y="68" width="98.5321%" height="15" fill="rgb(228,208,7)" fg:x="10" fg:w="1611"/><text x="0.8616%" y="78.50">&lt;module&gt; (profile_uni_bi_small.py:23)</text></g><g><title>update (kappybara/system.py:71) (1,572 samples, 96.15%)</title><rect x="2.9969%" y="84" width="96.1468%" height="15" fill="rgb(244,45,10)" fg:x="49" fg:w="1572"/><text x="3.2469%" y="94.50">update (kappybara/system.py:71)</text></g><g><title>_get_parser (lark/load_grammar.py:938) (2 samples, 0.12%)</title><rect x="99.1437%" y="372" width="0.1223%" height="15" fill="rgb(207,125,25)" fg:x="1621" fg:w="2"/><text x="99.3937%" y="382.50"></text></g><g><title>__init__ (lark/parser_frontends.py:61) (2 samples, 0.12%)</title><rect x="99.1437%" y="388" width="0.1223%" height="15" fill="rgb(210,195,18)" fg:x="1621" fg:w="2"/><text x="99.3937%" y="398.50"></text></g><g><title>create_lalr_parser (lark/parser_frontends.py:161) (2 samples, 0.12%)</title><rect x="99.1437%" y="404" width="0.1223%" height="15" fill="rgb(249,80,12)" fg:x="1621" fg:w="2"/><text x="99.3937%" y="414.50"></text></g><g><title>__init__ (lark/parsers/lalr_parser.py:20) (2 samples, 0.12%)</title><rect x="99.1437%" y="420" width="0.1223%" height="15" fill="rgb(221,65,9)" fg:x="1621" fg:w="2"/><text x="99.3937%" y="430.50"></text></g><g><title>compute_lalr (lark/parsers/lalr_analysis.py:328) (2 samples, 0.12%)</title><rect x="99.1437%" y="436" width="0.1223%" height="15" fill="rgb(235,49,36)" fg:x="1621" fg:w="2"/><text x="99.3937%" y="446.50"></text></g><g><title>compute_lr0_states (lark/parsers/lalr_analysis.py:191) (2 samples, 0.12%)</title><rect x="99.1437%" y="452" width="0.1223%" height="15" fill="rgb(225,32,20)" fg:x="1621" fg:w="2"/><text x="99.3937%" y="462.50"></text></g><g><title>bfs (lark/utils.py:266) (2 samples, 0.12%)</title><rect x="99.1437%" y="468" width="0.1223%" height="15" fill="rgb(215,141,46)" fg:x="1621" fg:w="2"/><text x="99.3937%" y="478.50"></text></g><g><title>_parse_grammar (lark/load_grammar.py:966) (4 samples, 0.24%)</title><rect x="99.1437%" y="356" width="0.2446%" height="15" fill="rgb(250,160,47)" fg:x="1621" fg:w="4"/><text x="99.3937%" y="366.50"></text></g><g><title>parse (lark/parser_frontends.py:104) (2 samples, 0.12%)</title><rect x="99.2661%" y="372" width="0.1223%" height="15" fill="rgb(216,222,40)" fg:x="1623" fg:w="2"/><text x="99.5161%" y="382.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:42) (2 samples, 0.12%)</title><rect x="99.2661%" y="388" width="0.1223%" height="15" fill="rgb(234,217,39)" fg:x="1623" fg:w="2"/><text x="99.5161%" y="398.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:88) (2 samples, 0.12%)</title><rect x="99.2661%" y="404" width="0.1223%" height="15" fill="rgb(207,178,40)" fg:x="1623" fg:w="2"/><text x="99.5161%" y="414.50"></text></g><g><title>&lt;module&gt; (kappybara/grammar.py:35) (5 samples, 0.31%)</title><rect x="99.1437%" y="260" width="0.3058%" height="15" fill="rgb(221,136,13)" fg:x="1621" fg:w="5"/><text x="99.3937%" y="270.50"></text></g><g><title>__init__ (kappybara/grammar.py:15) (5 samples, 0.31%)</title><rect x="99.1437%" y="276" width="0.3058%" height="15" fill="rgb(249,199,10)" fg:x="1621" fg:w="5"/><text x="99.3937%" y="286.50"></text></g><g><title>open (lark/lark.py:577) (5 samples, 0.31%)</title><rect x="99.1437%" y="292" width="0.3058%" height="15" fill="rgb(249,222,13)" fg:x="1621" fg:w="5"/><text x="99.3937%" y="302.50"></text></g><g><title>__init__ (lark/lark.py:357) (5 samples, 0.31%)</title><rect x="99.1437%" y="308" width="0.3058%" height="15" fill="rgb(244,185,38)" fg:x="1621" fg:w="5"/><text x="99.3937%" y="318.50"></text></g><g><title>load_grammar (lark/load_grammar.py:1415) (5 samples, 0.31%)</title><rect x="99.1437%" y="324" width="0.3058%" height="15" fill="rgb(236,202,9)" fg:x="1621" fg:w="5"/><text x="99.3937%" y="334.50"></text></g><g><title>load_grammar (lark/load_grammar.py:1240) (5 samples, 0.31%)</title><rect x="99.1437%" y="340" width="0.3058%" height="15" fill="rgb(250,229,37)" fg:x="1621" fg:w="5"/><text x="99.3937%" y="350.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:3) (6 samples, 0.37%)</title><rect x="99.1437%" y="68" width="0.3670%" height="15" fill="rgb(206,174,23)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (6 samples, 0.37%)</title><rect x="99.1437%" y="84" width="0.3670%" height="15" fill="rgb(211,33,43)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (6 samples, 0.37%)</title><rect x="99.1437%" y="100" width="0.3670%" height="15" fill="rgb(245,58,50)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (6 samples, 0.37%)</title><rect x="99.1437%" y="116" width="0.3670%" height="15" fill="rgb(244,68,36)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (6 samples, 0.37%)</title><rect x="99.1437%" y="132" width="0.3670%" height="15" fill="rgb(232,229,15)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (6 samples, 0.37%)</title><rect x="99.1437%" y="148" width="0.3670%" height="15" fill="rgb(254,30,23)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="158.50"></text></g><g><title>&lt;module&gt; (kappybara/kappa.py:6) (6 samples, 0.37%)</title><rect x="99.1437%" y="164" width="0.3670%" height="15" fill="rgb(235,160,14)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (6 samples, 0.37%)</title><rect x="99.1437%" y="180" width="0.3670%" height="15" fill="rgb(212,155,44)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (6 samples, 0.37%)</title><rect x="99.1437%" y="196" width="0.3670%" height="15" fill="rgb(226,2,50)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (6 samples, 0.37%)</title><rect x="99.1437%" y="212" width="0.3670%" height="15" fill="rgb(234,177,6)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (6 samples, 0.37%)</title><rect x="99.1437%" y="228" width="0.3670%" height="15" fill="rgb(217,24,9)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (6 samples, 0.37%)</title><rect x="99.1437%" y="244" width="0.3670%" height="15" fill="rgb(220,13,46)" fg:x="1621" fg:w="6"/><text x="99.3937%" y="254.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (2 samples, 0.12%)</title><rect x="99.5107%" y="68" width="0.1223%" height="15" fill="rgb(239,221,27)" fg:x="1627" fg:w="2"/><text x="99.7607%" y="78.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (3 samples, 0.18%)</title><rect x="99.6330%" y="68" width="0.1835%" height="15" fill="rgb(222,198,25)" fg:x="1629" fg:w="3"/><text x="99.8830%" y="78.50"></text></g><g><title>all (1,635 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(211,99,13)" fg:x="0" fg:w="1635"/><text x="0.2500%" y="62.50"></text></g><g><title>sites (kappybara/pattern.py:113) (2 samples, 0.12%)</title><rect x="99.8777%" y="68" width="0.1223%" height="15" fill="rgb(232,111,31)" fg:x="1633" fg:w="2"/><text x="100.1277%" y="78.50"></text></g></svg></svg>