<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="682" onload="init(evt)" viewBox="0 0 1200 682" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="682" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o results/profile_uni_bi_disperse_flamegraph.svg -- python profile_uni_bi_disperse.py # commit 668e3cc</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="671.00"> </text><svg id="frames" x="10" width="1180" total_samples="201"><g><title>&lt;module&gt; (profile_uni_bi_disperse.py:1) (1 samples, 0.50%)</title><rect x="0.0000%" y="68" width="0.4975%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="0.0000%" y="84" width="0.4975%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="0.0000%" y="100" width="0.4975%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="0.0000%" y="116" width="0.4975%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="0.0000%" y="132" width="0.4975%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="0.0000%" y="148" width="0.4975%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (kappybara/mixture.py:1) (1 samples, 0.50%)</title><rect x="0.0000%" y="164" width="0.4975%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="0.0000%" y="180" width="0.4975%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="0.0000%" y="196" width="0.4975%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="0.0000%" y="212" width="0.4975%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="0.0000%" y="228" width="0.4975%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="0.0000%" y="244" width="0.4975%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (dataclasses.py:5) (1 samples, 0.50%)</title><rect x="0.0000%" y="260" width="0.4975%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="0.0000%" y="276" width="0.4975%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="0.0000%" y="292" width="0.4975%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="0.0000%" y="308" width="0.4975%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="0.0000%" y="324" width="0.4975%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="0.0000%" y="340" width="0.4975%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="350.50"></text></g><g><title>&lt;module&gt; (inspect.py:145) (1 samples, 0.50%)</title><rect x="0.0000%" y="356" width="0.4975%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="0.0000%" y="372" width="0.4975%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="0.0000%" y="388" width="0.4975%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="0.0000%" y="404" width="0.4975%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="0.0000%" y="420" width="0.4975%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="0.0000%" y="436" width="0.4975%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="446.50"></text></g><g><title>&lt;module&gt; (ast.py:29) (1 samples, 0.50%)</title><rect x="0.0000%" y="452" width="0.4975%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="0.0000%" y="468" width="0.4975%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="0.0000%" y="484" width="0.4975%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="0.0000%" y="500" width="0.4975%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="1"/><text x="0.2500%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap&gt;:1000) (1 samples, 0.50%)</title><rect x="0.0000%" y="516" width="0.4975%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="0.0000%" y="532" width="0.4975%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="1"/><text x="0.2500%" y="542.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_disperse.py:18) (1 samples, 0.50%)</title><rect x="0.4975%" y="68" width="0.4975%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="1"/><text x="0.7475%" y="78.50"></text></g><g><title>pattern (kappybara/kappa.py:37) (1 samples, 0.50%)</title><rect x="0.4975%" y="84" width="0.4975%" height="15" fill="rgb(229,88,8)" fg:x="1" fg:w="1"/><text x="0.7475%" y="94.50"></text></g><g><title>parse (kappybara/grammar.py:28) (1 samples, 0.50%)</title><rect x="0.4975%" y="100" width="0.4975%" height="15" fill="rgb(213,181,19)" fg:x="1" fg:w="1"/><text x="0.7475%" y="110.50"></text></g><g><title>parse (lark/lark.py:655) (1 samples, 0.50%)</title><rect x="0.4975%" y="116" width="0.4975%" height="15" fill="rgb(254,191,54)" fg:x="1" fg:w="1"/><text x="0.7475%" y="126.50"></text></g><g><title>parse (lark/parser_frontends.py:104) (1 samples, 0.50%)</title><rect x="0.4975%" y="132" width="0.4975%" height="15" fill="rgb(241,83,37)" fg:x="1" fg:w="1"/><text x="0.7475%" y="142.50"></text></g><g><title>parse (lark/parsers/earley.py:280) (1 samples, 0.50%)</title><rect x="0.4975%" y="148" width="0.4975%" height="15" fill="rgb(233,36,39)" fg:x="1" fg:w="1"/><text x="0.7475%" y="158.50"></text></g><g><title>_parse (lark/parsers/xearley.py:150) (1 samples, 0.50%)</title><rect x="0.4975%" y="164" width="0.4975%" height="15" fill="rgb(226,3,54)" fg:x="1" fg:w="1"/><text x="0.7475%" y="174.50"></text></g><g><title>predict_and_complete (lark/parsers/earley.py:151) (1 samples, 0.50%)</title><rect x="0.4975%" y="180" width="0.4975%" height="15" fill="rgb(245,192,40)" fg:x="1" fg:w="1"/><text x="0.7475%" y="190.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_disperse.py:2) (1 samples, 0.50%)</title><rect x="0.9950%" y="68" width="0.4975%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="1"/><text x="1.2450%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="0.9950%" y="84" width="0.4975%" height="15" fill="rgb(232,182,51)" fg:x="2" fg:w="1"/><text x="1.2450%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="0.9950%" y="100" width="0.4975%" height="15" fill="rgb(231,60,39)" fg:x="2" fg:w="1"/><text x="1.2450%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="0.9950%" y="116" width="0.4975%" height="15" fill="rgb(208,69,12)" fg:x="2" fg:w="1"/><text x="1.2450%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="0.9950%" y="132" width="0.4975%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="1"/><text x="1.2450%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="0.9950%" y="148" width="0.4975%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="1"/><text x="1.2450%" y="158.50"></text></g><g><title>&lt;module&gt; (kappybara/system.py:73) (1 samples, 0.50%)</title><rect x="0.9950%" y="164" width="0.4975%" height="15" fill="rgb(222,207,29)" fg:x="2" fg:w="1"/><text x="1.2450%" y="174.50"></text></g><g><title>KappaSystem (kappybara/system.py:84) (1 samples, 0.50%)</title><rect x="0.9950%" y="180" width="0.4975%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="1"/><text x="1.2450%" y="190.50"></text></g><g><title>inner (typing.py:395) (1 samples, 0.50%)</title><rect x="0.9950%" y="196" width="0.4975%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="1"/><text x="1.2450%" y="206.50"></text></g><g><title>__getitem__ (typing.py:517) (1 samples, 0.50%)</title><rect x="0.9950%" y="212" width="0.4975%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="1"/><text x="1.2450%" y="222.50"></text></g><g><title>Optional (typing.py:750) (1 samples, 0.50%)</title><rect x="0.9950%" y="228" width="0.4975%" height="15" fill="rgb(239,60,40)" fg:x="2" fg:w="1"/><text x="1.2450%" y="238.50"></text></g><g><title>_instantiate_component (kappybara/mixture.py:60) (3 samples, 1.49%)</title><rect x="1.4925%" y="100" width="1.4925%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="3"/><text x="1.7425%" y="110.50"></text></g><g><title>detached (kappybara/pattern.py:144) (3 samples, 1.49%)</title><rect x="1.4925%" y="116" width="1.4925%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="3"/><text x="1.7425%" y="126.50"></text></g><g><title>__init__ (kappybara/pattern.py:23) (1 samples, 0.50%)</title><rect x="2.4876%" y="132" width="0.4975%" height="15" fill="rgb(250,213,24)" fg:x="5" fg:w="1"/><text x="2.7376%" y="142.50"></text></g><g><title>__init__ (kappybara/utils.py:26) (1 samples, 0.50%)</title><rect x="2.4876%" y="148" width="0.4975%" height="15" fill="rgb(247,123,22)" fg:x="5" fg:w="1"/><text x="2.7376%" y="158.50"></text></g><g><title>_instantiate_component (kappybara/mixture.py:63) (1 samples, 0.50%)</title><rect x="2.9851%" y="100" width="0.4975%" height="15" fill="rgb(231,138,38)" fg:x="6" fg:w="1"/><text x="3.2351%" y="110.50"></text></g><g><title>_add_agent (kappybara/mixture.py:131) (2 samples, 1.00%)</title><rect x="3.4826%" y="132" width="0.9950%" height="15" fill="rgb(231,145,46)" fg:x="7" fg:w="2"/><text x="3.7326%" y="142.50"></text></g><g><title>&lt;genexpr&gt; (kappybara/mixture.py:131) (1 samples, 0.50%)</title><rect x="3.9801%" y="148" width="0.4975%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="1"/><text x="4.2301%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:103) (3 samples, 1.49%)</title><rect x="3.4826%" y="116" width="1.4925%" height="15" fill="rgb(217,147,25)" fg:x="7" fg:w="3"/><text x="3.7326%" y="126.50"></text></g><g><title>_add_agent (kappybara/mixture.py:134) (1 samples, 0.50%)</title><rect x="4.4776%" y="132" width="0.4975%" height="15" fill="rgb(247,81,37)" fg:x="9" fg:w="1"/><text x="4.7276%" y="142.50"></text></g><g><title>add (kappybara/indexed_set.py:62) (1 samples, 0.50%)</title><rect x="4.4776%" y="148" width="0.4975%" height="15" fill="rgb(209,12,38)" fg:x="9" fg:w="1"/><text x="4.7276%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:104) (1 samples, 0.50%)</title><rect x="4.9751%" y="116" width="0.4975%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="5.2251%" y="126.50"></text></g><g><title>apply_update (kappybara/mixture.py:109) (2 samples, 1.00%)</title><rect x="5.4726%" y="116" width="0.9950%" height="15" fill="rgb(248,47,43)" fg:x="11" fg:w="2"/><text x="5.7226%" y="126.50"></text></g><g><title>touched_after (kappybara/mixture.py:344) (2 samples, 1.00%)</title><rect x="5.4726%" y="132" width="0.9950%" height="15" fill="rgb(221,10,30)" fg:x="11" fg:w="2"/><text x="5.7226%" y="142.50"></text></g><g><title>apply_update (kappybara/mixture.py:112) (1 samples, 0.50%)</title><rect x="6.4677%" y="116" width="0.4975%" height="15" fill="rgb(210,229,1)" fg:x="13" fg:w="1"/><text x="6.7177%" y="126.50"></text></g><g><title>create_index (kappybara/indexed_set.py:150) (1 samples, 0.50%)</title><rect x="6.4677%" y="132" width="0.4975%" height="15" fill="rgb(222,148,37)" fg:x="13" fg:w="1"/><text x="6.7177%" y="142.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:53) (1 samples, 0.50%)</title><rect x="6.4677%" y="148" width="0.4975%" height="15" fill="rgb(234,67,33)" fg:x="13" fg:w="1"/><text x="6.7177%" y="158.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_disperse.py:21) (12 samples, 5.97%)</title><rect x="1.4925%" y="68" width="5.9701%" height="15" fill="rgb(247,98,35)" fg:x="3" fg:w="12"/><text x="1.7425%" y="78.50">&lt;module&gt;..</text></g><g><title>instantiate (kappybara/mixture.py:54) (12 samples, 5.97%)</title><rect x="1.4925%" y="84" width="5.9701%" height="15" fill="rgb(247,138,52)" fg:x="3" fg:w="12"/><text x="1.7425%" y="94.50">instanti..</text></g><g><title>_instantiate_component (kappybara/mixture.py:75) (8 samples, 3.98%)</title><rect x="3.4826%" y="100" width="3.9801%" height="15" fill="rgb(213,79,30)" fg:x="7" fg:w="8"/><text x="3.7326%" y="110.50">_ins..</text></g><g><title>apply_update (kappybara/mixture.py:94) (1 samples, 0.50%)</title><rect x="6.9652%" y="116" width="0.4975%" height="15" fill="rgb(246,177,23)" fg:x="14" fg:w="1"/><text x="7.2152%" y="126.50"></text></g><g><title>touched_before (kappybara/mixture.py:366) (1 samples, 0.50%)</title><rect x="6.9652%" y="132" width="0.4975%" height="15" fill="rgb(230,62,27)" fg:x="14" fg:w="1"/><text x="7.2152%" y="142.50"></text></g><g><title>rules (kappybara/kappa.py:53) (1 samples, 0.50%)</title><rect x="7.4627%" y="84" width="0.4975%" height="15" fill="rgb(216,154,8)" fg:x="15" fg:w="1"/><text x="7.7127%" y="94.50"></text></g><g><title>parse (kappybara/grammar.py:28) (1 samples, 0.50%)</title><rect x="7.4627%" y="100" width="0.4975%" height="15" fill="rgb(244,35,45)" fg:x="15" fg:w="1"/><text x="7.7127%" y="110.50"></text></g><g><title>parse (lark/lark.py:655) (1 samples, 0.50%)</title><rect x="7.4627%" y="116" width="0.4975%" height="15" fill="rgb(251,115,12)" fg:x="15" fg:w="1"/><text x="7.7127%" y="126.50"></text></g><g><title>parse (lark/parser_frontends.py:104) (1 samples, 0.50%)</title><rect x="7.4627%" y="132" width="0.4975%" height="15" fill="rgb(240,54,50)" fg:x="15" fg:w="1"/><text x="7.7127%" y="142.50"></text></g><g><title>parse (lark/parsers/earley.py:280) (1 samples, 0.50%)</title><rect x="7.4627%" y="148" width="0.4975%" height="15" fill="rgb(233,84,52)" fg:x="15" fg:w="1"/><text x="7.7127%" y="158.50"></text></g><g><title>_parse (lark/parsers/xearley.py:150) (1 samples, 0.50%)</title><rect x="7.4627%" y="164" width="0.4975%" height="15" fill="rgb(207,117,47)" fg:x="15" fg:w="1"/><text x="7.7127%" y="174.50"></text></g><g><title>predict_and_complete (lark/parsers/earley.py:139) (1 samples, 0.50%)</title><rect x="7.4627%" y="180" width="0.4975%" height="15" fill="rgb(249,43,39)" fg:x="15" fg:w="1"/><text x="7.7127%" y="190.50"></text></g><g><title>__init__ (lark/parsers/earley_forest.py:54) (1 samples, 0.50%)</title><rect x="7.4627%" y="196" width="0.4975%" height="15" fill="rgb(209,38,44)" fg:x="15" fg:w="1"/><text x="7.7127%" y="206.50"></text></g><g><title>__init__ (lark/utils.py:324) (1 samples, 0.50%)</title><rect x="7.4627%" y="212" width="0.4975%" height="15" fill="rgb(236,212,23)" fg:x="15" fg:w="1"/><text x="7.7127%" y="222.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_disperse.py:22) (2 samples, 1.00%)</title><rect x="7.4627%" y="68" width="0.9950%" height="15" fill="rgb(242,79,21)" fg:x="15" fg:w="2"/><text x="7.7127%" y="78.50"></text></g><g><title>rules (kappybara/kappa.py:56) (1 samples, 0.50%)</title><rect x="7.9602%" y="84" width="0.4975%" height="15" fill="rgb(211,96,35)" fg:x="16" fg:w="1"/><text x="8.2102%" y="94.50"></text></g><g><title>objects (kappybara/grammar.py:236) (1 samples, 0.50%)</title><rect x="7.9602%" y="100" width="0.4975%" height="15" fill="rgb(253,215,40)" fg:x="16" fg:w="1"/><text x="8.2102%" y="110.50"></text></g><g><title>__init__ (&lt;string&gt;:6) (1 samples, 0.50%)</title><rect x="7.9602%" y="116" width="0.4975%" height="15" fill="rgb(211,81,21)" fg:x="16" fg:w="1"/><text x="8.2102%" y="126.50"></text></g><g><title>__post_init__ (kappybara/rule.py:213) (1 samples, 0.50%)</title><rect x="7.9602%" y="132" width="0.4975%" height="15" fill="rgb(208,190,38)" fg:x="16" fg:w="1"/><text x="8.2102%" y="142.50"></text></g><g><title>__get__ (functools.py:998) (1 samples, 0.50%)</title><rect x="7.9602%" y="148" width="0.4975%" height="15" fill="rgb(235,213,38)" fg:x="16" fg:w="1"/><text x="8.2102%" y="158.50"></text></g><g><title>components (kappybara/pattern.py:391) (1 samples, 0.50%)</title><rect x="7.9602%" y="164" width="0.4975%" height="15" fill="rgb(237,122,38)" fg:x="16" fg:w="1"/><text x="8.2102%" y="174.50"></text></g><g><title>__init__ (kappybara/pattern.py:209) (1 samples, 0.50%)</title><rect x="7.9602%" y="180" width="0.4975%" height="15" fill="rgb(244,218,35)" fg:x="16" fg:w="1"/><text x="8.2102%" y="190.50"></text></g><g><title>__init__ (kappybara/utils.py:26) (1 samples, 0.50%)</title><rect x="7.9602%" y="196" width="0.4975%" height="15" fill="rgb(240,68,47)" fg:x="16" fg:w="1"/><text x="8.2102%" y="206.50"></text></g><g><title>embeddings (kappybara/pattern.py:268) (4 samples, 1.99%)</title><rect x="8.4577%" y="148" width="1.9900%" height="15" fill="rgb(210,16,53)" fg:x="17" fg:w="4"/><text x="8.7077%" y="158.50">e..</text></g><g><title>embeddings (kappybara/pattern.py:270) (10 samples, 4.98%)</title><rect x="10.4478%" y="148" width="4.9751%" height="15" fill="rgb(235,124,12)" fg:x="21" fg:w="10"/><text x="10.6978%" y="158.50">embedd..</text></g><g><title>embeddings (kappybara/pattern.py:271) (2 samples, 1.00%)</title><rect x="15.4229%" y="148" width="0.9950%" height="15" fill="rgb(224,169,11)" fg:x="31" fg:w="2"/><text x="15.6729%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:276) (1 samples, 0.50%)</title><rect x="16.4179%" y="148" width="0.4975%" height="15" fill="rgb(250,166,2)" fg:x="33" fg:w="1"/><text x="16.6679%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:278) (2 samples, 1.00%)</title><rect x="16.9154%" y="148" width="0.9950%" height="15" fill="rgb(242,216,29)" fg:x="34" fg:w="2"/><text x="17.1654%" y="158.50"></text></g><g><title>embeds_in (kappybara/pattern.py:173) (1 samples, 0.50%)</title><rect x="18.4080%" y="164" width="0.4975%" height="15" fill="rgb(230,116,27)" fg:x="37" fg:w="1"/><text x="18.6580%" y="174.50"></text></g><g><title>embeds_in (kappybara/pattern.py:176) (4 samples, 1.99%)</title><rect x="18.9055%" y="164" width="1.9900%" height="15" fill="rgb(228,99,48)" fg:x="38" fg:w="4"/><text x="19.1555%" y="174.50">e..</text></g><g><title>__iter__ (kappybara/pattern.py:99) (3 samples, 1.49%)</title><rect x="19.4030%" y="180" width="1.4925%" height="15" fill="rgb(253,11,6)" fg:x="39" fg:w="3"/><text x="19.6530%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:113) (2 samples, 1.00%)</title><rect x="19.9005%" y="196" width="0.9950%" height="15" fill="rgb(247,143,39)" fg:x="40" fg:w="2"/><text x="20.1505%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:177) (3 samples, 1.49%)</title><rect x="20.8955%" y="164" width="1.4925%" height="15" fill="rgb(236,97,10)" fg:x="42" fg:w="3"/><text x="21.1455%" y="174.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (1 samples, 0.50%)</title><rect x="23.8806%" y="180" width="0.4975%" height="15" fill="rgb(233,208,19)" fg:x="48" fg:w="1"/><text x="24.1306%" y="190.50"></text></g><g><title>bound (kappybara/pattern.py:60) (3 samples, 1.49%)</title><rect x="24.3781%" y="196" width="1.4925%" height="15" fill="rgb(216,164,2)" fg:x="49" fg:w="3"/><text x="24.6281%" y="206.50"></text></g><g><title>bound (kappybara/pattern.py:61) (1 samples, 0.50%)</title><rect x="25.8706%" y="196" width="0.4975%" height="15" fill="rgb(220,129,5)" fg:x="52" fg:w="1"/><text x="26.1206%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:180) (9 samples, 4.48%)</title><rect x="22.3881%" y="164" width="4.4776%" height="15" fill="rgb(242,17,10)" fg:x="45" fg:w="9"/><text x="22.6381%" y="174.50">embed..</text></g><g><title>embeds_in (kappybara/pattern.py:71) (5 samples, 2.49%)</title><rect x="24.3781%" y="180" width="2.4876%" height="15" fill="rgb(242,107,0)" fg:x="49" fg:w="5"/><text x="24.6281%" y="190.50">em..</text></g><g><title>coupled (kappybara/pattern.py:66) (1 samples, 0.50%)</title><rect x="26.3682%" y="196" width="0.4975%" height="15" fill="rgb(251,28,31)" fg:x="53" fg:w="1"/><text x="26.6182%" y="206.50"></text></g><g><title>embeddings (kappybara/pattern.py:279) (19 samples, 9.45%)</title><rect x="17.9104%" y="148" width="9.4527%" height="15" fill="rgb(233,223,10)" fg:x="36" fg:w="19"/><text x="18.1604%" y="158.50">embeddings (ka..</text></g><g><title>embeds_in (kappybara/pattern.py:181) (1 samples, 0.50%)</title><rect x="26.8657%" y="164" width="0.4975%" height="15" fill="rgb(215,21,27)" fg:x="54" fg:w="1"/><text x="27.1157%" y="174.50"></text></g><g><title>sites (kappybara/pattern.py:111) (1 samples, 0.50%)</title><rect x="28.3582%" y="180" width="0.4975%" height="15" fill="rgb(232,23,21)" fg:x="57" fg:w="1"/><text x="28.6082%" y="190.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:51) (45 samples, 22.39%)</title><rect x="8.4577%" y="132" width="22.3881%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="45"/><text x="8.7077%" y="142.50">__init__ (kappybara/indexed_set.py:..</text></g><g><title>embeddings (kappybara/pattern.py:283) (7 samples, 3.48%)</title><rect x="27.3632%" y="148" width="3.4826%" height="15" fill="rgb(226,81,46)" fg:x="55" fg:w="7"/><text x="27.6132%" y="158.50">emb..</text></g><g><title>__iter__ (kappybara/pattern.py:99) (7 samples, 3.48%)</title><rect x="27.3632%" y="164" width="3.4826%" height="15" fill="rgb(247,70,30)" fg:x="55" fg:w="7"/><text x="27.6132%" y="174.50">__i..</text></g><g><title>sites (kappybara/pattern.py:113) (4 samples, 1.99%)</title><rect x="28.8557%" y="180" width="1.9900%" height="15" fill="rgb(212,68,19)" fg:x="58" fg:w="4"/><text x="29.1057%" y="190.50">s..</text></g><g><title>__init__ (kappybara/indexed_set.py:53) (8 samples, 3.98%)</title><rect x="30.8458%" y="132" width="3.9801%" height="15" fill="rgb(240,187,13)" fg:x="62" fg:w="8"/><text x="31.0958%" y="142.50">__in..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (8 samples, 3.98%)</title><rect x="30.8458%" y="148" width="3.9801%" height="15" fill="rgb(223,113,26)" fg:x="62" fg:w="8"/><text x="31.0958%" y="158.50">__ha..</text></g><g><title>__hash__ (kappybara/utils.py:30) (1 samples, 0.50%)</title><rect x="34.3284%" y="164" width="0.4975%" height="15" fill="rgb(206,192,2)" fg:x="69" fg:w="1"/><text x="34.5784%" y="174.50"></text></g><g><title>track_component (kappybara/mixture.py:85) (59 samples, 29.35%)</title><rect x="8.4577%" y="116" width="29.3532%" height="15" fill="rgb(241,108,4)" fg:x="17" fg:w="59"/><text x="8.7077%" y="126.50">track_component (kappybara/mixture.py:85)</text></g><g><title>__init__ (kappybara/indexed_set.py:56) (6 samples, 2.99%)</title><rect x="34.8259%" y="132" width="2.9851%" height="15" fill="rgb(247,173,49)" fg:x="70" fg:w="6"/><text x="35.0759%" y="142.50">__i..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (5 samples, 2.49%)</title><rect x="35.3234%" y="148" width="2.4876%" height="15" fill="rgb(224,114,35)" fg:x="71" fg:w="5"/><text x="35.5734%" y="158.50">__..</text></g><g><title>create_index (kappybara/indexed_set.py:147) (9 samples, 4.48%)</title><rect x="37.8109%" y="132" width="4.4776%" height="15" fill="rgb(245,159,27)" fg:x="76" fg:w="9"/><text x="38.0609%" y="142.50">creat..</text></g><g><title>__call__ (kappybara/indexed_set.py:15) (4 samples, 1.99%)</title><rect x="40.2985%" y="148" width="1.9900%" height="15" fill="rgb(245,172,44)" fg:x="81" fg:w="4"/><text x="40.5485%" y="158.50">_..</text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:86) (4 samples, 1.99%)</title><rect x="40.2985%" y="164" width="1.9900%" height="15" fill="rgb(236,23,11)" fg:x="81" fg:w="4"/><text x="40.5485%" y="174.50">&lt;..</text></g><g><title>__hash__ (kappybara/utils.py:29) (1 samples, 0.50%)</title><rect x="44.7761%" y="148" width="0.4975%" height="15" fill="rgb(205,117,38)" fg:x="90" fg:w="1"/><text x="45.0261%" y="158.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (1 samples, 0.50%)</title><rect x="45.2736%" y="148" width="0.4975%" height="15" fill="rgb(237,72,25)" fg:x="91" fg:w="1"/><text x="45.5236%" y="158.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:53) (6 samples, 2.99%)</title><rect x="45.7711%" y="148" width="2.9851%" height="15" fill="rgb(244,70,9)" fg:x="92" fg:w="6"/><text x="46.0211%" y="158.50">__i..</text></g><g><title>__init__ (kappybara/indexed_set.py:55) (3 samples, 1.49%)</title><rect x="48.7562%" y="148" width="1.4925%" height="15" fill="rgb(217,125,39)" fg:x="98" fg:w="3"/><text x="49.0062%" y="158.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:56) (4 samples, 1.99%)</title><rect x="50.2488%" y="148" width="1.9900%" height="15" fill="rgb(235,36,10)" fg:x="101" fg:w="4"/><text x="50.4988%" y="158.50">_..</text></g><g><title>__init__ (kappybara/indexed_set.py:58) (1 samples, 0.50%)</title><rect x="52.2388%" y="148" width="0.4975%" height="15" fill="rgb(251,123,47)" fg:x="105" fg:w="1"/><text x="52.4888%" y="158.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (42 samples, 20.90%)</title><rect x="55.2239%" y="180" width="20.8955%" height="15" fill="rgb(221,13,13)" fg:x="111" fg:w="42"/><text x="55.4739%" y="190.50">__hash__ (kappybara/utils.py:29)</text></g><g><title>add (kappybara/indexed_set.py:62) (48 samples, 23.88%)</title><rect x="52.7363%" y="148" width="23.8806%" height="15" fill="rgb(238,131,9)" fg:x="106" fg:w="48"/><text x="52.9863%" y="158.50">add (kappybara/indexed_set.py:62)</text></g><g><title>__hash__ (kappybara/pattern.py:188) (47 samples, 23.38%)</title><rect x="53.2338%" y="164" width="23.3831%" height="15" fill="rgb(211,50,8)" fg:x="107" fg:w="47"/><text x="53.4838%" y="174.50">__hash__ (kappybara/pattern.py:188)</text></g><g><title>__hash__ (kappybara/utils.py:30) (1 samples, 0.50%)</title><rect x="76.1194%" y="180" width="0.4975%" height="15" fill="rgb(245,182,24)" fg:x="153" fg:w="1"/><text x="76.3694%" y="190.50"></text></g><g><title>add (kappybara/indexed_set.py:65) (5 samples, 2.49%)</title><rect x="76.6169%" y="148" width="2.4876%" height="15" fill="rgb(242,14,37)" fg:x="154" fg:w="5"/><text x="76.8669%" y="158.50">ad..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (4 samples, 1.99%)</title><rect x="77.1144%" y="164" width="1.9900%" height="15" fill="rgb(246,228,12)" fg:x="155" fg:w="4"/><text x="77.3644%" y="174.50">_..</text></g><g><title>__hash__ (kappybara/utils.py:29) (1 samples, 0.50%)</title><rect x="78.6070%" y="180" width="0.4975%" height="15" fill="rgb(213,55,15)" fg:x="158" fg:w="1"/><text x="78.8570%" y="190.50"></text></g><g><title>add (kappybara/indexed_set.py:68) (1 samples, 0.50%)</title><rect x="79.1045%" y="148" width="0.4975%" height="15" fill="rgb(209,9,3)" fg:x="159" fg:w="1"/><text x="79.3545%" y="158.50"></text></g><g><title>track_component (kappybara/mixture.py:86) (94 samples, 46.77%)</title><rect x="37.8109%" y="116" width="46.7662%" height="15" fill="rgb(230,59,30)" fg:x="76" fg:w="94"/><text x="38.0609%" y="126.50">track_component (kappybara/mixture.py:86)</text></g><g><title>create_index (kappybara/indexed_set.py:150) (85 samples, 42.29%)</title><rect x="42.2886%" y="132" width="42.2886%" height="15" fill="rgb(209,121,21)" fg:x="85" fg:w="85"/><text x="42.5386%" y="142.50">create_index (kappybara/indexed_set.py:150)</text></g><g><title>add (kappybara/indexed_set.py:69) (10 samples, 4.98%)</title><rect x="79.6020%" y="148" width="4.9751%" height="15" fill="rgb(220,109,13)" fg:x="160" fg:w="10"/><text x="79.8520%" y="158.50">add (k..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (8 samples, 3.98%)</title><rect x="80.5970%" y="164" width="3.9801%" height="15" fill="rgb(232,18,1)" fg:x="162" fg:w="8"/><text x="80.8470%" y="174.50">__ha..</text></g><g><title>&lt;module&gt; (profile_uni_bi_disperse.py:23) (162 samples, 80.60%)</title><rect x="8.4577%" y="68" width="80.5970%" height="15" fill="rgb(215,41,42)" fg:x="17" fg:w="162"/><text x="8.7077%" y="78.50">&lt;module&gt; (profile_uni_bi_disperse.py:23)</text></g><g><title>__init__ (kappybara/system.py:25) (162 samples, 80.60%)</title><rect x="8.4577%" y="84" width="80.5970%" height="15" fill="rgb(224,123,36)" fg:x="17" fg:w="162"/><text x="8.7077%" y="94.50">__init__ (kappybara/system.py:25)</text></g><g><title>_track_rule (kappybara/system.py:39) (162 samples, 80.60%)</title><rect x="8.4577%" y="100" width="80.5970%" height="15" fill="rgb(240,125,3)" fg:x="17" fg:w="162"/><text x="8.7077%" y="110.50">_track_rule (kappybara/system.py:39)</text></g><g><title>track_component (kappybara/mixture.py:88) (9 samples, 4.48%)</title><rect x="84.5771%" y="116" width="4.4776%" height="15" fill="rgb(205,98,50)" fg:x="170" fg:w="9"/><text x="84.8271%" y="126.50">track..</text></g><g><title>calculate_sets (lark/parsers/grammar_analysis.py:110) (1 samples, 0.50%)</title><rect x="89.0547%" y="468" width="0.4975%" height="15" fill="rgb(205,185,37)" fg:x="179" fg:w="1"/><text x="89.3047%" y="478.50"></text></g><g><title>__init__ (lark/parsers/lalr_parser.py:19) (2 samples, 1.00%)</title><rect x="89.0547%" y="420" width="0.9950%" height="15" fill="rgb(238,207,15)" fg:x="179" fg:w="2"/><text x="89.3047%" y="430.50"></text></g><g><title>__init__ (lark/parsers/lalr_analysis.py:158) (2 samples, 1.00%)</title><rect x="89.0547%" y="436" width="0.9950%" height="15" fill="rgb(213,199,42)" fg:x="179" fg:w="2"/><text x="89.3047%" y="446.50"></text></g><g><title>__init__ (lark/parsers/grammar_analysis.py:178) (2 samples, 1.00%)</title><rect x="89.0547%" y="452" width="0.9950%" height="15" fill="rgb(235,201,11)" fg:x="179" fg:w="2"/><text x="89.3047%" y="462.50"></text></g><g><title>calculate_sets (lark/parsers/grammar_analysis.py:116) (1 samples, 0.50%)</title><rect x="89.5522%" y="468" width="0.4975%" height="15" fill="rgb(207,46,11)" fg:x="180" fg:w="1"/><text x="89.8022%" y="478.50"></text></g><g><title>compute_reads_relations (lark/parsers/lalr_analysis.py:218) (1 samples, 0.50%)</title><rect x="90.0498%" y="452" width="0.4975%" height="15" fill="rgb(241,35,35)" fg:x="181" fg:w="1"/><text x="90.2998%" y="462.50"></text></g><g><title>compute_reads_relations (lark/parsers/lalr_analysis.py:225) (1 samples, 0.50%)</title><rect x="90.5473%" y="452" width="0.4975%" height="15" fill="rgb(243,32,47)" fg:x="182" fg:w="1"/><text x="90.7973%" y="462.50"></text></g><g><title>__hash__ (lark/grammar.py:26) (1 samples, 0.50%)</title><rect x="90.5473%" y="468" width="0.4975%" height="15" fill="rgb(247,202,23)" fg:x="182" fg:w="1"/><text x="90.7973%" y="478.50"></text></g><g><title>compute_lalr (lark/parsers/lalr_analysis.py:329) (3 samples, 1.49%)</title><rect x="90.0498%" y="436" width="1.4925%" height="15" fill="rgb(219,102,11)" fg:x="181" fg:w="3"/><text x="90.2998%" y="446.50"></text></g><g><title>compute_reads_relations (lark/parsers/lalr_analysis.py:226) (1 samples, 0.50%)</title><rect x="91.0448%" y="452" width="0.4975%" height="15" fill="rgb(243,110,44)" fg:x="183" fg:w="1"/><text x="91.2948%" y="462.50"></text></g><g><title>__hash__ (lark/grammar.py:26) (1 samples, 0.50%)</title><rect x="91.0448%" y="468" width="0.4975%" height="15" fill="rgb(222,74,54)" fg:x="183" fg:w="1"/><text x="91.2948%" y="478.50"></text></g><g><title>__init__ (lark/parser_frontends.py:61) (6 samples, 2.99%)</title><rect x="89.0547%" y="388" width="2.9851%" height="15" fill="rgb(216,99,12)" fg:x="179" fg:w="6"/><text x="89.3047%" y="398.50">__i..</text></g><g><title>create_lalr_parser (lark/parser_frontends.py:161) (6 samples, 2.99%)</title><rect x="89.0547%" y="404" width="2.9851%" height="15" fill="rgb(226,22,26)" fg:x="179" fg:w="6"/><text x="89.3047%" y="414.50">cre..</text></g><g><title>__init__ (lark/parsers/lalr_parser.py:20) (4 samples, 1.99%)</title><rect x="90.0498%" y="420" width="1.9900%" height="15" fill="rgb(217,163,10)" fg:x="181" fg:w="4"/><text x="90.2998%" y="430.50">_..</text></g><g><title>compute_lalr (lark/parsers/lalr_analysis.py:330) (1 samples, 0.50%)</title><rect x="91.5423%" y="436" width="0.4975%" height="15" fill="rgb(213,25,53)" fg:x="184" fg:w="1"/><text x="91.7923%" y="446.50"></text></g><g><title>compute_includes_lookback (lark/parsers/lalr_analysis.py:242) (1 samples, 0.50%)</title><rect x="91.5423%" y="452" width="0.4975%" height="15" fill="rgb(252,105,26)" fg:x="184" fg:w="1"/><text x="91.7923%" y="462.50"></text></g><g><title>_get_parser (lark/load_grammar.py:938) (7 samples, 3.48%)</title><rect x="89.0547%" y="372" width="3.4826%" height="15" fill="rgb(220,39,43)" fg:x="179" fg:w="7"/><text x="89.3047%" y="382.50">_ge..</text></g><g><title>__init__ (lark/parser_frontends.py:79) (1 samples, 0.50%)</title><rect x="92.0398%" y="388" width="0.4975%" height="15" fill="rgb(229,68,48)" fg:x="185" fg:w="1"/><text x="92.2898%" y="398.50"></text></g><g><title>create_basic_lexer (lark/parser_frontends.py:148) (1 samples, 0.50%)</title><rect x="92.0398%" y="404" width="0.4975%" height="15" fill="rgb(252,8,32)" fg:x="185" fg:w="1"/><text x="92.2898%" y="414.50"></text></g><g><title>__init__ (lark/lexer.py:542) (1 samples, 0.50%)</title><rect x="92.0398%" y="420" width="0.4975%" height="15" fill="rgb(223,20,43)" fg:x="185" fg:w="1"/><text x="92.2898%" y="430.50"></text></g><g><title>min_width (lark/lexer.py:109) (1 samples, 0.50%)</title><rect x="92.0398%" y="436" width="0.4975%" height="15" fill="rgb(229,81,49)" fg:x="185" fg:w="1"/><text x="92.2898%" y="446.50"></text></g><g><title>_get_width (lark/lexer.py:104) (1 samples, 0.50%)</title><rect x="92.0398%" y="452" width="0.4975%" height="15" fill="rgb(236,28,36)" fg:x="185" fg:w="1"/><text x="92.2898%" y="462.50"></text></g><g><title>get_regexp_width (lark/utils.py:144) (1 samples, 0.50%)</title><rect x="92.0398%" y="468" width="0.4975%" height="15" fill="rgb(249,185,26)" fg:x="185" fg:w="1"/><text x="92.2898%" y="478.50"></text></g><g><title>parse (re/_parser.py:979) (1 samples, 0.50%)</title><rect x="92.0398%" y="484" width="0.4975%" height="15" fill="rgb(249,174,33)" fg:x="185" fg:w="1"/><text x="92.2898%" y="494.50"></text></g><g><title>_parse_sub (re/_parser.py:460) (1 samples, 0.50%)</title><rect x="92.0398%" y="500" width="0.4975%" height="15" fill="rgb(233,201,37)" fg:x="185" fg:w="1"/><text x="92.2898%" y="510.50"></text></g><g><title>_parse (re/_parser.py:530) (1 samples, 0.50%)</title><rect x="92.0398%" y="516" width="0.4975%" height="15" fill="rgb(221,78,26)" fg:x="185" fg:w="1"/><text x="92.2898%" y="526.50"></text></g><g><title>get (re/_parser.py:263) (1 samples, 0.50%)</title><rect x="92.0398%" y="532" width="0.4975%" height="15" fill="rgb(250,127,30)" fg:x="185" fg:w="1"/><text x="92.2898%" y="542.50"></text></g><g><title>__next (re/_parser.py:243) (1 samples, 0.50%)</title><rect x="92.0398%" y="548" width="0.4975%" height="15" fill="rgb(230,49,44)" fg:x="185" fg:w="1"/><text x="92.2898%" y="558.50"></text></g><g><title>next_token (lark/lexer.py:593) (1 samples, 0.50%)</title><rect x="92.5373%" y="452" width="0.4975%" height="15" fill="rgb(229,67,23)" fg:x="186" fg:w="1"/><text x="92.7873%" y="462.50"></text></g><g><title>match (lark/lexer.py:588) (1 samples, 0.50%)</title><rect x="92.5373%" y="468" width="0.4975%" height="15" fill="rgb(249,83,47)" fg:x="186" fg:w="1"/><text x="92.7873%" y="478.50"></text></g><g><title>match (lark/lexer.py:389) (1 samples, 0.50%)</title><rect x="92.5373%" y="484" width="0.4975%" height="15" fill="rgb(215,43,3)" fg:x="186" fg:w="1"/><text x="92.7873%" y="494.50"></text></g><g><title>parse_from_state (lark/parsers/lalr_parser.py:100) (2 samples, 1.00%)</title><rect x="92.5373%" y="420" width="0.9950%" height="15" fill="rgb(238,154,13)" fg:x="186" fg:w="2"/><text x="92.7873%" y="430.50"></text></g><g><title>lex (lark/lexer.py:515) (2 samples, 1.00%)</title><rect x="92.5373%" y="436" width="0.9950%" height="15" fill="rgb(219,56,2)" fg:x="186" fg:w="2"/><text x="92.7873%" y="446.50"></text></g><g><title>next_token (lark/lexer.py:608) (1 samples, 0.50%)</title><rect x="93.0348%" y="452" width="0.4975%" height="15" fill="rgb(233,0,4)" fg:x="187" fg:w="1"/><text x="93.2848%" y="462.50"></text></g><g><title>feed (lark/lexer.py:298) (1 samples, 0.50%)</title><rect x="93.0348%" y="468" width="0.4975%" height="15" fill="rgb(235,30,7)" fg:x="187" fg:w="1"/><text x="93.2848%" y="478.50"></text></g><g><title>feed_token (lark/parsers/lalr_parser_state.py:103) (1 samples, 0.50%)</title><rect x="93.5323%" y="436" width="0.4975%" height="15" fill="rgb(250,79,13)" fg:x="188" fg:w="1"/><text x="93.7823%" y="446.50"></text></g><g><title>load_grammar (lark/load_grammar.py:1240) (11 samples, 5.47%)</title><rect x="89.0547%" y="340" width="5.4726%" height="15" fill="rgb(211,146,34)" fg:x="179" fg:w="11"/><text x="89.3047%" y="350.50">load_gr..</text></g><g><title>_parse_grammar (lark/load_grammar.py:966) (11 samples, 5.47%)</title><rect x="89.0547%" y="356" width="5.4726%" height="15" fill="rgb(228,22,38)" fg:x="179" fg:w="11"/><text x="89.3047%" y="366.50">_parse_..</text></g><g><title>parse (lark/parser_frontends.py:104) (4 samples, 1.99%)</title><rect x="92.5373%" y="372" width="1.9900%" height="15" fill="rgb(235,168,5)" fg:x="186" fg:w="4"/><text x="92.7873%" y="382.50">p..</text></g><g><title>parse (lark/parsers/lalr_parser.py:42) (4 samples, 1.99%)</title><rect x="92.5373%" y="388" width="1.9900%" height="15" fill="rgb(221,155,16)" fg:x="186" fg:w="4"/><text x="92.7873%" y="398.50">p..</text></g><g><title>parse (lark/parsers/lalr_parser.py:88) (4 samples, 1.99%)</title><rect x="92.5373%" y="404" width="1.9900%" height="15" fill="rgb(215,215,53)" fg:x="186" fg:w="4"/><text x="92.7873%" y="414.50">p..</text></g><g><title>parse_from_state (lark/parsers/lalr_parser.py:102) (2 samples, 1.00%)</title><rect x="93.5323%" y="420" width="0.9950%" height="15" fill="rgb(223,4,10)" fg:x="188" fg:w="2"/><text x="93.7823%" y="430.50"></text></g><g><title>feed_token (lark/parsers/lalr_parser_state.py:95) (1 samples, 0.50%)</title><rect x="94.0299%" y="436" width="0.4975%" height="15" fill="rgb(234,103,6)" fg:x="189" fg:w="1"/><text x="94.2799%" y="446.50"></text></g><g><title>load_grammar (lark/load_grammar.py:1240) (1 samples, 0.50%)</title><rect x="94.5274%" y="372" width="0.4975%" height="15" fill="rgb(227,97,0)" fg:x="190" fg:w="1"/><text x="94.7774%" y="382.50"></text></g><g><title>_parse_grammar (lark/load_grammar.py:966) (1 samples, 0.50%)</title><rect x="94.5274%" y="388" width="0.4975%" height="15" fill="rgb(234,150,53)" fg:x="190" fg:w="1"/><text x="94.7774%" y="398.50"></text></g><g><title>parse (lark/parser_frontends.py:104) (1 samples, 0.50%)</title><rect x="94.5274%" y="404" width="0.4975%" height="15" fill="rgb(228,201,54)" fg:x="190" fg:w="1"/><text x="94.7774%" y="414.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:42) (1 samples, 0.50%)</title><rect x="94.5274%" y="420" width="0.4975%" height="15" fill="rgb(222,22,37)" fg:x="190" fg:w="1"/><text x="94.7774%" y="430.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:88) (1 samples, 0.50%)</title><rect x="94.5274%" y="436" width="0.4975%" height="15" fill="rgb(237,53,32)" fg:x="190" fg:w="1"/><text x="94.7774%" y="446.50"></text></g><g><title>parse_from_state (lark/parsers/lalr_parser.py:100) (1 samples, 0.50%)</title><rect x="94.5274%" y="452" width="0.4975%" height="15" fill="rgb(233,25,53)" fg:x="190" fg:w="1"/><text x="94.7774%" y="462.50"></text></g><g><title>lex (lark/lexer.py:515) (1 samples, 0.50%)</title><rect x="94.5274%" y="468" width="0.4975%" height="15" fill="rgb(210,40,34)" fg:x="190" fg:w="1"/><text x="94.7774%" y="478.50"></text></g><g><title>next_token (lark/lexer.py:593) (1 samples, 0.50%)</title><rect x="94.5274%" y="484" width="0.4975%" height="15" fill="rgb(241,220,44)" fg:x="190" fg:w="1"/><text x="94.7774%" y="494.50"></text></g><g><title>match (lark/lexer.py:588) (1 samples, 0.50%)</title><rect x="94.5274%" y="500" width="0.4975%" height="15" fill="rgb(235,28,35)" fg:x="190" fg:w="1"/><text x="94.7774%" y="510.50"></text></g><g><title>match (lark/lexer.py:391) (1 samples, 0.50%)</title><rect x="94.5274%" y="516" width="0.4975%" height="15" fill="rgb(210,56,17)" fg:x="190" fg:w="1"/><text x="94.7774%" y="526.50"></text></g><g><title>_define (lark/load_grammar.py:1128) (1 samples, 0.50%)</title><rect x="95.0249%" y="388" width="0.4975%" height="15" fill="rgb(224,130,29)" fg:x="191" fg:w="1"/><text x="95.2749%" y="398.50"></text></g><g><title>load_grammar (lark/load_grammar.py:1255) (3 samples, 1.49%)</title><rect x="94.5274%" y="340" width="1.4925%" height="15" fill="rgb(235,212,8)" fg:x="190" fg:w="3"/><text x="94.7774%" y="350.50"></text></g><g><title>do_import (lark/load_grammar.py:1328) (3 samples, 1.49%)</title><rect x="94.5274%" y="356" width="1.4925%" height="15" fill="rgb(223,33,50)" fg:x="190" fg:w="3"/><text x="94.7774%" y="366.50"></text></g><g><title>load_grammar (lark/load_grammar.py:1259) (2 samples, 1.00%)</title><rect x="95.0249%" y="372" width="0.9950%" height="15" fill="rgb(219,149,13)" fg:x="191" fg:w="2"/><text x="95.2749%" y="382.50"></text></g><g><title>_unpack_definition (lark/load_grammar.py:1235) (1 samples, 0.50%)</title><rect x="95.5224%" y="388" width="0.4975%" height="15" fill="rgb(250,156,29)" fg:x="192" fg:w="1"/><text x="95.7724%" y="398.50"></text></g><g><title>_mangle_definition_tree (lark/load_grammar.py:1047) (1 samples, 0.50%)</title><rect x="95.5224%" y="404" width="0.4975%" height="15" fill="rgb(216,193,19)" fg:x="192" fg:w="1"/><text x="95.7724%" y="414.50"></text></g><g><title>iter_subtrees (lark/tree.py:142) (1 samples, 0.50%)</title><rect x="95.5224%" y="420" width="0.4975%" height="15" fill="rgb(216,135,14)" fg:x="192" fg:w="1"/><text x="95.7724%" y="430.50"></text></g><g><title>__init__ (lark/lark.py:357) (15 samples, 7.46%)</title><rect x="89.0547%" y="308" width="7.4627%" height="15" fill="rgb(241,47,5)" fg:x="179" fg:w="15"/><text x="89.3047%" y="318.50">__init__ (..</text></g><g><title>load_grammar (lark/load_grammar.py:1415) (15 samples, 7.46%)</title><rect x="89.0547%" y="324" width="7.4627%" height="15" fill="rgb(233,42,35)" fg:x="179" fg:w="15"/><text x="89.3047%" y="334.50">load_gramm..</text></g><g><title>load_grammar (lark/load_grammar.py:1289) (1 samples, 0.50%)</title><rect x="96.0199%" y="340" width="0.4975%" height="15" fill="rgb(231,13,6)" fg:x="193" fg:w="1"/><text x="96.2699%" y="350.50"></text></g><g><title>resolve_term_references (lark/load_grammar.py:896) (1 samples, 0.50%)</title><rect x="96.0199%" y="356" width="0.4975%" height="15" fill="rgb(207,181,40)" fg:x="193" fg:w="1"/><text x="96.2699%" y="366.50"></text></g><g><title>iter_subtrees (lark/tree.py:142) (1 samples, 0.50%)</title><rect x="96.0199%" y="372" width="0.4975%" height="15" fill="rgb(254,173,49)" fg:x="193" fg:w="1"/><text x="96.2699%" y="382.50"></text></g><g><title>compile (lark/load_grammar.py:693) (1 samples, 0.50%)</title><rect x="96.5174%" y="324" width="0.4975%" height="15" fill="rgb(221,1,38)" fg:x="194" fg:w="1"/><text x="96.7674%" y="334.50"></text></g><g><title>nr_deepcopy_tree (lark/load_grammar.py:676) (1 samples, 0.50%)</title><rect x="96.5174%" y="340" width="0.4975%" height="15" fill="rgb(206,124,46)" fg:x="194" fg:w="1"/><text x="96.7674%" y="350.50"></text></g><g><title>transform (lark/visitors.py:313) (1 samples, 0.50%)</title><rect x="96.5174%" y="356" width="0.4975%" height="15" fill="rgb(249,21,11)" fg:x="194" fg:w="1"/><text x="96.7674%" y="366.50"></text></g><g><title>__init__ (lark/lark.py:407) (2 samples, 1.00%)</title><rect x="96.5174%" y="308" width="0.9950%" height="15" fill="rgb(222,201,40)" fg:x="194" fg:w="2"/><text x="96.7674%" y="318.50"></text></g><g><title>compile (lark/load_grammar.py:694) (1 samples, 0.50%)</title><rect x="97.0149%" y="324" width="0.4975%" height="15" fill="rgb(235,61,29)" fg:x="195" fg:w="1"/><text x="97.2649%" y="334.50"></text></g><g><title>nr_deepcopy_tree (lark/load_grammar.py:676) (1 samples, 0.50%)</title><rect x="97.0149%" y="340" width="0.4975%" height="15" fill="rgb(219,207,3)" fg:x="195" fg:w="1"/><text x="97.2649%" y="350.50"></text></g><g><title>transform (lark/visitors.py:318) (1 samples, 0.50%)</title><rect x="97.0149%" y="356" width="0.4975%" height="15" fill="rgb(222,56,46)" fg:x="195" fg:w="1"/><text x="97.2649%" y="366.50"></text></g><g><title>_call_userfunc (lark/visitors.py:115) (1 samples, 0.50%)</title><rect x="97.0149%" y="372" width="0.4975%" height="15" fill="rgb(239,76,54)" fg:x="195" fg:w="1"/><text x="97.2649%" y="382.50"></text></g><g><title>&lt;module&gt; (kappybara/grammar.py:35) (18 samples, 8.96%)</title><rect x="89.0547%" y="260" width="8.9552%" height="15" fill="rgb(231,124,27)" fg:x="179" fg:w="18"/><text x="89.3047%" y="270.50">&lt;module&gt; (kap..</text></g><g><title>__init__ (kappybara/grammar.py:15) (18 samples, 8.96%)</title><rect x="89.0547%" y="276" width="8.9552%" height="15" fill="rgb(249,195,6)" fg:x="179" fg:w="18"/><text x="89.3047%" y="286.50">__init__ (kap..</text></g><g><title>open (lark/lark.py:577) (18 samples, 8.96%)</title><rect x="89.0547%" y="292" width="8.9552%" height="15" fill="rgb(237,174,47)" fg:x="179" fg:w="18"/><text x="89.3047%" y="302.50">open (lark/la..</text></g><g><title>__init__ (lark/lark.py:439) (1 samples, 0.50%)</title><rect x="97.5124%" y="308" width="0.4975%" height="15" fill="rgb(206,201,31)" fg:x="196" fg:w="1"/><text x="97.7624%" y="318.50"></text></g><g><title>_build_parser (lark/lark.py:485) (1 samples, 0.50%)</title><rect x="97.5124%" y="324" width="0.4975%" height="15" fill="rgb(231,57,52)" fg:x="196" fg:w="1"/><text x="97.7624%" y="334.50"></text></g><g><title>_construct_parsing_frontend (lark/parser_frontends.py:257) (1 samples, 0.50%)</title><rect x="97.5124%" y="340" width="0.4975%" height="15" fill="rgb(248,177,22)" fg:x="196" fg:w="1"/><text x="97.7624%" y="350.50"></text></g><g><title>__init__ (lark/parser_frontends.py:61) (1 samples, 0.50%)</title><rect x="97.5124%" y="356" width="0.4975%" height="15" fill="rgb(215,211,37)" fg:x="196" fg:w="1"/><text x="97.7624%" y="366.50"></text></g><g><title>create_earley_parser (lark/parser_frontends.py:215) (1 samples, 0.50%)</title><rect x="97.5124%" y="372" width="0.4975%" height="15" fill="rgb(241,128,51)" fg:x="196" fg:w="1"/><text x="97.7624%" y="382.50"></text></g><g><title>create_earley_parser__dynamic (lark/parser_frontends.py:193) (1 samples, 0.50%)</title><rect x="97.5124%" y="388" width="0.4975%" height="15" fill="rgb(227,165,31)" fg:x="196" fg:w="1"/><text x="97.7624%" y="398.50"></text></g><g><title>__init__ (lark/parsers/xearley.py:34) (1 samples, 0.50%)</title><rect x="97.5124%" y="404" width="0.4975%" height="15" fill="rgb(228,167,24)" fg:x="196" fg:w="1"/><text x="97.7624%" y="414.50"></text></g><g><title>__init__ (lark/parsers/earley.py:35) (1 samples, 0.50%)</title><rect x="97.5124%" y="420" width="0.4975%" height="15" fill="rgb(228,143,12)" fg:x="196" fg:w="1"/><text x="97.7624%" y="430.50"></text></g><g><title>__init__ (lark/parsers/grammar_analysis.py:178) (1 samples, 0.50%)</title><rect x="97.5124%" y="436" width="0.4975%" height="15" fill="rgb(249,149,8)" fg:x="196" fg:w="1"/><text x="97.7624%" y="446.50"></text></g><g><title>calculate_sets (lark/parsers/grammar_analysis.py:129) (1 samples, 0.50%)</title><rect x="97.5124%" y="452" width="0.4975%" height="15" fill="rgb(243,35,44)" fg:x="196" fg:w="1"/><text x="97.7624%" y="462.50"></text></g><g><title>__eq__ (lark/grammar.py:20) (1 samples, 0.50%)</title><rect x="97.5124%" y="468" width="0.4975%" height="15" fill="rgb(246,89,9)" fg:x="196" fg:w="1"/><text x="97.7624%" y="478.50"></text></g><g><title>__eq__ (lark/lexer.py:266) (1 samples, 0.50%)</title><rect x="97.5124%" y="484" width="0.4975%" height="15" fill="rgb(233,213,13)" fg:x="196" fg:w="1"/><text x="97.7624%" y="494.50"></text></g><g><title>&lt;module&gt; (lark/__init__.py:1) (1 samples, 0.50%)</title><rect x="98.0100%" y="356" width="0.4975%" height="15" fill="rgb(233,141,41)" fg:x="197" fg:w="1"/><text x="98.2600%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="98.0100%" y="372" width="0.4975%" height="15" fill="rgb(239,167,4)" fg:x="197" fg:w="1"/><text x="98.2600%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="98.0100%" y="388" width="0.4975%" height="15" fill="rgb(209,217,16)" fg:x="197" fg:w="1"/><text x="98.2600%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="98.0100%" y="404" width="0.4975%" height="15" fill="rgb(219,88,35)" fg:x="197" fg:w="1"/><text x="98.2600%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="98.0100%" y="420" width="0.4975%" height="15" fill="rgb(220,193,23)" fg:x="197" fg:w="1"/><text x="98.2600%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="98.0100%" y="436" width="0.4975%" height="15" fill="rgb(230,90,52)" fg:x="197" fg:w="1"/><text x="98.2600%" y="446.50"></text></g><g><title>&lt;module&gt; (lark/exceptions.py:1) (1 samples, 0.50%)</title><rect x="98.0100%" y="452" width="0.4975%" height="15" fill="rgb(252,106,19)" fg:x="197" fg:w="1"/><text x="98.2600%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="98.0100%" y="468" width="0.4975%" height="15" fill="rgb(206,74,20)" fg:x="197" fg:w="1"/><text x="98.2600%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="98.0100%" y="484" width="0.4975%" height="15" fill="rgb(230,138,44)" fg:x="197" fg:w="1"/><text x="98.2600%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="98.0100%" y="500" width="0.4975%" height="15" fill="rgb(235,182,43)" fg:x="197" fg:w="1"/><text x="98.2600%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="98.0100%" y="516" width="0.4975%" height="15" fill="rgb(242,16,51)" fg:x="197" fg:w="1"/><text x="98.2600%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="98.0100%" y="532" width="0.4975%" height="15" fill="rgb(248,9,4)" fg:x="197" fg:w="1"/><text x="98.2600%" y="542.50"></text></g><g><title>&lt;module&gt; (lark/utils.py:9) (1 samples, 0.50%)</title><rect x="98.0100%" y="548" width="0.4975%" height="15" fill="rgb(210,31,22)" fg:x="197" fg:w="1"/><text x="98.2600%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="98.0100%" y="564" width="0.4975%" height="15" fill="rgb(239,54,39)" fg:x="197" fg:w="1"/><text x="98.2600%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="98.0100%" y="580" width="0.4975%" height="15" fill="rgb(230,99,41)" fg:x="197" fg:w="1"/><text x="98.2600%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="98.0100%" y="596" width="0.4975%" height="15" fill="rgb(253,106,12)" fg:x="197" fg:w="1"/><text x="98.2600%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="98.0100%" y="612" width="0.4975%" height="15" fill="rgb(213,46,41)" fg:x="197" fg:w="1"/><text x="98.2600%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="98.0100%" y="628" width="0.4975%" height="15" fill="rgb(215,133,35)" fg:x="197" fg:w="1"/><text x="98.2600%" y="638.50"></text></g><g><title>&lt;module&gt; (logging/__init__.py:727) (1 samples, 0.50%)</title><rect x="98.0100%" y="644" width="0.4975%" height="15" fill="rgb(213,28,5)" fg:x="197" fg:w="1"/><text x="98.2600%" y="654.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_disperse.py:3) (20 samples, 9.95%)</title><rect x="89.0547%" y="68" width="9.9502%" height="15" fill="rgb(215,77,49)" fg:x="179" fg:w="20"/><text x="89.3047%" y="78.50">&lt;module&gt; (prof..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (20 samples, 9.95%)</title><rect x="89.0547%" y="84" width="9.9502%" height="15" fill="rgb(248,100,22)" fg:x="179" fg:w="20"/><text x="89.3047%" y="94.50">_find_and_load..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (20 samples, 9.95%)</title><rect x="89.0547%" y="100" width="9.9502%" height="15" fill="rgb(208,67,9)" fg:x="179" fg:w="20"/><text x="89.3047%" y="110.50">_find_and_load..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (20 samples, 9.95%)</title><rect x="89.0547%" y="116" width="9.9502%" height="15" fill="rgb(219,133,21)" fg:x="179" fg:w="20"/><text x="89.3047%" y="126.50">_load_unlocked..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (20 samples, 9.95%)</title><rect x="89.0547%" y="132" width="9.9502%" height="15" fill="rgb(246,46,29)" fg:x="179" fg:w="20"/><text x="89.3047%" y="142.50">exec_module (&lt;..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (20 samples, 9.95%)</title><rect x="89.0547%" y="148" width="9.9502%" height="15" fill="rgb(246,185,52)" fg:x="179" fg:w="20"/><text x="89.3047%" y="158.50">_call_with_fra..</text></g><g><title>&lt;module&gt; (kappybara/kappa.py:6) (20 samples, 9.95%)</title><rect x="89.0547%" y="164" width="9.9502%" height="15" fill="rgb(252,136,11)" fg:x="179" fg:w="20"/><text x="89.3047%" y="174.50">&lt;module&gt; (kapp..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (20 samples, 9.95%)</title><rect x="89.0547%" y="180" width="9.9502%" height="15" fill="rgb(219,138,53)" fg:x="179" fg:w="20"/><text x="89.3047%" y="190.50">_find_and_load..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (20 samples, 9.95%)</title><rect x="89.0547%" y="196" width="9.9502%" height="15" fill="rgb(211,51,23)" fg:x="179" fg:w="20"/><text x="89.3047%" y="206.50">_find_and_load..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (20 samples, 9.95%)</title><rect x="89.0547%" y="212" width="9.9502%" height="15" fill="rgb(247,221,28)" fg:x="179" fg:w="20"/><text x="89.3047%" y="222.50">_load_unlocked..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (20 samples, 9.95%)</title><rect x="89.0547%" y="228" width="9.9502%" height="15" fill="rgb(251,222,45)" fg:x="179" fg:w="20"/><text x="89.3047%" y="238.50">exec_module (&lt;..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (20 samples, 9.95%)</title><rect x="89.0547%" y="244" width="9.9502%" height="15" fill="rgb(217,162,53)" fg:x="179" fg:w="20"/><text x="89.3047%" y="254.50">_call_with_fra..</text></g><g><title>&lt;module&gt; (kappybara/grammar.py:4) (2 samples, 1.00%)</title><rect x="98.0100%" y="260" width="0.9950%" height="15" fill="rgb(229,93,14)" fg:x="197" fg:w="2"/><text x="98.2600%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 1.00%)</title><rect x="98.0100%" y="276" width="0.9950%" height="15" fill="rgb(209,67,49)" fg:x="197" fg:w="2"/><text x="98.2600%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 1.00%)</title><rect x="98.0100%" y="292" width="0.9950%" height="15" fill="rgb(213,87,29)" fg:x="197" fg:w="2"/><text x="98.2600%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 1.00%)</title><rect x="98.0100%" y="308" width="0.9950%" height="15" fill="rgb(205,151,52)" fg:x="197" fg:w="2"/><text x="98.2600%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 1.00%)</title><rect x="98.0100%" y="324" width="0.9950%" height="15" fill="rgb(253,215,39)" fg:x="197" fg:w="2"/><text x="98.2600%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 1.00%)</title><rect x="98.0100%" y="340" width="0.9950%" height="15" fill="rgb(221,220,41)" fg:x="197" fg:w="2"/><text x="98.2600%" y="350.50"></text></g><g><title>&lt;module&gt; (lark/__init__.py:11) (1 samples, 0.50%)</title><rect x="98.5075%" y="356" width="0.4975%" height="15" fill="rgb(218,133,21)" fg:x="198" fg:w="1"/><text x="98.7575%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="98.5075%" y="372" width="0.4975%" height="15" fill="rgb(221,193,43)" fg:x="198" fg:w="1"/><text x="98.7575%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="98.5075%" y="388" width="0.4975%" height="15" fill="rgb(240,128,52)" fg:x="198" fg:w="1"/><text x="98.7575%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="98.5075%" y="404" width="0.4975%" height="15" fill="rgb(253,114,12)" fg:x="198" fg:w="1"/><text x="98.7575%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="98.5075%" y="420" width="0.4975%" height="15" fill="rgb(215,223,47)" fg:x="198" fg:w="1"/><text x="98.7575%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="98.5075%" y="436" width="0.4975%" height="15" fill="rgb(248,225,23)" fg:x="198" fg:w="1"/><text x="98.7575%" y="446.50"></text></g><g><title>&lt;module&gt; (lark/lark.py:20) (1 samples, 0.50%)</title><rect x="98.5075%" y="452" width="0.4975%" height="15" fill="rgb(250,108,0)" fg:x="198" fg:w="1"/><text x="98.7575%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="98.5075%" y="468" width="0.4975%" height="15" fill="rgb(228,208,7)" fg:x="198" fg:w="1"/><text x="98.7575%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="98.5075%" y="484" width="0.4975%" height="15" fill="rgb(244,45,10)" fg:x="198" fg:w="1"/><text x="98.7575%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (1 samples, 0.50%)</title><rect x="98.5075%" y="500" width="0.4975%" height="15" fill="rgb(207,125,25)" fg:x="198" fg:w="1"/><text x="98.7575%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (1 samples, 0.50%)</title><rect x="98.5075%" y="516" width="0.4975%" height="15" fill="rgb(210,195,18)" fg:x="198" fg:w="1"/><text x="98.7575%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (1 samples, 0.50%)</title><rect x="98.5075%" y="532" width="0.4975%" height="15" fill="rgb(249,80,12)" fg:x="198" fg:w="1"/><text x="98.7575%" y="542.50"></text></g><g><title>&lt;module&gt; (lark/load_grammar.py:15) (1 samples, 0.50%)</title><rect x="98.5075%" y="548" width="0.4975%" height="15" fill="rgb(221,65,9)" fg:x="198" fg:w="1"/><text x="98.7575%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (1 samples, 0.50%)</title><rect x="98.5075%" y="564" width="0.4975%" height="15" fill="rgb(235,49,36)" fg:x="198" fg:w="1"/><text x="98.7575%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (1 samples, 0.50%)</title><rect x="98.5075%" y="580" width="0.4975%" height="15" fill="rgb(225,32,20)" fg:x="198" fg:w="1"/><text x="98.7575%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:948) (1 samples, 0.50%)</title><rect x="98.5075%" y="596" width="0.4975%" height="15" fill="rgb(215,141,46)" fg:x="198" fg:w="1"/><text x="98.7575%" y="606.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:493) (1 samples, 0.50%)</title><rect x="98.5075%" y="612" width="0.4975%" height="15" fill="rgb(250,160,47)" fg:x="198" fg:w="1"/><text x="98.7575%" y="622.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (1 samples, 0.50%)</title><rect x="99.0050%" y="68" width="0.4975%" height="15" fill="rgb(216,222,40)" fg:x="199" fg:w="1"/><text x="99.2550%" y="78.50"></text></g><g><title>all (201 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(234,217,39)" fg:x="0" fg:w="201"/><text x="0.2500%" y="62.50"></text></g><g><title>sites (kappybara/pattern.py:113) (1 samples, 0.50%)</title><rect x="99.5025%" y="68" width="0.4975%" height="15" fill="rgb(207,178,40)" fg:x="200" fg:w="1"/><text x="99.7525%" y="78.50"></text></g></svg></svg>