<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="570" onload="init(evt)" viewBox="0 0 1200 570" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="570" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o results/profile_uni_bi_small_flamegraph.svg -- python profile_uni_bi_small.py # commit 2ba8cfe</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="559.00"> </text><svg id="frames" x="10" width="1180" total_samples="1745"><g><title>&lt;module&gt; (profile_uni_bi_small.py:19) (2 samples, 0.11%)</title><rect x="0.1146%" y="68" width="0.1146%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="2"/><text x="0.3646%" y="78.50"></text></g><g><title>rules (kappybara/kappa.py:53) (2 samples, 0.11%)</title><rect x="0.1146%" y="84" width="0.1146%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="2"/><text x="0.3646%" y="94.50"></text></g><g><title>parse (kappybara/grammar.py:28) (2 samples, 0.11%)</title><rect x="0.1146%" y="100" width="0.1146%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="2"/><text x="0.3646%" y="110.50"></text></g><g><title>parse (lark/lark.py:655) (2 samples, 0.11%)</title><rect x="0.1146%" y="116" width="0.1146%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="2"/><text x="0.3646%" y="126.50"></text></g><g><title>parse (lark/parser_frontends.py:104) (2 samples, 0.11%)</title><rect x="0.1146%" y="132" width="0.1146%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="2"/><text x="0.3646%" y="142.50"></text></g><g><title>expovariate (random.py:617) (3 samples, 0.17%)</title><rect x="0.3438%" y="116" width="0.1719%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="3"/><text x="0.5938%" y="126.50"></text></g><g><title>n_embeddings (kappybara/rule.py:184) (2 samples, 0.11%)</title><rect x="0.8023%" y="180" width="0.1146%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="2"/><text x="1.0523%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:187) (2 samples, 0.11%)</title><rect x="0.9169%" y="180" width="0.1146%" height="15" fill="rgb(228,23,34)" fg:x="16" fg:w="2"/><text x="1.1669%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:188) (2 samples, 0.11%)</title><rect x="1.0315%" y="180" width="0.1146%" height="15" fill="rgb(218,30,26)" fg:x="18" fg:w="2"/><text x="1.2815%" y="190.50"></text></g><g><title>lookup (kappybara/indexed_set.py:172) (3 samples, 0.17%)</title><rect x="1.8338%" y="228" width="0.1719%" height="15" fill="rgb(220,122,19)" fg:x="32" fg:w="3"/><text x="2.0838%" y="238.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.17%)</title><rect x="1.8338%" y="244" width="0.1719%" height="15" fill="rgb(250,228,42)" fg:x="32" fg:w="3"/><text x="2.0838%" y="254.50"></text></g><g><title>n_embeddings (kappybara/rule.py:189) (17 samples, 0.97%)</title><rect x="1.1461%" y="180" width="0.9742%" height="15" fill="rgb(240,193,28)" fg:x="20" fg:w="17"/><text x="1.3961%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (kappybara/rule.py:190) (9 samples, 0.52%)</title><rect x="1.6046%" y="196" width="0.5158%" height="15" fill="rgb(216,20,37)" fg:x="28" fg:w="9"/><text x="1.8546%" y="206.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (8 samples, 0.46%)</title><rect x="1.6619%" y="212" width="0.4585%" height="15" fill="rgb(206,188,39)" fg:x="29" fg:w="8"/><text x="1.9119%" y="222.50"></text></g><g><title>lookup (kappybara/indexed_set.py:174) (2 samples, 0.11%)</title><rect x="2.0057%" y="228" width="0.1146%" height="15" fill="rgb(217,207,13)" fg:x="35" fg:w="2"/><text x="2.2557%" y="238.50"></text></g><g><title>n_embeddings (kappybara/rule.py:240) (6 samples, 0.34%)</title><rect x="2.2923%" y="180" width="0.3438%" height="15" fill="rgb(231,73,38)" fg:x="40" fg:w="6"/><text x="2.5423%" y="190.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (5 samples, 0.29%)</title><rect x="2.3496%" y="196" width="0.2865%" height="15" fill="rgb(225,20,46)" fg:x="41" fg:w="5"/><text x="2.5996%" y="206.50"></text></g><g><title>lookup (kappybara/indexed_set.py:172) (2 samples, 0.11%)</title><rect x="2.5215%" y="212" width="0.1146%" height="15" fill="rgb(210,31,41)" fg:x="44" fg:w="2"/><text x="2.7715%" y="222.50"></text></g><g><title>n_embeddings (kappybara/rule.py:242) (3 samples, 0.17%)</title><rect x="2.6361%" y="180" width="0.1719%" height="15" fill="rgb(221,200,47)" fg:x="46" fg:w="3"/><text x="2.8861%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:243) (3 samples, 0.17%)</title><rect x="2.8080%" y="180" width="0.1719%" height="15" fill="rgb(226,26,5)" fg:x="49" fg:w="3"/><text x="3.0580%" y="190.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (2 samples, 0.11%)</title><rect x="2.8653%" y="196" width="0.1146%" height="15" fill="rgb(249,33,26)" fg:x="50" fg:w="2"/><text x="3.1153%" y="206.50"></text></g><g><title>lookup (kappybara/indexed_set.py:172) (2 samples, 0.11%)</title><rect x="2.8653%" y="212" width="0.1146%" height="15" fill="rgb(235,183,28)" fg:x="50" fg:w="2"/><text x="3.1153%" y="222.50"></text></g><g><title>update (kappybara/system.py:70) (53 samples, 3.04%)</title><rect x="0.3438%" y="84" width="3.0372%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="53"/><text x="0.5938%" y="94.50">upd..</text></g><g><title>wait (kappybara/system.py:58) (53 samples, 3.04%)</title><rect x="0.3438%" y="100" width="3.0372%" height="15" fill="rgb(247,18,42)" fg:x="6" fg:w="53"/><text x="0.5938%" y="110.50">wai..</text></g><g><title>reactivity (kappybara/system.py:55) (50 samples, 2.87%)</title><rect x="0.5158%" y="116" width="2.8653%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="50"/><text x="0.7658%" y="126.50">re..</text></g><g><title>__get__ (functools.py:998) (50 samples, 2.87%)</title><rect x="0.5158%" y="132" width="2.8653%" height="15" fill="rgb(249,31,29)" fg:x="9" fg:w="50"/><text x="0.7658%" y="142.50">__..</text></g><g><title>rule_reactivities (kappybara/system.py:51) (50 samples, 2.87%)</title><rect x="0.5158%" y="148" width="2.8653%" height="15" fill="rgb(225,111,53)" fg:x="9" fg:w="50"/><text x="0.7658%" y="158.50">ru..</text></g><g><title>reactivity (kappybara/rule.py:32) (48 samples, 2.75%)</title><rect x="0.6304%" y="164" width="2.7507%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="48"/><text x="0.8804%" y="174.50">re..</text></g><g><title>rate (kappybara/rule.py:73) (4 samples, 0.23%)</title><rect x="3.1519%" y="180" width="0.2292%" height="15" fill="rgb(214,148,48)" fg:x="55" fg:w="4"/><text x="3.4019%" y="190.50"></text></g><g><title>evaluate (kappybara/alg_exp.py:22) (3 samples, 0.17%)</title><rect x="3.2092%" y="196" width="0.1719%" height="15" fill="rgb(232,36,49)" fg:x="56" fg:w="3"/><text x="3.4592%" y="206.50"></text></g><g><title>_evaluate (kappybara/alg_exp.py:28) (3 samples, 0.17%)</title><rect x="3.2092%" y="212" width="0.1719%" height="15" fill="rgb(209,103,24)" fg:x="56" fg:w="3"/><text x="3.4592%" y="222.50"></text></g><g><title>act (kappybara/system.py:62) (4 samples, 0.23%)</title><rect x="3.3811%" y="100" width="0.2292%" height="15" fill="rgb(229,88,8)" fg:x="59" fg:w="4"/><text x="3.6311%" y="110.50"></text></g><g><title>_produce_update (kappybara/rule.py:140) (2 samples, 0.11%)</title><rect x="3.8968%" y="132" width="0.1146%" height="15" fill="rgb(213,181,19)" fg:x="68" fg:w="2"/><text x="4.1468%" y="142.50"></text></g><g><title>_produce_update (kappybara/rule.py:157) (3 samples, 0.17%)</title><rect x="4.1261%" y="132" width="0.1719%" height="15" fill="rgb(254,191,54)" fg:x="72" fg:w="3"/><text x="4.3761%" y="142.50"></text></g><g><title>select (kappybara/rule.py:104) (20 samples, 1.15%)</title><rect x="3.6103%" y="116" width="1.1461%" height="15" fill="rgb(241,83,37)" fg:x="63" fg:w="20"/><text x="3.8603%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:165) (7 samples, 0.40%)</title><rect x="4.3553%" y="132" width="0.4011%" height="15" fill="rgb(233,36,39)" fg:x="76" fg:w="7"/><text x="4.6053%" y="142.50"></text></g><g><title>disconnect_site (kappybara/mixture.py:335) (5 samples, 0.29%)</title><rect x="4.4699%" y="148" width="0.2865%" height="15" fill="rgb(226,3,54)" fg:x="78" fg:w="5"/><text x="4.7199%" y="158.50"></text></g><g><title>__init__ (&lt;string&gt;:3) (3 samples, 0.17%)</title><rect x="4.5845%" y="164" width="0.1719%" height="15" fill="rgb(245,192,40)" fg:x="80" fg:w="3"/><text x="4.8345%" y="174.50"></text></g><g><title>select (kappybara/rule.py:204) (2 samples, 0.11%)</title><rect x="4.8138%" y="116" width="0.1146%" height="15" fill="rgb(238,167,29)" fg:x="84" fg:w="2"/><text x="5.0638%" y="126.50"></text></g><g><title>select (kappybara/rule.py:208) (3 samples, 0.17%)</title><rect x="4.9284%" y="116" width="0.1719%" height="15" fill="rgb(232,182,51)" fg:x="86" fg:w="3"/><text x="5.1784%" y="126.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (2 samples, 0.11%)</title><rect x="4.9857%" y="132" width="0.1146%" height="15" fill="rgb(231,60,39)" fg:x="87" fg:w="2"/><text x="5.2357%" y="142.50"></text></g><g><title>select (kappybara/rule.py:210) (2 samples, 0.11%)</title><rect x="5.1003%" y="116" width="0.1146%" height="15" fill="rgb(208,69,12)" fg:x="89" fg:w="2"/><text x="5.3503%" y="126.50"></text></g><g><title>select (kappybara/rule.py:215) (2 samples, 0.11%)</title><rect x="5.2149%" y="116" width="0.1146%" height="15" fill="rgb(235,93,37)" fg:x="91" fg:w="2"/><text x="5.4649%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:142) (2 samples, 0.11%)</title><rect x="5.3868%" y="132" width="0.1146%" height="15" fill="rgb(213,116,39)" fg:x="94" fg:w="2"/><text x="5.6368%" y="142.50"></text></g><g><title>__hash__ (kappybara/mixture.py:22) (3 samples, 0.17%)</title><rect x="5.9026%" y="164" width="0.1719%" height="15" fill="rgb(222,207,29)" fg:x="103" fg:w="3"/><text x="6.1526%" y="174.50"></text></g><g><title>select (kappybara/rule.py:222) (14 samples, 0.80%)</title><rect x="5.3295%" y="116" width="0.8023%" height="15" fill="rgb(206,96,30)" fg:x="93" fg:w="14"/><text x="5.5795%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:163) (7 samples, 0.40%)</title><rect x="5.7307%" y="132" width="0.4011%" height="15" fill="rgb(218,138,4)" fg:x="100" fg:w="7"/><text x="5.9807%" y="142.50"></text></g><g><title>connect_sites (kappybara/mixture.py:330) (6 samples, 0.34%)</title><rect x="5.7880%" y="148" width="0.3438%" height="15" fill="rgb(250,191,14)" fg:x="101" fg:w="6"/><text x="6.0380%" y="158.50"></text></g><g><title>select (kappybara/rule.py:95) (4 samples, 0.23%)</title><rect x="6.1891%" y="116" width="0.2292%" height="15" fill="rgb(239,60,40)" fg:x="108" fg:w="4"/><text x="6.4391%" y="126.50"></text></g><g><title>choice (random.py:348) (3 samples, 0.17%)</title><rect x="6.2464%" y="132" width="0.1719%" height="15" fill="rgb(206,27,48)" fg:x="109" fg:w="3"/><text x="6.4964%" y="142.50"></text></g><g><title>act (kappybara/system.py:64) (50 samples, 2.87%)</title><rect x="3.6103%" y="100" width="2.8653%" height="15" fill="rgb(225,35,8)" fg:x="63" fg:w="50"/><text x="3.8603%" y="110.50">ac..</text></g><g><title>apply_update (kappybara/mixture.py:100) (3 samples, 0.17%)</title><rect x="6.8768%" y="132" width="0.1719%" height="15" fill="rgb(250,213,24)" fg:x="120" fg:w="3"/><text x="7.1268%" y="142.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (5 samples, 0.29%)</title><rect x="7.1633%" y="180" width="0.2865%" height="15" fill="rgb(247,123,22)" fg:x="125" fg:w="5"/><text x="7.4133%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:113) (4 samples, 0.23%)</title><rect x="7.2206%" y="196" width="0.2292%" height="15" fill="rgb(231,138,38)" fg:x="126" fg:w="4"/><text x="7.4706%" y="206.50"></text></g><g><title>neighborhood (kappybara/mixture.py:398) (9 samples, 0.52%)</title><rect x="7.0487%" y="148" width="0.5158%" height="15" fill="rgb(231,145,46)" fg:x="123" fg:w="9"/><text x="7.2987%" y="158.50"></text></g><g><title>neighbors (kappybara/pattern.py:122) (9 samples, 0.52%)</title><rect x="7.0487%" y="164" width="0.5158%" height="15" fill="rgb(251,118,11)" fg:x="123" fg:w="9"/><text x="7.2987%" y="174.50"></text></g><g><title>coupled (kappybara/pattern.py:66) (2 samples, 0.11%)</title><rect x="7.4499%" y="180" width="0.1146%" height="15" fill="rgb(217,147,25)" fg:x="130" fg:w="2"/><text x="7.6999%" y="190.50"></text></g><g><title>neighborhood (kappybara/mixture.py:399) (2 samples, 0.11%)</title><rect x="7.5645%" y="148" width="0.1146%" height="15" fill="rgb(247,81,37)" fg:x="132" fg:w="2"/><text x="7.8145%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:111) (14 samples, 0.80%)</title><rect x="7.0487%" y="132" width="0.8023%" height="15" fill="rgb(209,12,38)" fg:x="123" fg:w="14"/><text x="7.2987%" y="142.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:121) (3 samples, 0.17%)</title><rect x="8.0229%" y="148" width="0.1719%" height="15" fill="rgb(227,1,9)" fg:x="140" fg:w="3"/><text x="8.2729%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:113) (10 samples, 0.57%)</title><rect x="7.8510%" y="132" width="0.5731%" height="15" fill="rgb(248,47,43)" fg:x="137" fg:w="10"/><text x="8.1010%" y="142.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:124) (4 samples, 0.23%)</title><rect x="8.1948%" y="148" width="0.2292%" height="15" fill="rgb(221,10,30)" fg:x="143" fg:w="4"/><text x="8.4448%" y="158.50"></text></g><g><title>create_index (kappybara/indexed_set.py:212) (2 samples, 0.11%)</title><rect x="8.4814%" y="148" width="0.1146%" height="15" fill="rgb(210,229,1)" fg:x="148" fg:w="2"/><text x="8.7314%" y="158.50"></text></g><g><title>create_index (kappybara/indexed_set.py:215) (2 samples, 0.11%)</title><rect x="8.5960%" y="148" width="0.1146%" height="15" fill="rgb(222,148,37)" fg:x="150" fg:w="2"/><text x="8.8460%" y="158.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:124) (2 samples, 0.11%)</title><rect x="8.9398%" y="164" width="0.1146%" height="15" fill="rgb(234,67,33)" fg:x="156" fg:w="2"/><text x="9.1898%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:130) (2 samples, 0.11%)</title><rect x="9.0544%" y="164" width="0.1146%" height="15" fill="rgb(247,98,35)" fg:x="158" fg:w="2"/><text x="9.3044%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:133) (3 samples, 0.17%)</title><rect x="9.1691%" y="164" width="0.1719%" height="15" fill="rgb(247,138,52)" fg:x="160" fg:w="3"/><text x="9.4191%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:114) (18 samples, 1.03%)</title><rect x="8.4241%" y="132" width="1.0315%" height="15" fill="rgb(213,79,30)" fg:x="147" fg:w="18"/><text x="8.6741%" y="142.50"></text></g><g><title>create_index (kappybara/indexed_set.py:218) (13 samples, 0.74%)</title><rect x="8.7106%" y="148" width="0.7450%" height="15" fill="rgb(246,177,23)" fg:x="152" fg:w="13"/><text x="8.9606%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:116) (3 samples, 0.17%)</title><rect x="9.5129%" y="132" width="0.1719%" height="15" fill="rgb(230,62,27)" fg:x="166" fg:w="3"/><text x="9.7629%" y="142.50"></text></g><g><title>embeddings (kappybara/pattern.py:268) (9 samples, 0.52%)</title><rect x="10.0860%" y="148" width="0.5158%" height="15" fill="rgb(216,154,8)" fg:x="176" fg:w="9"/><text x="10.3360%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:270) (36 samples, 2.06%)</title><rect x="10.6017%" y="148" width="2.0630%" height="15" fill="rgb(244,35,45)" fg:x="185" fg:w="36"/><text x="10.8517%" y="158.50">e..</text></g><g><title>embeddings (kappybara/pattern.py:271) (16 samples, 0.92%)</title><rect x="12.6648%" y="148" width="0.9169%" height="15" fill="rgb(251,115,12)" fg:x="221" fg:w="16"/><text x="12.9148%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:274) (3 samples, 0.17%)</title><rect x="13.5817%" y="148" width="0.1719%" height="15" fill="rgb(240,54,50)" fg:x="237" fg:w="3"/><text x="13.8317%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:275) (3 samples, 0.17%)</title><rect x="13.7536%" y="148" width="0.1719%" height="15" fill="rgb(233,84,52)" fg:x="240" fg:w="3"/><text x="14.0036%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:276) (13 samples, 0.74%)</title><rect x="13.9255%" y="148" width="0.7450%" height="15" fill="rgb(207,117,47)" fg:x="243" fg:w="13"/><text x="14.1755%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:278) (7 samples, 0.40%)</title><rect x="14.6705%" y="148" width="0.4011%" height="15" fill="rgb(249,43,39)" fg:x="256" fg:w="7"/><text x="14.9205%" y="158.50"></text></g><g><title>embeds_in (kappybara/pattern.py:173) (4 samples, 0.23%)</title><rect x="15.4728%" y="164" width="0.2292%" height="15" fill="rgb(209,38,44)" fg:x="270" fg:w="4"/><text x="15.7228%" y="174.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (7 samples, 0.40%)</title><rect x="16.1605%" y="180" width="0.4011%" height="15" fill="rgb(236,212,23)" fg:x="282" fg:w="7"/><text x="16.4105%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:111) (7 samples, 0.40%)</title><rect x="17.2493%" y="196" width="0.4011%" height="15" fill="rgb(242,79,21)" fg:x="301" fg:w="7"/><text x="17.4993%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:176) (53 samples, 3.04%)</title><rect x="15.7593%" y="164" width="3.0372%" height="15" fill="rgb(211,96,35)" fg:x="275" fg:w="53"/><text x="16.0093%" y="174.50">emb..</text></g><g><title>__iter__ (kappybara/pattern.py:99) (39 samples, 2.23%)</title><rect x="16.5616%" y="180" width="2.2350%" height="15" fill="rgb(253,215,40)" fg:x="289" fg:w="39"/><text x="16.8116%" y="190.50">_..</text></g><g><title>sites (kappybara/pattern.py:113) (20 samples, 1.15%)</title><rect x="17.6504%" y="196" width="1.1461%" height="15" fill="rgb(211,81,21)" fg:x="308" fg:w="20"/><text x="17.9004%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:177) (4 samples, 0.23%)</title><rect x="18.7966%" y="164" width="0.2292%" height="15" fill="rgb(208,190,38)" fg:x="328" fg:w="4"/><text x="19.0466%" y="174.50"></text></g><g><title>embeds_in (kappybara/pattern.py:179) (10 samples, 0.57%)</title><rect x="19.0258%" y="164" width="0.5731%" height="15" fill="rgb(235,213,38)" fg:x="332" fg:w="10"/><text x="19.2758%" y="174.50"></text></g><g><title>__getitem__ (kappybara/pattern.py:102) (3 samples, 0.17%)</title><rect x="19.4269%" y="180" width="0.1719%" height="15" fill="rgb(237,122,38)" fg:x="339" fg:w="3"/><text x="19.6769%" y="190.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (4 samples, 0.23%)</title><rect x="21.2607%" y="180" width="0.2292%" height="15" fill="rgb(244,218,35)" fg:x="371" fg:w="4"/><text x="21.5107%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:68) (2 samples, 0.11%)</title><rect x="21.4900%" y="180" width="0.1146%" height="15" fill="rgb(240,68,47)" fg:x="375" fg:w="2"/><text x="21.7400%" y="190.50"></text></g><g><title>stated (kappybara/pattern.py:52) (2 samples, 0.11%)</title><rect x="21.8338%" y="196" width="0.1146%" height="15" fill="rgb(210,16,53)" fg:x="381" fg:w="2"/><text x="22.0838%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:70) (13 samples, 0.74%)</title><rect x="21.6046%" y="180" width="0.7450%" height="15" fill="rgb(235,124,12)" fg:x="377" fg:w="13"/><text x="21.8546%" y="190.50"></text></g><g><title>stated (kappybara/pattern.py:54) (7 samples, 0.40%)</title><rect x="21.9484%" y="196" width="0.4011%" height="15" fill="rgb(224,169,11)" fg:x="383" fg:w="7"/><text x="22.1984%" y="206.50"></text></g><g><title>bound (kappybara/pattern.py:59) (19 samples, 1.09%)</title><rect x="22.7507%" y="196" width="1.0888%" height="15" fill="rgb(250,166,2)" fg:x="397" fg:w="19"/><text x="23.0007%" y="206.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (9 samples, 0.52%)</title><rect x="23.3238%" y="212" width="0.5158%" height="15" fill="rgb(242,216,29)" fg:x="407" fg:w="9"/><text x="23.5738%" y="222.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.11%)</title><rect x="23.7249%" y="228" width="0.1146%" height="15" fill="rgb(230,116,27)" fg:x="414" fg:w="2"/><text x="23.9749%" y="238.50"></text></g><g><title>bound (kappybara/pattern.py:60) (9 samples, 0.52%)</title><rect x="23.8395%" y="196" width="0.5158%" height="15" fill="rgb(228,99,48)" fg:x="416" fg:w="9"/><text x="24.0895%" y="206.50"></text></g><g><title>bound (kappybara/pattern.py:61) (4 samples, 0.23%)</title><rect x="24.3553%" y="196" width="0.2292%" height="15" fill="rgb(253,11,6)" fg:x="425" fg:w="4"/><text x="24.6053%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:71) (43 samples, 2.46%)</title><rect x="22.3496%" y="180" width="2.4642%" height="15" fill="rgb(247,143,39)" fg:x="390" fg:w="43"/><text x="22.5996%" y="190.50">em..</text></g><g><title>coupled (kappybara/pattern.py:66) (3 samples, 0.17%)</title><rect x="24.6418%" y="196" width="0.1719%" height="15" fill="rgb(236,97,10)" fg:x="430" fg:w="3"/><text x="24.8918%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:75) (3 samples, 0.17%)</title><rect x="24.8138%" y="180" width="0.1719%" height="15" fill="rgb(233,208,19)" fg:x="433" fg:w="3"/><text x="25.0638%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:76) (9 samples, 0.52%)</title><rect x="24.9857%" y="180" width="0.5158%" height="15" fill="rgb(216,164,2)" fg:x="436" fg:w="9"/><text x="25.2357%" y="190.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (6 samples, 0.34%)</title><rect x="25.1576%" y="196" width="0.3438%" height="15" fill="rgb(220,129,5)" fg:x="439" fg:w="6"/><text x="25.4076%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:77) (13 samples, 0.74%)</title><rect x="25.5014%" y="180" width="0.7450%" height="15" fill="rgb(242,17,10)" fg:x="445" fg:w="13"/><text x="25.7514%" y="190.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (9 samples, 0.52%)</title><rect x="25.7307%" y="196" width="0.5158%" height="15" fill="rgb(242,107,0)" fg:x="449" fg:w="9"/><text x="25.9807%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (5 samples, 0.29%)</title><rect x="25.9599%" y="212" width="0.2865%" height="15" fill="rgb(251,28,31)" fg:x="453" fg:w="5"/><text x="26.2099%" y="222.50"></text></g><g><title>embeds_in (kappybara/pattern.py:78) (5 samples, 0.29%)</title><rect x="26.2464%" y="180" width="0.2865%" height="15" fill="rgb(233,223,10)" fg:x="458" fg:w="5"/><text x="26.4964%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:83) (8 samples, 0.46%)</title><rect x="26.5330%" y="180" width="0.4585%" height="15" fill="rgb(215,21,27)" fg:x="463" fg:w="8"/><text x="26.7830%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:85) (6 samples, 0.34%)</title><rect x="26.9914%" y="180" width="0.3438%" height="15" fill="rgb(232,23,21)" fg:x="471" fg:w="6"/><text x="27.2414%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:279) (237 samples, 13.58%)</title><rect x="15.0716%" y="148" width="13.5817%" height="15" fill="rgb(244,5,23)" fg:x="263" fg:w="237"/><text x="15.3216%" y="158.50">embeddings (kappybara..</text></g><g><title>embeds_in (kappybara/pattern.py:180) (158 samples, 9.05%)</title><rect x="19.5989%" y="164" width="9.0544%" height="15" fill="rgb(226,81,46)" fg:x="342" fg:w="158"/><text x="19.8489%" y="174.50">embeds_in (ka..</text></g><g><title>sites (kappybara/pattern.py:113) (22 samples, 1.26%)</title><rect x="27.3926%" y="180" width="1.2607%" height="15" fill="rgb(247,70,30)" fg:x="478" fg:w="22"/><text x="27.6426%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:283) (22 samples, 1.26%)</title><rect x="28.6533%" y="148" width="1.2607%" height="15" fill="rgb(212,68,19)" fg:x="500" fg:w="22"/><text x="28.9033%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (17 samples, 0.97%)</title><rect x="28.9398%" y="164" width="0.9742%" height="15" fill="rgb(240,187,13)" fg:x="505" fg:w="17"/><text x="29.1898%" y="174.50"></text></g><g><title>sites (kappybara/pattern.py:113) (9 samples, 0.52%)</title><rect x="29.3983%" y="180" width="0.5158%" height="15" fill="rgb(223,113,26)" fg:x="513" fg:w="9"/><text x="29.6483%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:284) (9 samples, 0.52%)</title><rect x="29.9140%" y="148" width="0.5158%" height="15" fill="rgb(206,192,2)" fg:x="522" fg:w="9"/><text x="30.1640%" y="158.50"></text></g><g><title>__getitem__ (kappybara/pattern.py:102) (3 samples, 0.17%)</title><rect x="30.2579%" y="164" width="0.1719%" height="15" fill="rgb(241,108,4)" fg:x="528" fg:w="3"/><text x="30.5079%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:290) (7 samples, 0.40%)</title><rect x="30.5444%" y="148" width="0.4011%" height="15" fill="rgb(247,173,49)" fg:x="533" fg:w="7"/><text x="30.7944%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (2 samples, 0.11%)</title><rect x="31.7479%" y="164" width="0.1146%" height="15" fill="rgb(224,114,35)" fg:x="554" fg:w="2"/><text x="31.9979%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:293) (19 samples, 1.09%)</title><rect x="30.9456%" y="148" width="1.0888%" height="15" fill="rgb(245,159,27)" fg:x="540" fg:w="19"/><text x="31.1956%" y="158.50"></text></g><g><title>sites (kappybara/pattern.py:113) (3 samples, 0.17%)</title><rect x="31.8625%" y="164" width="0.1719%" height="15" fill="rgb(245,172,44)" fg:x="556" fg:w="3"/><text x="32.1125%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:295) (3 samples, 0.17%)</title><rect x="32.0344%" y="148" width="0.1719%" height="15" fill="rgb(236,23,11)" fg:x="559" fg:w="3"/><text x="32.2844%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:117) (403 samples, 23.09%)</title><rect x="9.6848%" y="132" width="23.0946%" height="15" fill="rgb(205,117,38)" fg:x="169" fg:w="403"/><text x="9.9348%" y="142.50">apply_update (kappybara/mixture.py:11..</text></g><g><title>embeddings (kappybara/pattern.py:298) (10 samples, 0.57%)</title><rect x="32.2063%" y="148" width="0.5731%" height="15" fill="rgb(237,72,25)" fg:x="562" fg:w="10"/><text x="32.4563%" y="158.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (4 samples, 0.23%)</title><rect x="32.5501%" y="164" width="0.2292%" height="15" fill="rgb(244,70,9)" fg:x="568" fg:w="4"/><text x="32.8001%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:130) (12 samples, 0.69%)</title><rect x="33.0659%" y="148" width="0.6877%" height="15" fill="rgb(217,125,39)" fg:x="577" fg:w="12"/><text x="33.3159%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (10 samples, 0.57%)</title><rect x="33.1805%" y="164" width="0.5731%" height="15" fill="rgb(235,36,10)" fg:x="579" fg:w="10"/><text x="33.4305%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:133) (13 samples, 0.74%)</title><rect x="33.7536%" y="148" width="0.7450%" height="15" fill="rgb(251,123,47)" fg:x="589" fg:w="13"/><text x="34.0036%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (10 samples, 0.57%)</title><rect x="33.9255%" y="164" width="0.5731%" height="15" fill="rgb(221,13,13)" fg:x="592" fg:w="10"/><text x="34.1755%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:136) (3 samples, 0.17%)</title><rect x="34.4986%" y="148" width="0.1719%" height="15" fill="rgb(238,131,9)" fg:x="602" fg:w="3"/><text x="34.7486%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:137) (14 samples, 0.80%)</title><rect x="34.6705%" y="148" width="0.8023%" height="15" fill="rgb(211,50,8)" fg:x="605" fg:w="14"/><text x="34.9205%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (6 samples, 0.34%)</title><rect x="35.1289%" y="164" width="0.3438%" height="15" fill="rgb(245,182,24)" fg:x="613" fg:w="6"/><text x="35.3789%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:140) (3 samples, 0.17%)</title><rect x="35.4728%" y="148" width="0.1719%" height="15" fill="rgb(242,14,37)" fg:x="619" fg:w="3"/><text x="35.7228%" y="158.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:37) (5 samples, 0.29%)</title><rect x="36.2178%" y="164" width="0.2865%" height="15" fill="rgb(246,228,12)" fg:x="632" fg:w="5"/><text x="36.4678%" y="174.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:81) (3 samples, 0.17%)</title><rect x="36.3324%" y="180" width="0.1719%" height="15" fill="rgb(213,55,15)" fg:x="634" fg:w="3"/><text x="36.5824%" y="190.50"></text></g><g><title>add (kappybara/indexed_set.py:143) (21 samples, 1.20%)</title><rect x="35.6447%" y="148" width="1.2034%" height="15" fill="rgb(209,9,3)" fg:x="622" fg:w="21"/><text x="35.8947%" y="158.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:66) (6 samples, 0.34%)</title><rect x="36.5043%" y="164" width="0.3438%" height="15" fill="rgb(230,59,30)" fg:x="637" fg:w="6"/><text x="36.7543%" y="174.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:184) (5 samples, 0.29%)</title><rect x="36.5616%" y="180" width="0.2865%" height="15" fill="rgb(209,121,21)" fg:x="638" fg:w="5"/><text x="36.8116%" y="190.50"></text></g><g><title>lookup (kappybara/indexed_set.py:176) (3 samples, 0.17%)</title><rect x="36.6762%" y="196" width="0.1719%" height="15" fill="rgb(220,109,13)" fg:x="640" fg:w="3"/><text x="36.9262%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:144) (2 samples, 0.11%)</title><rect x="36.8481%" y="148" width="0.1146%" height="15" fill="rgb(232,18,1)" fg:x="643" fg:w="2"/><text x="37.0981%" y="158.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:119) (3 samples, 0.17%)</title><rect x="37.8223%" y="164" width="0.1719%" height="15" fill="rgb(215,41,42)" fg:x="660" fg:w="3"/><text x="38.0723%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:121) (4 samples, 0.23%)</title><rect x="37.9943%" y="164" width="0.2292%" height="15" fill="rgb(224,123,36)" fg:x="663" fg:w="4"/><text x="38.2443%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:123) (3 samples, 0.17%)</title><rect x="38.2235%" y="164" width="0.1719%" height="15" fill="rgb(240,125,3)" fg:x="667" fg:w="3"/><text x="38.4735%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:124) (6 samples, 0.34%)</title><rect x="38.3954%" y="164" width="0.3438%" height="15" fill="rgb(205,98,50)" fg:x="670" fg:w="6"/><text x="38.6454%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (3 samples, 0.17%)</title><rect x="40.6304%" y="196" width="0.1719%" height="15" fill="rgb(205,185,37)" fg:x="709" fg:w="3"/><text x="40.8804%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:130) (35 samples, 2.01%)</title><rect x="38.8539%" y="164" width="2.0057%" height="15" fill="rgb(238,207,15)" fg:x="678" fg:w="35"/><text x="39.1039%" y="174.50">a..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (31 samples, 1.78%)</title><rect x="39.0831%" y="180" width="1.7765%" height="15" fill="rgb(213,199,42)" fg:x="682" fg:w="31"/><text x="39.3331%" y="190.50">_..</text></g><g><title>add (kappybara/indexed_set.py:131) (2 samples, 0.11%)</title><rect x="40.8596%" y="164" width="0.1146%" height="15" fill="rgb(235,201,11)" fg:x="713" fg:w="2"/><text x="41.1096%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:133) (36 samples, 2.06%)</title><rect x="40.9742%" y="164" width="2.0630%" height="15" fill="rgb(207,46,11)" fg:x="715" fg:w="36"/><text x="41.2242%" y="174.50">a..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (29 samples, 1.66%)</title><rect x="41.3754%" y="180" width="1.6619%" height="15" fill="rgb(241,35,35)" fg:x="722" fg:w="29"/><text x="41.6254%" y="190.50"></text></g><g><title>add (kappybara/indexed_set.py:136) (4 samples, 0.23%)</title><rect x="43.0372%" y="164" width="0.2292%" height="15" fill="rgb(243,32,47)" fg:x="751" fg:w="4"/><text x="43.2872%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:137) (27 samples, 1.55%)</title><rect x="43.2665%" y="164" width="1.5473%" height="15" fill="rgb(247,202,23)" fg:x="755" fg:w="27"/><text x="43.5165%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (15 samples, 0.86%)</title><rect x="43.9542%" y="180" width="0.8596%" height="15" fill="rgb(219,102,11)" fg:x="767" fg:w="15"/><text x="44.2042%" y="190.50"></text></g><g><title>apply_update (kappybara/mixture.py:118) (214 samples, 12.26%)</title><rect x="32.7794%" y="132" width="12.2636%" height="15" fill="rgb(243,110,44)" fg:x="572" fg:w="214"/><text x="33.0294%" y="142.50">apply_update (kapp..</text></g><g><title>add (kappybara/indexed_set.py:146) (140 samples, 8.02%)</title><rect x="37.0201%" y="148" width="8.0229%" height="15" fill="rgb(222,74,54)" fg:x="646" fg:w="140"/><text x="37.2701%" y="158.50">add (kappyb..</text></g><g><title>add (kappybara/indexed_set.py:140) (4 samples, 0.23%)</title><rect x="44.8138%" y="164" width="0.2292%" height="15" fill="rgb(216,99,12)" fg:x="782" fg:w="4"/><text x="45.0638%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:89) (3 samples, 0.17%)</title><rect x="45.0430%" y="132" width="0.1719%" height="15" fill="rgb(226,22,26)" fg:x="786" fg:w="3"/><text x="45.2930%" y="142.50"></text></g><g><title>apply_update (kappybara/mixture.py:90) (2 samples, 0.11%)</title><rect x="45.2149%" y="132" width="0.1146%" height="15" fill="rgb(217,163,10)" fg:x="789" fg:w="2"/><text x="45.4649%" y="142.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:185) (4 samples, 0.23%)</title><rect x="45.7880%" y="148" width="0.2292%" height="15" fill="rgb(213,25,53)" fg:x="799" fg:w="4"/><text x="46.0380%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:190) (4 samples, 0.23%)</title><rect x="46.0172%" y="148" width="0.2292%" height="15" fill="rgb(252,105,26)" fg:x="803" fg:w="4"/><text x="46.2672%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:195) (19 samples, 1.09%)</title><rect x="46.2464%" y="148" width="1.0888%" height="15" fill="rgb(220,39,43)" fg:x="807" fg:w="19"/><text x="46.4964%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (13 samples, 0.74%)</title><rect x="46.5903%" y="164" width="0.7450%" height="15" fill="rgb(229,68,48)" fg:x="813" fg:w="13"/><text x="46.8403%" y="174.50"></text></g><g><title>remove (kappybara/indexed_set.py:149) (13 samples, 0.74%)</title><rect x="47.4499%" y="164" width="0.7450%" height="15" fill="rgb(252,8,32)" fg:x="828" fg:w="13"/><text x="47.6999%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (11 samples, 0.63%)</title><rect x="47.5645%" y="180" width="0.6304%" height="15" fill="rgb(223,20,43)" fg:x="830" fg:w="11"/><text x="47.8145%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:150) (12 samples, 0.69%)</title><rect x="48.1948%" y="164" width="0.6877%" height="15" fill="rgb(229,81,49)" fg:x="841" fg:w="12"/><text x="48.4448%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (10 samples, 0.57%)</title><rect x="48.3095%" y="180" width="0.5731%" height="15" fill="rgb(236,28,36)" fg:x="843" fg:w="10"/><text x="48.5595%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:153) (14 samples, 0.80%)</title><rect x="48.8825%" y="164" width="0.8023%" height="15" fill="rgb(249,185,26)" fg:x="853" fg:w="14"/><text x="49.1325%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (12 samples, 0.69%)</title><rect x="48.9971%" y="180" width="0.6877%" height="15" fill="rgb(249,174,33)" fg:x="855" fg:w="12"/><text x="49.2471%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:157) (6 samples, 0.34%)</title><rect x="49.7994%" y="164" width="0.3438%" height="15" fill="rgb(233,201,37)" fg:x="869" fg:w="6"/><text x="50.0494%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (5 samples, 0.29%)</title><rect x="49.8567%" y="180" width="0.2865%" height="15" fill="rgb(221,78,26)" fg:x="870" fg:w="5"/><text x="50.1067%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:161) (2 samples, 0.11%)</title><rect x="50.1433%" y="164" width="0.1146%" height="15" fill="rgb(250,127,30)" fg:x="875" fg:w="2"/><text x="50.3933%" y="174.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:37) (2 samples, 0.11%)</title><rect x="50.7163%" y="180" width="0.1146%" height="15" fill="rgb(230,49,44)" fg:x="885" fg:w="2"/><text x="50.9663%" y="190.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:81) (2 samples, 0.11%)</title><rect x="50.7163%" y="196" width="0.1146%" height="15" fill="rgb(229,67,23)" fg:x="885" fg:w="2"/><text x="50.9663%" y="206.50"></text></g><g><title>lookup (kappybara/indexed_set.py:172) (4 samples, 0.23%)</title><rect x="51.5186%" y="212" width="0.2292%" height="15" fill="rgb(249,83,47)" fg:x="899" fg:w="4"/><text x="51.7686%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:163) (28 samples, 1.60%)</title><rect x="50.2579%" y="164" width="1.6046%" height="15" fill="rgb(215,43,3)" fg:x="877" fg:w="28"/><text x="50.5079%" y="174.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:66) (18 samples, 1.03%)</title><rect x="50.8309%" y="180" width="1.0315%" height="15" fill="rgb(238,154,13)" fg:x="887" fg:w="18"/><text x="51.0809%" y="190.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:184) (15 samples, 0.86%)</title><rect x="51.0029%" y="196" width="0.8596%" height="15" fill="rgb(219,56,2)" fg:x="890" fg:w="15"/><text x="51.2529%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.17%)</title><rect x="52.3782%" y="180" width="0.1719%" height="15" fill="rgb(233,0,4)" fg:x="914" fg:w="3"/><text x="52.6282%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (2 samples, 0.11%)</title><rect x="53.1232%" y="196" width="0.1146%" height="15" fill="rgb(235,30,7)" fg:x="927" fg:w="2"/><text x="53.3732%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.11%)</title><rect x="54.9570%" y="212" width="0.1146%" height="15" fill="rgb(250,79,13)" fg:x="959" fg:w="2"/><text x="55.2070%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:149) (45 samples, 2.58%)</title><rect x="52.5501%" y="180" width="2.5788%" height="15" fill="rgb(211,146,34)" fg:x="917" fg:w="45"/><text x="52.8001%" y="190.50">re..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (33 samples, 1.89%)</title><rect x="53.2378%" y="196" width="1.8911%" height="15" fill="rgb(228,22,38)" fg:x="929" fg:w="33"/><text x="53.4878%" y="206.50">_..</text></g><g><title>remove (kappybara/indexed_set.py:150) (41 samples, 2.35%)</title><rect x="55.1289%" y="180" width="2.3496%" height="15" fill="rgb(235,168,5)" fg:x="962" fg:w="41"/><text x="55.3789%" y="190.50">r..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (31 samples, 1.78%)</title><rect x="55.7020%" y="196" width="1.7765%" height="15" fill="rgb(221,155,16)" fg:x="972" fg:w="31"/><text x="55.9520%" y="206.50">_..</text></g><g><title>remove (kappybara/indexed_set.py:153) (36 samples, 2.06%)</title><rect x="57.4785%" y="180" width="2.0630%" height="15" fill="rgb(215,215,53)" fg:x="1003" fg:w="36"/><text x="57.7285%" y="190.50">r..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (32 samples, 1.83%)</title><rect x="57.7077%" y="196" width="1.8338%" height="15" fill="rgb(223,4,10)" fg:x="1007" fg:w="32"/><text x="57.9577%" y="206.50">_..</text></g><g><title>remove (kappybara/indexed_set.py:154) (4 samples, 0.23%)</title><rect x="59.5415%" y="180" width="0.2292%" height="15" fill="rgb(234,103,6)" fg:x="1039" fg:w="4"/><text x="59.7915%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:155) (4 samples, 0.23%)</title><rect x="59.7708%" y="180" width="0.2292%" height="15" fill="rgb(227,97,0)" fg:x="1043" fg:w="4"/><text x="60.0208%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:157) (20 samples, 1.15%)</title><rect x="60.0000%" y="180" width="1.1461%" height="15" fill="rgb(234,150,53)" fg:x="1047" fg:w="20"/><text x="60.2500%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (17 samples, 0.97%)</title><rect x="60.1719%" y="196" width="0.9742%" height="15" fill="rgb(228,201,54)" fg:x="1050" fg:w="17"/><text x="60.4219%" y="206.50"></text></g><g><title>remove (kappybara/indexed_set.py:164) (165 samples, 9.46%)</title><rect x="51.8625%" y="164" width="9.4556%" height="15" fill="rgb(222,22,37)" fg:x="905" fg:w="165"/><text x="52.1125%" y="174.50">remove (kappyb..</text></g><g><title>remove (kappybara/indexed_set.py:160) (3 samples, 0.17%)</title><rect x="61.1461%" y="180" width="0.1719%" height="15" fill="rgb(237,53,32)" fg:x="1067" fg:w="3"/><text x="61.3961%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:167) (13 samples, 0.74%)</title><rect x="61.3181%" y="164" width="0.7450%" height="15" fill="rgb(233,25,53)" fg:x="1070" fg:w="13"/><text x="61.5681%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:91) (301 samples, 17.25%)</title><rect x="45.3295%" y="132" width="17.2493%" height="15" fill="rgb(210,40,34)" fg:x="791" fg:w="301"/><text x="45.5795%" y="142.50">apply_update (kappybara/mix..</text></g><g><title>remove_by (kappybara/indexed_set.py:196) (266 samples, 15.24%)</title><rect x="47.3352%" y="148" width="15.2436%" height="15" fill="rgb(241,220,44)" fg:x="826" fg:w="266"/><text x="47.5852%" y="158.50">remove_by (kappybara/in..</text></g><g><title>remove (kappybara/indexed_set.py:168) (9 samples, 0.52%)</title><rect x="62.0630%" y="164" width="0.5158%" height="15" fill="rgb(235,28,35)" fg:x="1083" fg:w="9"/><text x="62.3130%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:121) (18 samples, 1.03%)</title><rect x="63.0946%" y="180" width="1.0315%" height="15" fill="rgb(210,56,17)" fg:x="1101" fg:w="18"/><text x="63.3446%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (10 samples, 0.57%)</title><rect x="63.5530%" y="196" width="0.5731%" height="15" fill="rgb(224,130,29)" fg:x="1109" fg:w="10"/><text x="63.8030%" y="206.50"></text></g><g><title>__init__ (kappybara/pattern.py:219) (44 samples, 2.52%)</title><rect x="62.9799%" y="164" width="2.5215%" height="15" fill="rgb(235,212,8)" fg:x="1099" fg:w="44"/><text x="63.2299%" y="174.50">__..</text></g><g><title>__init__ (kappybara/indexed_set.py:124) (24 samples, 1.38%)</title><rect x="64.1261%" y="180" width="1.3754%" height="15" fill="rgb(223,33,50)" fg:x="1119" fg:w="24"/><text x="64.3761%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (5 samples, 0.29%)</title><rect x="65.2149%" y="196" width="0.2865%" height="15" fill="rgb(219,149,13)" fg:x="1138" fg:w="5"/><text x="65.4649%" y="206.50"></text></g><g><title>create_index (kappybara/indexed_set.py:214) (3 samples, 0.17%)</title><rect x="65.5587%" y="180" width="0.1719%" height="15" fill="rgb(250,156,29)" fg:x="1144" fg:w="3"/><text x="65.8087%" y="190.50"></text></g><g><title>create_index (kappybara/indexed_set.py:215) (57 samples, 3.27%)</title><rect x="65.7307%" y="180" width="3.2665%" height="15" fill="rgb(216,193,19)" fg:x="1147" fg:w="57"/><text x="65.9807%" y="190.50">cre..</text></g><g><title>__call__ (kappybara/indexed_set.py:66) (12 samples, 0.69%)</title><rect x="68.3095%" y="196" width="0.6877%" height="15" fill="rgb(216,135,14)" fg:x="1192" fg:w="12"/><text x="68.5595%" y="206.50"></text></g><g><title>&lt;lambda&gt; (kappybara/pattern.py:221) (7 samples, 0.40%)</title><rect x="68.5960%" y="212" width="0.4011%" height="15" fill="rgb(241,47,5)" fg:x="1197" fg:w="7"/><text x="68.8460%" y="222.50"></text></g><g><title>create_index (kappybara/indexed_set.py:216) (2 samples, 0.11%)</title><rect x="68.9971%" y="180" width="0.1146%" height="15" fill="rgb(233,42,35)" fg:x="1204" fg:w="2"/><text x="69.2471%" y="190.50"></text></g><g><title>add (kappybara/indexed_set.py:129) (3 samples, 0.17%)</title><rect x="71.0029%" y="196" width="0.1719%" height="15" fill="rgb(231,13,6)" fg:x="1239" fg:w="3"/><text x="71.2529%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:130) (25 samples, 1.43%)</title><rect x="71.1748%" y="196" width="1.4327%" height="15" fill="rgb(207,181,40)" fg:x="1242" fg:w="25"/><text x="71.4248%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (4 samples, 0.23%)</title><rect x="72.3782%" y="212" width="0.2292%" height="15" fill="rgb(254,173,49)" fg:x="1263" fg:w="4"/><text x="72.6282%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:131) (2 samples, 0.11%)</title><rect x="72.6074%" y="196" width="0.1146%" height="15" fill="rgb(221,1,38)" fg:x="1267" fg:w="2"/><text x="72.8574%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:133) (30 samples, 1.72%)</title><rect x="72.7221%" y="196" width="1.7192%" height="15" fill="rgb(206,124,46)" fg:x="1269" fg:w="30"/><text x="72.9721%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.11%)</title><rect x="74.3266%" y="212" width="0.1146%" height="15" fill="rgb(249,21,11)" fg:x="1297" fg:w="2"/><text x="74.5766%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:136) (11 samples, 0.63%)</title><rect x="74.4413%" y="196" width="0.6304%" height="15" fill="rgb(222,201,40)" fg:x="1299" fg:w="11"/><text x="74.6913%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.11%)</title><rect x="76.6762%" y="212" width="0.1146%" height="15" fill="rgb(235,61,29)" fg:x="1338" fg:w="2"/><text x="76.9262%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:137) (32 samples, 1.83%)</title><rect x="75.0716%" y="196" width="1.8338%" height="15" fill="rgb(219,207,3)" fg:x="1310" fg:w="32"/><text x="75.3216%" y="206.50">a..</text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.11%)</title><rect x="76.7908%" y="212" width="0.1146%" height="15" fill="rgb(222,56,46)" fg:x="1340" fg:w="2"/><text x="77.0408%" y="222.50"></text></g><g><title>__init__ (kappybara/pattern.py:221) (212 samples, 12.15%)</title><rect x="65.5014%" y="164" width="12.1490%" height="15" fill="rgb(239,76,54)" fg:x="1143" fg:w="212"/><text x="65.7514%" y="174.50">__init__ (kappybar..</text></g><g><title>create_index (kappybara/indexed_set.py:218) (149 samples, 8.54%)</title><rect x="69.1117%" y="180" width="8.5387%" height="15" fill="rgb(231,124,27)" fg:x="1206" fg:w="149"/><text x="69.3617%" y="190.50">create_index..</text></g><g><title>add (kappybara/indexed_set.py:140) (13 samples, 0.74%)</title><rect x="76.9054%" y="196" width="0.7450%" height="15" fill="rgb(249,195,6)" fg:x="1342" fg:w="13"/><text x="77.1554%" y="206.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:130) (4 samples, 0.23%)</title><rect x="77.7077%" y="164" width="0.2292%" height="15" fill="rgb(237,174,47)" fg:x="1356" fg:w="4"/><text x="77.9577%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (11 samples, 0.63%)</title><rect x="80.8596%" y="180" width="0.6304%" height="15" fill="rgb(206,201,31)" fg:x="1411" fg:w="11"/><text x="81.1096%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:131) (74 samples, 4.24%)</title><rect x="77.9370%" y="164" width="4.2407%" height="15" fill="rgb(231,57,52)" fg:x="1360" fg:w="74"/><text x="78.1870%" y="174.50">depth..</text></g><g><title>__hash__ (kappybara/utils.py:30) (12 samples, 0.69%)</title><rect x="81.4900%" y="180" width="0.6877%" height="15" fill="rgb(248,177,22)" fg:x="1422" fg:w="12"/><text x="81.7400%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:132) (19 samples, 1.09%)</title><rect x="82.1777%" y="164" width="1.0888%" height="15" fill="rgb(215,211,37)" fg:x="1434" fg:w="19"/><text x="82.4277%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.17%)</title><rect x="83.0946%" y="180" width="0.1719%" height="15" fill="rgb(241,128,51)" fg:x="1450" fg:w="3"/><text x="83.3446%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:133) (3 samples, 0.17%)</title><rect x="83.2665%" y="164" width="0.1719%" height="15" fill="rgb(227,165,31)" fg:x="1453" fg:w="3"/><text x="83.5165%" y="174.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (9 samples, 0.52%)</title><rect x="89.0544%" y="196" width="0.5158%" height="15" fill="rgb(228,167,24)" fg:x="1554" fg:w="9"/><text x="89.3044%" y="206.50"></text></g><g><title>sites (kappybara/pattern.py:111) (10 samples, 0.57%)</title><rect x="90.8309%" y="212" width="0.5731%" height="15" fill="rgb(228,143,12)" fg:x="1585" fg:w="10"/><text x="91.0809%" y="222.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (86 samples, 4.93%)</title><rect x="89.5702%" y="196" width="4.9284%" height="15" fill="rgb(249,149,8)" fg:x="1563" fg:w="86"/><text x="89.8202%" y="206.50">__iter..</text></g><g><title>sites (kappybara/pattern.py:113) (54 samples, 3.09%)</title><rect x="91.4040%" y="212" width="3.0946%" height="15" fill="rgb(243,35,44)" fg:x="1595" fg:w="54"/><text x="91.6540%" y="222.50">sit..</text></g><g><title>coupled (kappybara/pattern.py:64) (4 samples, 0.23%)</title><rect x="94.4986%" y="196" width="0.2292%" height="15" fill="rgb(246,89,9)" fg:x="1649" fg:w="4"/><text x="94.7486%" y="206.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:260) (589 samples, 33.75%)</title><rect x="62.9799%" y="148" width="33.7536%" height="15" fill="rgb(233,213,13)" fg:x="1099" fg:w="589"/><text x="63.2299%" y="158.50">_remove_edge (kappybara/mixture.py:260)</text></g><g><title>depth_first_traversal (kappybara/pattern.py:134) (232 samples, 13.30%)</title><rect x="83.4384%" y="164" width="13.2951%" height="15" fill="rgb(233,141,41)" fg:x="1456" fg:w="232"/><text x="83.6884%" y="174.50">depth_first_traversa..</text></g><g><title>neighbors (kappybara/pattern.py:122) (208 samples, 11.92%)</title><rect x="84.8138%" y="180" width="11.9198%" height="15" fill="rgb(239,167,4)" fg:x="1480" fg:w="208"/><text x="85.0638%" y="190.50">neighbors (kappyba..</text></g><g><title>coupled (kappybara/pattern.py:66) (35 samples, 2.01%)</title><rect x="94.7278%" y="196" width="2.0057%" height="15" fill="rgb(209,217,16)" fg:x="1653" fg:w="35"/><text x="94.9778%" y="206.50">c..</text></g><g><title>__eq__ (kappybara/utils.py:32) (2 samples, 0.11%)</title><rect x="97.3639%" y="164" width="0.1146%" height="15" fill="rgb(219,88,35)" fg:x="1699" fg:w="2"/><text x="97.6139%" y="174.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (13 samples, 0.74%)</title><rect x="97.4785%" y="164" width="0.7450%" height="15" fill="rgb(220,193,23)" fg:x="1701" fg:w="13"/><text x="97.7285%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.11%)</title><rect x="98.1089%" y="180" width="0.1146%" height="15" fill="rgb(230,90,52)" fg:x="1712" fg:w="2"/><text x="98.3589%" y="190.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:262) (29 samples, 1.66%)</title><rect x="96.7335%" y="148" width="1.6619%" height="15" fill="rgb(252,106,19)" fg:x="1688" fg:w="29"/><text x="96.9835%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:225) (3 samples, 0.17%)</title><rect x="98.2235%" y="164" width="0.1719%" height="15" fill="rgb(206,74,20)" fg:x="1714" fg:w="3"/><text x="98.4735%" y="174.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:274) (9 samples, 0.52%)</title><rect x="98.4527%" y="148" width="0.5158%" height="15" fill="rgb(230,138,44)" fg:x="1718" fg:w="9"/><text x="98.7027%" y="158.50"></text></g><g><title>remove (kappybara/indexed_set.py:164) (5 samples, 0.29%)</title><rect x="98.6819%" y="164" width="0.2865%" height="15" fill="rgb(235,182,43)" fg:x="1722" fg:w="5"/><text x="98.9319%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:143) (2 samples, 0.11%)</title><rect x="99.0831%" y="164" width="0.1146%" height="15" fill="rgb(242,16,51)" fg:x="1729" fg:w="2"/><text x="99.3331%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:130) (3 samples, 0.17%)</title><rect x="99.2550%" y="180" width="0.1719%" height="15" fill="rgb(248,9,4)" fg:x="1732" fg:w="3"/><text x="99.5050%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (3 samples, 0.17%)</title><rect x="99.2550%" y="196" width="0.1719%" height="15" fill="rgb(210,31,22)" fg:x="1732" fg:w="3"/><text x="99.5050%" y="206.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:23) (1,731 samples, 99.20%)</title><rect x="0.2865%" y="68" width="99.1977%" height="15" fill="rgb(239,54,39)" fg:x="5" fg:w="1731"/><text x="0.5365%" y="78.50">&lt;module&gt; (profile_uni_bi_small.py:23)</text></g><g><title>update (kappybara/system.py:71) (1,677 samples, 96.10%)</title><rect x="3.3811%" y="84" width="96.1032%" height="15" fill="rgb(230,99,41)" fg:x="59" fg:w="1677"/><text x="3.6311%" y="94.50">update (kappybara/system.py:71)</text></g><g><title>act (kappybara/system.py:66) (1,623 samples, 93.01%)</title><rect x="6.4756%" y="100" width="93.0086%" height="15" fill="rgb(253,106,12)" fg:x="113" fg:w="1623"/><text x="6.7256%" y="110.50">act (kappybara/system.py:66)</text></g><g><title>apply_update (kappybara/mixture.py:188) (1,622 samples, 92.95%)</title><rect x="6.5330%" y="116" width="92.9513%" height="15" fill="rgb(213,46,41)" fg:x="114" fg:w="1622"/><text x="6.7830%" y="126.50">apply_update (kappybara/mixture.py:188)</text></g><g><title>apply_update (kappybara/mixture.py:94) (644 samples, 36.91%)</title><rect x="62.5788%" y="132" width="36.9054%" height="15" fill="rgb(215,133,35)" fg:x="1092" fg:w="644"/><text x="62.8288%" y="142.50">apply_update (kappybara/mixture.py:94)</text></g><g><title>_remove_edge (kappybara/mixture.py:294) (9 samples, 0.52%)</title><rect x="98.9685%" y="148" width="0.5158%" height="15" fill="rgb(213,28,5)" fg:x="1727" fg:w="9"/><text x="99.2185%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:146) (4 samples, 0.23%)</title><rect x="99.2550%" y="164" width="0.2292%" height="15" fill="rgb(215,77,49)" fg:x="1732" fg:w="4"/><text x="99.5050%" y="174.50"></text></g><g><title>&lt;module&gt; (kappybara/grammar.py:35) (2 samples, 0.11%)</title><rect x="99.5415%" y="260" width="0.1146%" height="15" fill="rgb(248,100,22)" fg:x="1737" fg:w="2"/><text x="99.7915%" y="270.50"></text></g><g><title>__init__ (kappybara/grammar.py:15) (2 samples, 0.11%)</title><rect x="99.5415%" y="276" width="0.1146%" height="15" fill="rgb(208,67,9)" fg:x="1737" fg:w="2"/><text x="99.7915%" y="286.50"></text></g><g><title>open (lark/lark.py:577) (2 samples, 0.11%)</title><rect x="99.5415%" y="292" width="0.1146%" height="15" fill="rgb(219,133,21)" fg:x="1737" fg:w="2"/><text x="99.7915%" y="302.50"></text></g><g><title>&lt;module&gt; (lark/lark.py:20) (2 samples, 0.11%)</title><rect x="99.7135%" y="452" width="0.1146%" height="15" fill="rgb(246,46,29)" fg:x="1740" fg:w="2"/><text x="99.9635%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.11%)</title><rect x="99.7135%" y="468" width="0.1146%" height="15" fill="rgb(246,185,52)" fg:x="1740" fg:w="2"/><text x="99.9635%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 0.11%)</title><rect x="99.7135%" y="484" width="0.1146%" height="15" fill="rgb(252,136,11)" fg:x="1740" fg:w="2"/><text x="99.9635%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 0.11%)</title><rect x="99.7135%" y="500" width="0.1146%" height="15" fill="rgb(219,138,53)" fg:x="1740" fg:w="2"/><text x="99.9635%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.11%)</title><rect x="99.7135%" y="516" width="0.1146%" height="15" fill="rgb(211,51,23)" fg:x="1740" fg:w="2"/><text x="99.9635%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.11%)</title><rect x="99.7135%" y="532" width="0.1146%" height="15" fill="rgb(247,221,28)" fg:x="1740" fg:w="2"/><text x="99.9635%" y="542.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:3) (7 samples, 0.40%)</title><rect x="99.4842%" y="68" width="0.4011%" height="15" fill="rgb(251,222,45)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.40%)</title><rect x="99.4842%" y="84" width="0.4011%" height="15" fill="rgb(217,162,53)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.40%)</title><rect x="99.4842%" y="100" width="0.4011%" height="15" fill="rgb(229,93,14)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.40%)</title><rect x="99.4842%" y="116" width="0.4011%" height="15" fill="rgb(209,67,49)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (7 samples, 0.40%)</title><rect x="99.4842%" y="132" width="0.4011%" height="15" fill="rgb(213,87,29)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.40%)</title><rect x="99.4842%" y="148" width="0.4011%" height="15" fill="rgb(205,151,52)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="158.50"></text></g><g><title>&lt;module&gt; (kappybara/kappa.py:6) (7 samples, 0.40%)</title><rect x="99.4842%" y="164" width="0.4011%" height="15" fill="rgb(253,215,39)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (7 samples, 0.40%)</title><rect x="99.4842%" y="180" width="0.4011%" height="15" fill="rgb(221,220,41)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (7 samples, 0.40%)</title><rect x="99.4842%" y="196" width="0.4011%" height="15" fill="rgb(218,133,21)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (7 samples, 0.40%)</title><rect x="99.4842%" y="212" width="0.4011%" height="15" fill="rgb(221,193,43)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (7 samples, 0.40%)</title><rect x="99.4842%" y="228" width="0.4011%" height="15" fill="rgb(240,128,52)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (7 samples, 0.40%)</title><rect x="99.4842%" y="244" width="0.4011%" height="15" fill="rgb(253,114,12)" fg:x="1736" fg:w="7"/><text x="99.7342%" y="254.50"></text></g><g><title>&lt;module&gt; (kappybara/grammar.py:4) (4 samples, 0.23%)</title><rect x="99.6562%" y="260" width="0.2292%" height="15" fill="rgb(215,223,47)" fg:x="1739" fg:w="4"/><text x="99.9062%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.23%)</title><rect x="99.6562%" y="276" width="0.2292%" height="15" fill="rgb(248,225,23)" fg:x="1739" fg:w="4"/><text x="99.9062%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.23%)</title><rect x="99.6562%" y="292" width="0.2292%" height="15" fill="rgb(250,108,0)" fg:x="1739" fg:w="4"/><text x="99.9062%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.23%)</title><rect x="99.6562%" y="308" width="0.2292%" height="15" fill="rgb(228,208,7)" fg:x="1739" fg:w="4"/><text x="99.9062%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (4 samples, 0.23%)</title><rect x="99.6562%" y="324" width="0.2292%" height="15" fill="rgb(244,45,10)" fg:x="1739" fg:w="4"/><text x="99.9062%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.23%)</title><rect x="99.6562%" y="340" width="0.2292%" height="15" fill="rgb(207,125,25)" fg:x="1739" fg:w="4"/><text x="99.9062%" y="350.50"></text></g><g><title>&lt;module&gt; (lark/__init__.py:11) (3 samples, 0.17%)</title><rect x="99.7135%" y="356" width="0.1719%" height="15" fill="rgb(210,195,18)" fg:x="1740" fg:w="3"/><text x="99.9635%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (3 samples, 0.17%)</title><rect x="99.7135%" y="372" width="0.1719%" height="15" fill="rgb(249,80,12)" fg:x="1740" fg:w="3"/><text x="99.9635%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (3 samples, 0.17%)</title><rect x="99.7135%" y="388" width="0.1719%" height="15" fill="rgb(221,65,9)" fg:x="1740" fg:w="3"/><text x="99.9635%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (3 samples, 0.17%)</title><rect x="99.7135%" y="404" width="0.1719%" height="15" fill="rgb(235,49,36)" fg:x="1740" fg:w="3"/><text x="99.9635%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (3 samples, 0.17%)</title><rect x="99.7135%" y="420" width="0.1719%" height="15" fill="rgb(225,32,20)" fg:x="1740" fg:w="3"/><text x="99.9635%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (3 samples, 0.17%)</title><rect x="99.7135%" y="436" width="0.1719%" height="15" fill="rgb(215,141,46)" fg:x="1740" fg:w="3"/><text x="99.9635%" y="446.50"></text></g><g><title>all (1,745 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(250,160,47)" fg:x="0" fg:w="1745"/><text x="0.2500%" y="62.50"></text></g><g><title>sites (kappybara/pattern.py:111) (2 samples, 0.11%)</title><rect x="99.8854%" y="68" width="0.1146%" height="15" fill="rgb(216,222,40)" fg:x="1743" fg:w="2"/><text x="100.1354%" y="78.50"></text></g></svg></svg>