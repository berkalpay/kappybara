<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="570" onload="init(evt)" viewBox="0 0 1200 570" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="570" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o results/profile_uni_bi_small_flamegraph.svg -- python profile_uni_bi_small.py # commit c444eda</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="559.00"> </text><svg id="frames" x="10" width="1180" total_samples="1747"><g><title>n_embeddings (kappybara/rule.py:188) (3 samples, 0.17%)</title><rect x="0.5152%" y="180" width="0.1717%" height="15" fill="rgb(227,0,7)" fg:x="9" fg:w="3"/><text x="0.7652%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:189) (11 samples, 0.63%)</title><rect x="0.6869%" y="180" width="0.6297%" height="15" fill="rgb(217,0,24)" fg:x="12" fg:w="11"/><text x="0.9369%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (kappybara/rule.py:190) (8 samples, 0.46%)</title><rect x="0.8586%" y="196" width="0.4579%" height="15" fill="rgb(221,193,54)" fg:x="15" fg:w="8"/><text x="1.1086%" y="206.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (7 samples, 0.40%)</title><rect x="0.9159%" y="212" width="0.4007%" height="15" fill="rgb(248,212,6)" fg:x="16" fg:w="7"/><text x="1.1659%" y="222.50"></text></g><g><title>lookup (kappybara/indexed_set.py:144) (2 samples, 0.11%)</title><rect x="1.2021%" y="228" width="0.1145%" height="15" fill="rgb(208,68,35)" fg:x="21" fg:w="2"/><text x="1.4521%" y="238.50"></text></g><g><title>n_embeddings (kappybara/rule.py:193) (3 samples, 0.17%)</title><rect x="1.3165%" y="180" width="0.1717%" height="15" fill="rgb(232,128,0)" fg:x="23" fg:w="3"/><text x="1.5665%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:238) (5 samples, 0.29%)</title><rect x="1.4883%" y="180" width="0.2862%" height="15" fill="rgb(207,160,47)" fg:x="26" fg:w="5"/><text x="1.7383%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:240) (2 samples, 0.11%)</title><rect x="1.7745%" y="180" width="0.1145%" height="15" fill="rgb(228,23,34)" fg:x="31" fg:w="2"/><text x="2.0245%" y="190.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (2 samples, 0.11%)</title><rect x="1.7745%" y="196" width="0.1145%" height="15" fill="rgb(218,30,26)" fg:x="31" fg:w="2"/><text x="2.0245%" y="206.50"></text></g><g><title>n_embeddings (kappybara/rule.py:243) (2 samples, 0.11%)</title><rect x="1.8890%" y="180" width="0.1145%" height="15" fill="rgb(220,122,19)" fg:x="33" fg:w="2"/><text x="2.1390%" y="190.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:177) (2 samples, 0.11%)</title><rect x="1.8890%" y="196" width="0.1145%" height="15" fill="rgb(250,228,42)" fg:x="33" fg:w="2"/><text x="2.1390%" y="206.50"></text></g><g><title>lookup (kappybara/indexed_set.py:142) (2 samples, 0.11%)</title><rect x="1.8890%" y="212" width="0.1145%" height="15" fill="rgb(240,193,28)" fg:x="33" fg:w="2"/><text x="2.1390%" y="222.50"></text></g><g><title>update (kappybara/system.py:78) (34 samples, 1.95%)</title><rect x="0.2290%" y="84" width="1.9462%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="34"/><text x="0.4790%" y="94.50">u..</text></g><g><title>wait (kappybara/system.py:60) (34 samples, 1.95%)</title><rect x="0.2290%" y="100" width="1.9462%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="34"/><text x="0.4790%" y="110.50">w..</text></g><g><title>reactivity (kappybara/system.py:56) (34 samples, 1.95%)</title><rect x="0.2290%" y="116" width="1.9462%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="34"/><text x="0.4790%" y="126.50">r..</text></g><g><title>__get__ (functools.py:998) (34 samples, 1.95%)</title><rect x="0.2290%" y="132" width="1.9462%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="34"/><text x="0.4790%" y="142.50">_..</text></g><g><title>rule_reactivities (kappybara/system.py:52) (33 samples, 1.89%)</title><rect x="0.2862%" y="148" width="1.8890%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="33"/><text x="0.5362%" y="158.50">r..</text></g><g><title>reactivity (kappybara/rule.py:32) (33 samples, 1.89%)</title><rect x="0.2862%" y="164" width="1.8890%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="33"/><text x="0.5362%" y="174.50">r..</text></g><g><title>n_embeddings (kappybara/rule.py:76) (3 samples, 0.17%)</title><rect x="2.0034%" y="180" width="0.1717%" height="15" fill="rgb(221,200,47)" fg:x="35" fg:w="3"/><text x="2.2534%" y="190.50"></text></g><g><title>act (kappybara/system.py:68) (4 samples, 0.23%)</title><rect x="2.1752%" y="100" width="0.2290%" height="15" fill="rgb(226,26,5)" fg:x="38" fg:w="4"/><text x="2.4252%" y="110.50"></text></g><g><title>_produce_update (kappybara/rule.py:127) (2 samples, 0.11%)</title><rect x="2.5186%" y="132" width="0.1145%" height="15" fill="rgb(249,33,26)" fg:x="44" fg:w="2"/><text x="2.7686%" y="142.50"></text></g><g><title>_produce_update (kappybara/rule.py:137) (2 samples, 0.11%)</title><rect x="2.6903%" y="132" width="0.1145%" height="15" fill="rgb(235,183,28)" fg:x="47" fg:w="2"/><text x="2.9403%" y="142.50"></text></g><g><title>select (kappybara/rule.py:104) (11 samples, 0.63%)</title><rect x="2.4614%" y="116" width="0.6297%" height="15" fill="rgb(221,5,38)" fg:x="43" fg:w="11"/><text x="2.7114%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:165) (3 samples, 0.17%)</title><rect x="2.9193%" y="132" width="0.1717%" height="15" fill="rgb(247,18,42)" fg:x="51" fg:w="3"/><text x="3.1693%" y="142.50"></text></g><g><title>disconnect_site (kappybara/mixture.py:335) (2 samples, 0.11%)</title><rect x="2.9765%" y="148" width="0.1145%" height="15" fill="rgb(241,131,45)" fg:x="52" fg:w="2"/><text x="3.2265%" y="158.50"></text></g><g><title>select (kappybara/rule.py:204) (2 samples, 0.11%)</title><rect x="3.0910%" y="116" width="0.1145%" height="15" fill="rgb(249,31,29)" fg:x="54" fg:w="2"/><text x="3.3410%" y="126.50"></text></g><g><title>select (kappybara/rule.py:207) (2 samples, 0.11%)</title><rect x="3.2055%" y="116" width="0.1145%" height="15" fill="rgb(225,111,53)" fg:x="56" fg:w="2"/><text x="3.4555%" y="126.50"></text></g><g><title>select (kappybara/rule.py:212) (2 samples, 0.11%)</title><rect x="3.3200%" y="116" width="0.1145%" height="15" fill="rgb(238,160,17)" fg:x="58" fg:w="2"/><text x="3.5700%" y="126.50"></text></g><g><title>select (kappybara/rule.py:215) (3 samples, 0.17%)</title><rect x="3.4345%" y="116" width="0.1717%" height="15" fill="rgb(214,148,48)" fg:x="60" fg:w="3"/><text x="3.6845%" y="126.50"></text></g><g><title>select (kappybara/rule.py:222) (11 samples, 0.63%)</title><rect x="3.6634%" y="116" width="0.6297%" height="15" fill="rgb(232,36,49)" fg:x="64" fg:w="11"/><text x="3.9134%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:163) (4 samples, 0.23%)</title><rect x="4.0641%" y="132" width="0.2290%" height="15" fill="rgb(209,103,24)" fg:x="71" fg:w="4"/><text x="4.3141%" y="142.50"></text></g><g><title>connect_sites (kappybara/mixture.py:330) (3 samples, 0.17%)</title><rect x="4.1214%" y="148" width="0.1717%" height="15" fill="rgb(229,88,8)" fg:x="72" fg:w="3"/><text x="4.3714%" y="158.50"></text></g><g><title>act (kappybara/system.py:72) (40 samples, 2.29%)</title><rect x="2.4041%" y="100" width="2.2896%" height="15" fill="rgb(213,181,19)" fg:x="42" fg:w="40"/><text x="2.6541%" y="110.50">a..</text></g><g><title>select (kappybara/rule.py:99) (3 samples, 0.17%)</title><rect x="4.5220%" y="116" width="0.1717%" height="15" fill="rgb(254,191,54)" fg:x="79" fg:w="3"/><text x="4.7720%" y="126.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (3 samples, 0.17%)</title><rect x="4.5220%" y="132" width="0.1717%" height="15" fill="rgb(241,83,37)" fg:x="79" fg:w="3"/><text x="4.7720%" y="142.50"></text></g><g><title>apply_update (kappybara/mixture.py:100) (4 samples, 0.23%)</title><rect x="4.7510%" y="132" width="0.2290%" height="15" fill="rgb(233,36,39)" fg:x="83" fg:w="4"/><text x="5.0010%" y="142.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (5 samples, 0.29%)</title><rect x="5.2089%" y="180" width="0.2862%" height="15" fill="rgb(226,3,54)" fg:x="91" fg:w="5"/><text x="5.4589%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:113) (3 samples, 0.17%)</title><rect x="5.3234%" y="196" width="0.1717%" height="15" fill="rgb(245,192,40)" fg:x="93" fg:w="3"/><text x="5.5734%" y="206.50"></text></g><g><title>neighborhood (kappybara/mixture.py:398) (8 samples, 0.46%)</title><rect x="5.0944%" y="148" width="0.4579%" height="15" fill="rgb(238,167,29)" fg:x="89" fg:w="8"/><text x="5.3444%" y="158.50"></text></g><g><title>neighbors (kappybara/pattern.py:122) (7 samples, 0.40%)</title><rect x="5.1517%" y="164" width="0.4007%" height="15" fill="rgb(232,182,51)" fg:x="90" fg:w="7"/><text x="5.4017%" y="174.50"></text></g><g><title>neighborhood (kappybara/mixture.py:399) (2 samples, 0.11%)</title><rect x="5.5524%" y="148" width="0.1145%" height="15" fill="rgb(231,60,39)" fg:x="97" fg:w="2"/><text x="5.8024%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:111) (14 samples, 0.80%)</title><rect x="4.9800%" y="132" width="0.8014%" height="15" fill="rgb(208,69,12)" fg:x="87" fg:w="14"/><text x="5.2300%" y="142.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:96) (2 samples, 0.11%)</title><rect x="5.8958%" y="148" width="0.1145%" height="15" fill="rgb(235,93,37)" fg:x="103" fg:w="2"/><text x="6.1458%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:113) (5 samples, 0.29%)</title><rect x="5.7813%" y="132" width="0.2862%" height="15" fill="rgb(213,116,39)" fg:x="101" fg:w="5"/><text x="6.0313%" y="142.50"></text></g><g><title>create_index (kappybara/indexed_set.py:177) (8 samples, 0.46%)</title><rect x="6.2393%" y="148" width="0.4579%" height="15" fill="rgb(222,207,29)" fg:x="109" fg:w="8"/><text x="6.4893%" y="158.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:50) (5 samples, 0.29%)</title><rect x="6.4110%" y="164" width="0.2862%" height="15" fill="rgb(206,96,30)" fg:x="112" fg:w="5"/><text x="6.6610%" y="174.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:114) (2 samples, 0.11%)</title><rect x="6.5827%" y="180" width="0.1145%" height="15" fill="rgb(218,138,4)" fg:x="115" fg:w="2"/><text x="6.8327%" y="190.50"></text></g><g><title>create_index (kappybara/indexed_set.py:178) (2 samples, 0.11%)</title><rect x="6.6972%" y="148" width="0.1145%" height="15" fill="rgb(250,191,14)" fg:x="117" fg:w="2"/><text x="6.9472%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:104) (2 samples, 0.11%)</title><rect x="7.1551%" y="164" width="0.1145%" height="15" fill="rgb(239,60,40)" fg:x="125" fg:w="2"/><text x="7.4051%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:106) (2 samples, 0.11%)</title><rect x="7.2696%" y="164" width="0.1145%" height="15" fill="rgb(206,27,48)" fg:x="127" fg:w="2"/><text x="7.5196%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:114) (26 samples, 1.49%)</title><rect x="6.0675%" y="132" width="1.4883%" height="15" fill="rgb(225,35,8)" fg:x="106" fg:w="26"/><text x="6.3175%" y="142.50"></text></g><g><title>create_index (kappybara/indexed_set.py:180) (13 samples, 0.74%)</title><rect x="6.8117%" y="148" width="0.7441%" height="15" fill="rgb(250,213,24)" fg:x="119" fg:w="13"/><text x="7.0617%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:110) (2 samples, 0.11%)</title><rect x="7.4413%" y="164" width="0.1145%" height="15" fill="rgb(247,123,22)" fg:x="130" fg:w="2"/><text x="7.6913%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:116) (4 samples, 0.23%)</title><rect x="7.5558%" y="132" width="0.2290%" height="15" fill="rgb(231,138,38)" fg:x="132" fg:w="4"/><text x="7.8058%" y="142.50"></text></g><g><title>embeddings (kappybara/pattern.py:264) (4 samples, 0.23%)</title><rect x="7.9565%" y="148" width="0.2290%" height="15" fill="rgb(231,145,46)" fg:x="139" fg:w="4"/><text x="8.2065%" y="158.50"></text></g><g><title>lookup (kappybara/indexed_set.py:141) (2 samples, 0.11%)</title><rect x="9.2158%" y="164" width="0.1145%" height="15" fill="rgb(251,118,11)" fg:x="161" fg:w="2"/><text x="9.4658%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:268) (23 samples, 1.32%)</title><rect x="8.2427%" y="148" width="1.3165%" height="15" fill="rgb(217,147,25)" fg:x="144" fg:w="23"/><text x="8.4927%" y="158.50"></text></g><g><title>lookup (kappybara/indexed_set.py:142) (4 samples, 0.23%)</title><rect x="9.3303%" y="164" width="0.2290%" height="15" fill="rgb(247,81,37)" fg:x="163" fg:w="4"/><text x="9.5803%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:270) (49 samples, 2.80%)</title><rect x="9.5592%" y="148" width="2.8048%" height="15" fill="rgb(209,12,38)" fg:x="167" fg:w="49"/><text x="9.8092%" y="158.50">em..</text></g><g><title>embeddings (kappybara/pattern.py:271) (14 samples, 0.80%)</title><rect x="12.3641%" y="148" width="0.8014%" height="15" fill="rgb(227,1,9)" fg:x="216" fg:w="14"/><text x="12.6141%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:274) (8 samples, 0.46%)</title><rect x="13.1654%" y="148" width="0.4579%" height="15" fill="rgb(248,47,43)" fg:x="230" fg:w="8"/><text x="13.4154%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:275) (4 samples, 0.23%)</title><rect x="13.6234%" y="148" width="0.2290%" height="15" fill="rgb(221,10,30)" fg:x="238" fg:w="4"/><text x="13.8734%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:276) (14 samples, 0.80%)</title><rect x="13.8523%" y="148" width="0.8014%" height="15" fill="rgb(210,229,1)" fg:x="242" fg:w="14"/><text x="14.1023%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:278) (15 samples, 0.86%)</title><rect x="14.6537%" y="148" width="0.8586%" height="15" fill="rgb(222,148,37)" fg:x="256" fg:w="15"/><text x="14.9037%" y="158.50"></text></g><g><title>embeds_in (kappybara/pattern.py:173) (9 samples, 0.52%)</title><rect x="15.6840%" y="164" width="0.5152%" height="15" fill="rgb(234,67,33)" fg:x="274" fg:w="9"/><text x="15.9340%" y="174.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (5 samples, 0.29%)</title><rect x="16.4282%" y="180" width="0.2862%" height="15" fill="rgb(247,98,35)" fg:x="287" fg:w="5"/><text x="16.6782%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:111) (4 samples, 0.23%)</title><rect x="16.9433%" y="196" width="0.2290%" height="15" fill="rgb(247,138,52)" fg:x="296" fg:w="4"/><text x="17.1933%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:176) (34 samples, 1.95%)</title><rect x="16.1992%" y="164" width="1.9462%" height="15" fill="rgb(213,79,30)" fg:x="283" fg:w="34"/><text x="16.4492%" y="174.50">e..</text></g><g><title>__iter__ (kappybara/pattern.py:99) (25 samples, 1.43%)</title><rect x="16.7144%" y="180" width="1.4310%" height="15" fill="rgb(246,177,23)" fg:x="292" fg:w="25"/><text x="16.9644%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:113) (17 samples, 0.97%)</title><rect x="17.1723%" y="196" width="0.9731%" height="15" fill="rgb(230,62,27)" fg:x="300" fg:w="17"/><text x="17.4223%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:177) (14 samples, 0.80%)</title><rect x="18.1454%" y="164" width="0.8014%" height="15" fill="rgb(216,154,8)" fg:x="317" fg:w="14"/><text x="18.3954%" y="174.50"></text></g><g><title>embeds_in (kappybara/pattern.py:179) (12 samples, 0.69%)</title><rect x="19.0040%" y="164" width="0.6869%" height="15" fill="rgb(244,35,45)" fg:x="332" fg:w="12"/><text x="19.2540%" y="174.50"></text></g><g><title>__getitem__ (kappybara/pattern.py:102) (5 samples, 0.29%)</title><rect x="19.4047%" y="180" width="0.2862%" height="15" fill="rgb(251,115,12)" fg:x="339" fg:w="5"/><text x="19.6547%" y="190.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (14 samples, 0.80%)</title><rect x="22.0378%" y="180" width="0.8014%" height="15" fill="rgb(240,54,50)" fg:x="385" fg:w="14"/><text x="22.2878%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:70) (5 samples, 0.29%)</title><rect x="22.8392%" y="180" width="0.2862%" height="15" fill="rgb(233,84,52)" fg:x="399" fg:w="5"/><text x="23.0892%" y="190.50"></text></g><g><title>stated (kappybara/pattern.py:54) (2 samples, 0.11%)</title><rect x="23.0109%" y="196" width="0.1145%" height="15" fill="rgb(207,117,47)" fg:x="402" fg:w="2"/><text x="23.2609%" y="206.50"></text></g><g><title>bound (kappybara/pattern.py:59) (16 samples, 0.92%)</title><rect x="23.5260%" y="196" width="0.9159%" height="15" fill="rgb(249,43,39)" fg:x="411" fg:w="16"/><text x="23.7760%" y="206.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (6 samples, 0.34%)</title><rect x="24.0985%" y="212" width="0.3434%" height="15" fill="rgb(209,38,44)" fg:x="421" fg:w="6"/><text x="24.3485%" y="222.50"></text></g><g><title>bound (kappybara/pattern.py:60) (9 samples, 0.52%)</title><rect x="24.4419%" y="196" width="0.5152%" height="15" fill="rgb(236,212,23)" fg:x="427" fg:w="9"/><text x="24.6919%" y="206.50"></text></g><g><title>bound (kappybara/pattern.py:61) (2 samples, 0.11%)</title><rect x="24.9571%" y="196" width="0.1145%" height="15" fill="rgb(242,79,21)" fg:x="436" fg:w="2"/><text x="25.2071%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:71) (36 samples, 2.06%)</title><rect x="23.1254%" y="180" width="2.0607%" height="15" fill="rgb(211,96,35)" fg:x="404" fg:w="36"/><text x="23.3754%" y="190.50">e..</text></g><g><title>coupled (kappybara/pattern.py:66) (2 samples, 0.11%)</title><rect x="25.0716%" y="196" width="0.1145%" height="15" fill="rgb(253,215,40)" fg:x="438" fg:w="2"/><text x="25.3216%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:75) (2 samples, 0.11%)</title><rect x="25.1860%" y="180" width="0.1145%" height="15" fill="rgb(211,81,21)" fg:x="440" fg:w="2"/><text x="25.4360%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:76) (7 samples, 0.40%)</title><rect x="25.3005%" y="180" width="0.4007%" height="15" fill="rgb(208,190,38)" fg:x="442" fg:w="7"/><text x="25.5505%" y="190.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (4 samples, 0.23%)</title><rect x="25.4722%" y="196" width="0.2290%" height="15" fill="rgb(235,213,38)" fg:x="445" fg:w="4"/><text x="25.7222%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:77) (18 samples, 1.03%)</title><rect x="25.7012%" y="180" width="1.0303%" height="15" fill="rgb(237,122,38)" fg:x="449" fg:w="18"/><text x="25.9512%" y="190.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (12 samples, 0.69%)</title><rect x="26.0446%" y="196" width="0.6869%" height="15" fill="rgb(244,218,35)" fg:x="455" fg:w="12"/><text x="26.2946%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.11%)</title><rect x="26.6171%" y="212" width="0.1145%" height="15" fill="rgb(240,68,47)" fg:x="465" fg:w="2"/><text x="26.8671%" y="222.50"></text></g><g><title>embeds_in (kappybara/pattern.py:78) (3 samples, 0.17%)</title><rect x="26.7315%" y="180" width="0.1717%" height="15" fill="rgb(210,16,53)" fg:x="467" fg:w="3"/><text x="26.9815%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:83) (10 samples, 0.57%)</title><rect x="26.9033%" y="180" width="0.5724%" height="15" fill="rgb(235,124,12)" fg:x="470" fg:w="10"/><text x="27.1533%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:85) (4 samples, 0.23%)</title><rect x="27.4757%" y="180" width="0.2290%" height="15" fill="rgb(224,169,11)" fg:x="480" fg:w="4"/><text x="27.7257%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:180) (152 samples, 8.70%)</title><rect x="19.6909%" y="164" width="8.7006%" height="15" fill="rgb(250,166,2)" fg:x="344" fg:w="152"/><text x="19.9409%" y="174.50">embeds_in (k..</text></g><g><title>sites (kappybara/pattern.py:113) (11 samples, 0.63%)</title><rect x="27.7619%" y="180" width="0.6297%" height="15" fill="rgb(242,216,29)" fg:x="485" fg:w="11"/><text x="28.0119%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:279) (226 samples, 12.94%)</title><rect x="15.5123%" y="148" width="12.9365%" height="15" fill="rgb(230,116,27)" fg:x="271" fg:w="226"/><text x="15.7623%" y="158.50">embeddings (kappyba..</text></g><g><title>sites (kappybara/pattern.py:111) (2 samples, 0.11%)</title><rect x="29.0212%" y="180" width="0.1145%" height="15" fill="rgb(228,99,48)" fg:x="507" fg:w="2"/><text x="29.2712%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:283) (14 samples, 0.80%)</title><rect x="28.4488%" y="148" width="0.8014%" height="15" fill="rgb(253,11,6)" fg:x="497" fg:w="14"/><text x="28.6988%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (8 samples, 0.46%)</title><rect x="28.7922%" y="164" width="0.4579%" height="15" fill="rgb(247,143,39)" fg:x="503" fg:w="8"/><text x="29.0422%" y="174.50"></text></g><g><title>sites (kappybara/pattern.py:113) (2 samples, 0.11%)</title><rect x="29.1357%" y="180" width="0.1145%" height="15" fill="rgb(236,97,10)" fg:x="509" fg:w="2"/><text x="29.3857%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:284) (9 samples, 0.52%)</title><rect x="29.2501%" y="148" width="0.5152%" height="15" fill="rgb(233,208,19)" fg:x="511" fg:w="9"/><text x="29.5001%" y="158.50"></text></g><g><title>__getitem__ (kappybara/pattern.py:102) (5 samples, 0.29%)</title><rect x="29.4791%" y="164" width="0.2862%" height="15" fill="rgb(216,164,2)" fg:x="515" fg:w="5"/><text x="29.7291%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:290) (3 samples, 0.17%)</title><rect x="29.8226%" y="148" width="0.1717%" height="15" fill="rgb(220,129,5)" fg:x="521" fg:w="3"/><text x="30.0726%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (4 samples, 0.23%)</title><rect x="30.2805%" y="164" width="0.2290%" height="15" fill="rgb(242,17,10)" fg:x="529" fg:w="4"/><text x="30.5305%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:293) (12 samples, 0.69%)</title><rect x="29.9943%" y="148" width="0.6869%" height="15" fill="rgb(242,107,0)" fg:x="524" fg:w="12"/><text x="30.2443%" y="158.50"></text></g><g><title>sites (kappybara/pattern.py:113) (3 samples, 0.17%)</title><rect x="30.5094%" y="164" width="0.1717%" height="15" fill="rgb(251,28,31)" fg:x="533" fg:w="3"/><text x="30.7594%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:295) (2 samples, 0.11%)</title><rect x="30.6812%" y="148" width="0.1145%" height="15" fill="rgb(233,223,10)" fg:x="536" fg:w="2"/><text x="30.9312%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:297) (2 samples, 0.11%)</title><rect x="30.7956%" y="148" width="0.1145%" height="15" fill="rgb(215,21,27)" fg:x="538" fg:w="2"/><text x="31.0456%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:298) (8 samples, 0.46%)</title><rect x="30.9101%" y="148" width="0.4579%" height="15" fill="rgb(232,23,21)" fg:x="540" fg:w="8"/><text x="31.1601%" y="158.50"></text></g><g><title>__eq__ (kappybara/utils.py:33) (4 samples, 0.23%)</title><rect x="31.1391%" y="164" width="0.2290%" height="15" fill="rgb(244,5,23)" fg:x="544" fg:w="4"/><text x="31.3891%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:117) (413 samples, 23.64%)</title><rect x="7.7848%" y="132" width="23.6405%" height="15" fill="rgb(226,81,46)" fg:x="136" fg:w="413"/><text x="8.0348%" y="142.50">apply_update (kappybara/mixture.py:117)</text></g><g><title>add (kappybara/indexed_set.py:104) (15 samples, 0.86%)</title><rect x="31.8832%" y="148" width="0.8586%" height="15" fill="rgb(247,70,30)" fg:x="557" fg:w="15"/><text x="32.1332%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (12 samples, 0.69%)</title><rect x="32.0550%" y="164" width="0.6869%" height="15" fill="rgb(212,68,19)" fg:x="560" fg:w="12"/><text x="32.3050%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.17%)</title><rect x="32.5701%" y="180" width="0.1717%" height="15" fill="rgb(240,187,13)" fg:x="569" fg:w="3"/><text x="32.8201%" y="190.50"></text></g><g><title>add (kappybara/indexed_set.py:106) (10 samples, 0.57%)</title><rect x="32.7991%" y="148" width="0.5724%" height="15" fill="rgb(223,113,26)" fg:x="573" fg:w="10"/><text x="33.0491%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (4 samples, 0.23%)</title><rect x="33.1425%" y="164" width="0.2290%" height="15" fill="rgb(206,192,2)" fg:x="579" fg:w="4"/><text x="33.3925%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:110) (16 samples, 0.92%)</title><rect x="33.4287%" y="148" width="0.9159%" height="15" fill="rgb(241,108,4)" fg:x="584" fg:w="16"/><text x="33.6787%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (9 samples, 0.52%)</title><rect x="33.8294%" y="164" width="0.5152%" height="15" fill="rgb(247,173,49)" fg:x="591" fg:w="9"/><text x="34.0794%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:113) (5 samples, 0.29%)</title><rect x="34.3446%" y="148" width="0.2862%" height="15" fill="rgb(224,114,35)" fg:x="600" fg:w="5"/><text x="34.5946%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:114) (2 samples, 0.11%)</title><rect x="34.6308%" y="148" width="0.1145%" height="15" fill="rgb(245,159,27)" fg:x="605" fg:w="2"/><text x="34.8808%" y="158.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:30) (3 samples, 0.17%)</title><rect x="35.1460%" y="164" width="0.1717%" height="15" fill="rgb(245,172,44)" fg:x="614" fg:w="3"/><text x="35.3960%" y="174.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:81) (3 samples, 0.17%)</title><rect x="35.1460%" y="180" width="0.1717%" height="15" fill="rgb(236,23,11)" fg:x="614" fg:w="3"/><text x="35.3960%" y="190.50"></text></g><g><title>lookup (kappybara/indexed_set.py:142) (2 samples, 0.11%)</title><rect x="35.4894%" y="196" width="0.1145%" height="15" fill="rgb(205,117,38)" fg:x="620" fg:w="2"/><text x="35.7394%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:115) (18 samples, 1.03%)</title><rect x="34.7453%" y="148" width="1.0303%" height="15" fill="rgb(237,72,25)" fg:x="607" fg:w="18"/><text x="34.9953%" y="158.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:50) (8 samples, 0.46%)</title><rect x="35.3177%" y="164" width="0.4579%" height="15" fill="rgb(244,70,9)" fg:x="617" fg:w="8"/><text x="35.5677%" y="174.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:184) (7 samples, 0.40%)</title><rect x="35.3749%" y="180" width="0.4007%" height="15" fill="rgb(217,125,39)" fg:x="618" fg:w="7"/><text x="35.6249%" y="190.50"></text></g><g><title>lookup (kappybara/indexed_set.py:146) (2 samples, 0.11%)</title><rect x="35.6611%" y="196" width="0.1145%" height="15" fill="rgb(235,36,10)" fg:x="623" fg:w="2"/><text x="35.9111%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:116) (4 samples, 0.23%)</title><rect x="35.7756%" y="148" width="0.2290%" height="15" fill="rgb(251,123,47)" fg:x="625" fg:w="4"/><text x="36.0256%" y="158.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.11%)</title><rect x="36.9204%" y="164" width="0.1145%" height="15" fill="rgb(221,13,13)" fg:x="645" fg:w="2"/><text x="37.1704%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:95) (2 samples, 0.11%)</title><rect x="37.1494%" y="164" width="0.1145%" height="15" fill="rgb(238,131,9)" fg:x="649" fg:w="2"/><text x="37.3994%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:96) (7 samples, 0.40%)</title><rect x="37.2639%" y="164" width="0.4007%" height="15" fill="rgb(211,50,8)" fg:x="651" fg:w="7"/><text x="37.5139%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:97) (4 samples, 0.23%)</title><rect x="37.6646%" y="164" width="0.2290%" height="15" fill="rgb(245,182,24)" fg:x="658" fg:w="4"/><text x="37.9146%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:98) (3 samples, 0.17%)</title><rect x="37.8935%" y="164" width="0.1717%" height="15" fill="rgb(242,14,37)" fg:x="662" fg:w="3"/><text x="38.1435%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:103) (2 samples, 0.11%)</title><rect x="38.0653%" y="164" width="0.1145%" height="15" fill="rgb(246,228,12)" fg:x="665" fg:w="2"/><text x="38.3153%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:104) (27 samples, 1.55%)</title><rect x="38.1797%" y="164" width="1.5455%" height="15" fill="rgb(213,55,15)" fg:x="667" fg:w="27"/><text x="38.4297%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (24 samples, 1.37%)</title><rect x="38.3515%" y="180" width="1.3738%" height="15" fill="rgb(209,9,3)" fg:x="670" fg:w="24"/><text x="38.6015%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (3 samples, 0.17%)</title><rect x="40.3549%" y="180" width="0.1717%" height="15" fill="rgb(230,59,30)" fg:x="705" fg:w="3"/><text x="40.6049%" y="190.50"></text></g><g><title>add (kappybara/indexed_set.py:106) (45 samples, 2.58%)</title><rect x="39.7252%" y="164" width="2.5758%" height="15" fill="rgb(209,121,21)" fg:x="694" fg:w="45"/><text x="39.9752%" y="174.50">ad..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (31 samples, 1.77%)</title><rect x="40.5266%" y="180" width="1.7745%" height="15" fill="rgb(220,109,13)" fg:x="708" fg:w="31"/><text x="40.7766%" y="190.50">_..</text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.17%)</title><rect x="42.1294%" y="196" width="0.1717%" height="15" fill="rgb(232,18,1)" fg:x="736" fg:w="3"/><text x="42.3794%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:109) (6 samples, 0.34%)</title><rect x="42.3011%" y="164" width="0.3434%" height="15" fill="rgb(215,41,42)" fg:x="739" fg:w="6"/><text x="42.5511%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:110) (31 samples, 1.77%)</title><rect x="42.6445%" y="164" width="1.7745%" height="15" fill="rgb(224,123,36)" fg:x="745" fg:w="31"/><text x="42.8945%" y="174.50">a..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (20 samples, 1.14%)</title><rect x="43.2742%" y="180" width="1.1448%" height="15" fill="rgb(240,125,3)" fg:x="756" fg:w="20"/><text x="43.5242%" y="190.50"></text></g><g><title>apply_update (kappybara/mixture.py:118) (229 samples, 13.11%)</title><rect x="31.4253%" y="132" width="13.1082%" height="15" fill="rgb(205,98,50)" fg:x="549" fg:w="229"/><text x="31.6753%" y="142.50">apply_update (kappyb..</text></g><g><title>add (kappybara/indexed_set.py:118) (149 samples, 8.53%)</title><rect x="36.0046%" y="148" width="8.5289%" height="15" fill="rgb(205,185,37)" fg:x="629" fg:w="149"/><text x="36.2546%" y="158.50">add (kappyba..</text></g><g><title>add (kappybara/indexed_set.py:113) (2 samples, 0.11%)</title><rect x="44.4190%" y="164" width="0.1145%" height="15" fill="rgb(238,207,15)" fg:x="776" fg:w="2"/><text x="44.6690%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:89) (5 samples, 0.29%)</title><rect x="44.5335%" y="132" width="0.2862%" height="15" fill="rgb(213,199,42)" fg:x="778" fg:w="5"/><text x="44.7835%" y="142.50"></text></g><g><title>apply_update (kappybara/mixture.py:90) (2 samples, 0.11%)</title><rect x="44.8197%" y="132" width="0.1145%" height="15" fill="rgb(235,201,11)" fg:x="783" fg:w="2"/><text x="45.0697%" y="142.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.11%)</title><rect x="45.1631%" y="148" width="0.1145%" height="15" fill="rgb(207,46,11)" fg:x="789" fg:w="2"/><text x="45.4131%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:154) (5 samples, 0.29%)</title><rect x="45.2776%" y="148" width="0.2862%" height="15" fill="rgb(241,35,35)" fg:x="791" fg:w="5"/><text x="45.5276%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:156) (5 samples, 0.29%)</title><rect x="45.5638%" y="148" width="0.2862%" height="15" fill="rgb(243,32,47)" fg:x="796" fg:w="5"/><text x="45.8138%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:157) (2 samples, 0.11%)</title><rect x="45.8500%" y="148" width="0.1145%" height="15" fill="rgb(247,202,23)" fg:x="801" fg:w="2"/><text x="46.1000%" y="158.50"></text></g><g><title>remove_by (kappybara/indexed_set.py:158) (23 samples, 1.32%)</title><rect x="45.9645%" y="148" width="1.3165%" height="15" fill="rgb(219,102,11)" fg:x="803" fg:w="23"/><text x="46.2145%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (20 samples, 1.14%)</title><rect x="46.1362%" y="164" width="1.1448%" height="15" fill="rgb(243,110,44)" fg:x="806" fg:w="20"/><text x="46.3862%" y="174.50"></text></g><g><title>remove (kappybara/indexed_set.py:121) (14 samples, 0.80%)</title><rect x="47.4528%" y="164" width="0.8014%" height="15" fill="rgb(222,74,54)" fg:x="829" fg:w="14"/><text x="47.7028%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (9 samples, 0.52%)</title><rect x="47.7390%" y="180" width="0.5152%" height="15" fill="rgb(216,99,12)" fg:x="834" fg:w="9"/><text x="47.9890%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:122) (13 samples, 0.74%)</title><rect x="48.2541%" y="164" width="0.7441%" height="15" fill="rgb(226,22,26)" fg:x="843" fg:w="13"/><text x="48.5041%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (9 samples, 0.52%)</title><rect x="48.4831%" y="180" width="0.5152%" height="15" fill="rgb(217,163,10)" fg:x="847" fg:w="9"/><text x="48.7331%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:125) (13 samples, 0.74%)</title><rect x="48.9983%" y="164" width="0.7441%" height="15" fill="rgb(213,25,53)" fg:x="856" fg:w="13"/><text x="49.2483%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (8 samples, 0.46%)</title><rect x="49.2845%" y="180" width="0.4579%" height="15" fill="rgb(252,105,26)" fg:x="861" fg:w="8"/><text x="49.5345%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:129) (8 samples, 0.46%)</title><rect x="49.7424%" y="164" width="0.4579%" height="15" fill="rgb(220,39,43)" fg:x="869" fg:w="8"/><text x="49.9924%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (3 samples, 0.17%)</title><rect x="50.0286%" y="180" width="0.1717%" height="15" fill="rgb(229,68,48)" fg:x="874" fg:w="3"/><text x="50.2786%" y="190.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:30) (2 samples, 0.11%)</title><rect x="50.7155%" y="180" width="0.1145%" height="15" fill="rgb(252,8,32)" fg:x="886" fg:w="2"/><text x="50.9655%" y="190.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:81) (2 samples, 0.11%)</title><rect x="50.7155%" y="196" width="0.1145%" height="15" fill="rgb(223,20,43)" fg:x="886" fg:w="2"/><text x="50.9655%" y="206.50"></text></g><g><title>lookup (kappybara/indexed_set.py:141) (2 samples, 0.11%)</title><rect x="51.4024%" y="212" width="0.1145%" height="15" fill="rgb(229,81,49)" fg:x="898" fg:w="2"/><text x="51.6524%" y="222.50"></text></g><g><title>lookup (kappybara/indexed_set.py:142) (3 samples, 0.17%)</title><rect x="51.5169%" y="212" width="0.1717%" height="15" fill="rgb(236,28,36)" fg:x="900" fg:w="3"/><text x="51.7669%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:134) (29 samples, 1.66%)</title><rect x="50.2576%" y="164" width="1.6600%" height="15" fill="rgb(249,185,26)" fg:x="878" fg:w="29"/><text x="50.5076%" y="174.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:50) (18 samples, 1.03%)</title><rect x="50.8872%" y="180" width="1.0303%" height="15" fill="rgb(249,174,33)" fg:x="889" fg:w="18"/><text x="51.1372%" y="190.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:184) (14 samples, 0.80%)</title><rect x="51.1162%" y="196" width="0.8014%" height="15" fill="rgb(233,201,37)" fg:x="893" fg:w="14"/><text x="51.3662%" y="206.50"></text></g><g><title>lookup (kappybara/indexed_set.py:146) (3 samples, 0.17%)</title><rect x="51.7459%" y="212" width="0.1717%" height="15" fill="rgb(221,78,26)" fg:x="904" fg:w="3"/><text x="51.9959%" y="222.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.11%)</title><rect x="54.2645%" y="212" width="0.1145%" height="15" fill="rgb(250,127,30)" fg:x="948" fg:w="2"/><text x="54.5145%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:121) (39 samples, 2.23%)</title><rect x="52.2038%" y="180" width="2.2324%" height="15" fill="rgb(230,49,44)" fg:x="912" fg:w="39"/><text x="52.4538%" y="190.50">r..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (29 samples, 1.66%)</title><rect x="52.7762%" y="196" width="1.6600%" height="15" fill="rgb(229,67,23)" fg:x="922" fg:w="29"/><text x="53.0262%" y="206.50"></text></g><g><title>remove (kappybara/indexed_set.py:122) (46 samples, 2.63%)</title><rect x="54.4362%" y="180" width="2.6331%" height="15" fill="rgb(249,83,47)" fg:x="951" fg:w="46"/><text x="54.6862%" y="190.50">re..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (38 samples, 2.18%)</title><rect x="54.8941%" y="196" width="2.1752%" height="15" fill="rgb(215,43,3)" fg:x="959" fg:w="38"/><text x="55.1441%" y="206.50">_..</text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.17%)</title><rect x="56.8975%" y="212" width="0.1717%" height="15" fill="rgb(238,154,13)" fg:x="994" fg:w="3"/><text x="57.1475%" y="222.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (2 samples, 0.11%)</title><rect x="58.9010%" y="212" width="0.1145%" height="15" fill="rgb(219,56,2)" fg:x="1029" fg:w="2"/><text x="59.1510%" y="222.50"></text></g><g><title>remove (kappybara/indexed_set.py:125) (35 samples, 2.00%)</title><rect x="57.0693%" y="180" width="2.0034%" height="15" fill="rgb(233,0,4)" fg:x="997" fg:w="35"/><text x="57.3193%" y="190.50">r..</text></g><g><title>__hash__ (kappybara/pattern.py:188) (22 samples, 1.26%)</title><rect x="57.8134%" y="196" width="1.2593%" height="15" fill="rgb(235,30,7)" fg:x="1010" fg:w="22"/><text x="58.0634%" y="206.50"></text></g><g><title>remove (kappybara/indexed_set.py:126) (7 samples, 0.40%)</title><rect x="59.0727%" y="180" width="0.4007%" height="15" fill="rgb(250,79,13)" fg:x="1032" fg:w="7"/><text x="59.3227%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:127) (4 samples, 0.23%)</title><rect x="59.4734%" y="180" width="0.2290%" height="15" fill="rgb(211,146,34)" fg:x="1039" fg:w="4"/><text x="59.7234%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:129) (18 samples, 1.03%)</title><rect x="59.7023%" y="180" width="1.0303%" height="15" fill="rgb(228,22,38)" fg:x="1043" fg:w="18"/><text x="59.9523%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (14 samples, 0.80%)</title><rect x="59.9313%" y="196" width="0.8014%" height="15" fill="rgb(235,168,5)" fg:x="1047" fg:w="14"/><text x="60.1813%" y="206.50"></text></g><g><title>remove (kappybara/indexed_set.py:135) (158 samples, 9.04%)</title><rect x="51.9176%" y="164" width="9.0441%" height="15" fill="rgb(221,155,16)" fg:x="907" fg:w="158"/><text x="52.1676%" y="174.50">remove (kappy..</text></g><g><title>remove (kappybara/indexed_set.py:132) (4 samples, 0.23%)</title><rect x="60.7327%" y="180" width="0.2290%" height="15" fill="rgb(215,215,53)" fg:x="1061" fg:w="4"/><text x="60.9827%" y="190.50"></text></g><g><title>remove (kappybara/indexed_set.py:137) (9 samples, 0.52%)</title><rect x="60.9616%" y="164" width="0.5152%" height="15" fill="rgb(223,4,10)" fg:x="1065" fg:w="9"/><text x="61.2116%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:91) (297 samples, 17.00%)</title><rect x="44.9342%" y="132" width="17.0006%" height="15" fill="rgb(234,103,6)" fg:x="785" fg:w="297"/><text x="45.1842%" y="142.50">apply_update (kappybara/mi..</text></g><g><title>remove_by (kappybara/indexed_set.py:159) (256 samples, 14.65%)</title><rect x="47.2811%" y="148" width="14.6537%" height="15" fill="rgb(227,97,0)" fg:x="826" fg:w="256"/><text x="47.5311%" y="158.50">remove_by (kappybara/i..</text></g><g><title>remove (kappybara/indexed_set.py:138) (8 samples, 0.46%)</title><rect x="61.4768%" y="164" width="0.4579%" height="15" fill="rgb(234,150,53)" fg:x="1074" fg:w="8"/><text x="61.7268%" y="174.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:257) (2 samples, 0.11%)</title><rect x="62.2782%" y="148" width="0.1145%" height="15" fill="rgb(228,201,54)" fg:x="1088" fg:w="2"/><text x="62.5282%" y="158.50"></text></g><g><title>__init__ (kappybara/pattern.py:209) (2 samples, 0.11%)</title><rect x="62.5072%" y="164" width="0.1145%" height="15" fill="rgb(222,22,37)" fg:x="1092" fg:w="2"/><text x="62.7572%" y="174.50"></text></g><g><title>__init__ (kappybara/indexed_set.py:96) (16 samples, 0.92%)</title><rect x="62.7361%" y="180" width="0.9159%" height="15" fill="rgb(237,53,32)" fg:x="1096" fg:w="16"/><text x="62.9861%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (5 samples, 0.29%)</title><rect x="63.3658%" y="196" width="0.2862%" height="15" fill="rgb(233,25,53)" fg:x="1107" fg:w="5"/><text x="63.6158%" y="206.50"></text></g><g><title>__init__ (kappybara/pattern.py:219) (46 samples, 2.63%)</title><rect x="62.6216%" y="164" width="2.6331%" height="15" fill="rgb(210,40,34)" fg:x="1094" fg:w="46"/><text x="62.8716%" y="174.50">__..</text></g><g><title>__init__ (kappybara/indexed_set.py:98) (27 samples, 1.55%)</title><rect x="63.7092%" y="180" width="1.5455%" height="15" fill="rgb(241,220,44)" fg:x="1113" fg:w="27"/><text x="63.9592%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (3 samples, 0.17%)</title><rect x="65.0830%" y="196" width="0.1717%" height="15" fill="rgb(235,28,35)" fg:x="1137" fg:w="3"/><text x="65.3330%" y="206.50"></text></g><g><title>create_index (kappybara/indexed_set.py:176) (3 samples, 0.17%)</title><rect x="65.4264%" y="180" width="0.1717%" height="15" fill="rgb(210,56,17)" fg:x="1143" fg:w="3"/><text x="65.6764%" y="190.50"></text></g><g><title>__call__ (kappybara/indexed_set.py:49) (2 samples, 0.11%)</title><rect x="67.8306%" y="196" width="0.1145%" height="15" fill="rgb(224,130,29)" fg:x="1185" fg:w="2"/><text x="68.0806%" y="206.50"></text></g><g><title>create_index (kappybara/indexed_set.py:177) (55 samples, 3.15%)</title><rect x="65.5982%" y="180" width="3.1483%" height="15" fill="rgb(235,212,8)" fg:x="1146" fg:w="55"/><text x="65.8482%" y="190.50">cre..</text></g><g><title>__call__ (kappybara/indexed_set.py:50) (14 samples, 0.80%)</title><rect x="67.9450%" y="196" width="0.8014%" height="15" fill="rgb(223,33,50)" fg:x="1187" fg:w="14"/><text x="68.1950%" y="206.50"></text></g><g><title>&lt;lambda&gt; (kappybara/pattern.py:221) (3 samples, 0.17%)</title><rect x="68.5747%" y="212" width="0.1717%" height="15" fill="rgb(219,149,13)" fg:x="1198" fg:w="3"/><text x="68.8247%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:103) (3 samples, 0.17%)</title><rect x="70.5781%" y="196" width="0.1717%" height="15" fill="rgb(250,156,29)" fg:x="1233" fg:w="3"/><text x="70.8281%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (3 samples, 0.17%)</title><rect x="71.8374%" y="212" width="0.1717%" height="15" fill="rgb(216,193,19)" fg:x="1255" fg:w="3"/><text x="72.0874%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:104) (28 samples, 1.60%)</title><rect x="70.7499%" y="196" width="1.6027%" height="15" fill="rgb(216,135,14)" fg:x="1236" fg:w="28"/><text x="70.9999%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (6 samples, 0.34%)</title><rect x="72.0092%" y="212" width="0.3434%" height="15" fill="rgb(241,47,5)" fg:x="1258" fg:w="6"/><text x="72.2592%" y="222.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (3 samples, 0.17%)</title><rect x="73.4402%" y="212" width="0.1717%" height="15" fill="rgb(233,42,35)" fg:x="1283" fg:w="3"/><text x="73.6902%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:106) (27 samples, 1.55%)</title><rect x="72.3526%" y="196" width="1.5455%" height="15" fill="rgb(231,13,6)" fg:x="1264" fg:w="27"/><text x="72.6026%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (5 samples, 0.29%)</title><rect x="73.6119%" y="212" width="0.2862%" height="15" fill="rgb(207,181,40)" fg:x="1286" fg:w="5"/><text x="73.8619%" y="222.50"></text></g><g><title>add (kappybara/indexed_set.py:109) (8 samples, 0.46%)</title><rect x="73.8981%" y="196" width="0.4579%" height="15" fill="rgb(254,173,49)" fg:x="1291" fg:w="8"/><text x="74.1481%" y="206.50"></text></g><g><title>add (kappybara/indexed_set.py:110) (34 samples, 1.95%)</title><rect x="74.3560%" y="196" width="1.9462%" height="15" fill="rgb(221,1,38)" fg:x="1299" fg:w="34"/><text x="74.6060%" y="206.50">a..</text></g><g><title>__init__ (kappybara/pattern.py:221) (213 samples, 12.19%)</title><rect x="65.2547%" y="164" width="12.1923%" height="15" fill="rgb(206,124,46)" fg:x="1140" fg:w="213"/><text x="65.5047%" y="174.50">__init__ (kappybar..</text></g><g><title>create_index (kappybara/indexed_set.py:180) (151 samples, 8.64%)</title><rect x="68.8037%" y="180" width="8.6434%" height="15" fill="rgb(249,21,11)" fg:x="1202" fg:w="151"/><text x="69.0537%" y="190.50">create_index..</text></g><g><title>add (kappybara/indexed_set.py:113) (20 samples, 1.14%)</title><rect x="76.3022%" y="196" width="1.1448%" height="15" fill="rgb(222,201,40)" fg:x="1333" fg:w="20"/><text x="76.5522%" y="206.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:130) (7 samples, 0.40%)</title><rect x="77.5043%" y="164" width="0.4007%" height="15" fill="rgb(235,61,29)" fg:x="1354" fg:w="7"/><text x="77.7543%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:29) (6 samples, 0.34%)</title><rect x="81.6829%" y="180" width="0.3434%" height="15" fill="rgb(219,207,3)" fg:x="1427" fg:w="6"/><text x="81.9329%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:131) (93 samples, 5.32%)</title><rect x="77.9050%" y="164" width="5.3234%" height="15" fill="rgb(222,56,46)" fg:x="1361" fg:w="93"/><text x="78.1550%" y="174.50">depth_f..</text></g><g><title>__hash__ (kappybara/utils.py:30) (21 samples, 1.20%)</title><rect x="82.0263%" y="180" width="1.2021%" height="15" fill="rgb(239,76,54)" fg:x="1433" fg:w="21"/><text x="82.2763%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:132) (19 samples, 1.09%)</title><rect x="83.2284%" y="164" width="1.0876%" height="15" fill="rgb(231,124,27)" fg:x="1454" fg:w="19"/><text x="83.4784%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (2 samples, 0.11%)</title><rect x="84.2015%" y="180" width="0.1145%" height="15" fill="rgb(249,195,6)" fg:x="1471" fg:w="2"/><text x="84.4515%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:133) (2 samples, 0.11%)</title><rect x="84.3160%" y="164" width="0.1145%" height="15" fill="rgb(237,174,47)" fg:x="1473" fg:w="2"/><text x="84.5660%" y="174.50"></text></g><g><title>neighbors (kappybara/pattern.py:120) (2 samples, 0.11%)</title><rect x="86.1477%" y="180" width="0.1145%" height="15" fill="rgb(206,201,31)" fg:x="1505" fg:w="2"/><text x="86.3977%" y="190.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (12 samples, 0.69%)</title><rect x="90.4980%" y="196" width="0.6869%" height="15" fill="rgb(231,57,52)" fg:x="1581" fg:w="12"/><text x="90.7480%" y="206.50"></text></g><g><title>sites (kappybara/pattern.py:111) (4 samples, 0.23%)</title><rect x="92.3869%" y="212" width="0.2290%" height="15" fill="rgb(248,177,22)" fg:x="1614" fg:w="4"/><text x="92.6369%" y="222.50"></text></g><g><title>__iter__ (kappybara/pattern.py:99) (68 samples, 3.89%)</title><rect x="91.1849%" y="196" width="3.8924%" height="15" fill="rgb(215,211,37)" fg:x="1593" fg:w="68"/><text x="91.4349%" y="206.50">__it..</text></g><g><title>sites (kappybara/pattern.py:113) (43 samples, 2.46%)</title><rect x="92.6159%" y="212" width="2.4614%" height="15" fill="rgb(241,128,51)" fg:x="1618" fg:w="43"/><text x="92.8659%" y="222.50">si..</text></g><g><title>coupled (kappybara/pattern.py:64) (9 samples, 0.52%)</title><rect x="95.0773%" y="196" width="0.5152%" height="15" fill="rgb(227,165,31)" fg:x="1661" fg:w="9"/><text x="95.3273%" y="206.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:260) (615 samples, 35.20%)</title><rect x="62.3927%" y="148" width="35.2032%" height="15" fill="rgb(228,167,24)" fg:x="1090" fg:w="615"/><text x="62.6427%" y="158.50">_remove_edge (kappybara/mixture.py:260)</text></g><g><title>depth_first_traversal (kappybara/pattern.py:134) (230 samples, 13.17%)</title><rect x="84.4305%" y="164" width="13.1654%" height="15" fill="rgb(228,143,12)" fg:x="1475" fg:w="230"/><text x="84.6805%" y="174.50">depth_first_traversa..</text></g><g><title>neighbors (kappybara/pattern.py:122) (198 samples, 11.33%)</title><rect x="86.2622%" y="180" width="11.3337%" height="15" fill="rgb(249,149,8)" fg:x="1507" fg:w="198"/><text x="86.5122%" y="190.50">neighbors (kappyb..</text></g><g><title>coupled (kappybara/pattern.py:66) (35 samples, 2.00%)</title><rect x="95.5924%" y="196" width="2.0034%" height="15" fill="rgb(243,35,44)" fg:x="1670" fg:w="35"/><text x="95.8424%" y="206.50">c..</text></g><g><title>__eq__ (kappybara/utils.py:33) (17 samples, 0.97%)</title><rect x="97.8821%" y="164" width="0.9731%" height="15" fill="rgb(246,89,9)" fg:x="1710" fg:w="17"/><text x="98.1321%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:30) (6 samples, 0.34%)</title><rect x="98.5117%" y="180" width="0.3434%" height="15" fill="rgb(233,213,13)" fg:x="1721" fg:w="6"/><text x="98.7617%" y="190.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:262) (25 samples, 1.43%)</title><rect x="97.5959%" y="148" width="1.4310%" height="15" fill="rgb(233,141,41)" fg:x="1705" fg:w="25"/><text x="97.8459%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:225) (3 samples, 0.17%)</title><rect x="98.8552%" y="164" width="0.1717%" height="15" fill="rgb(239,167,4)" fg:x="1727" fg:w="3"/><text x="99.1052%" y="174.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:274) (2 samples, 0.11%)</title><rect x="99.0269%" y="148" width="0.1145%" height="15" fill="rgb(209,217,16)" fg:x="1730" fg:w="2"/><text x="99.2769%" y="158.50"></text></g><g><title>act (kappybara/system.py:74) (1,656 samples, 94.79%)</title><rect x="4.6938%" y="100" width="94.7911%" height="15" fill="rgb(219,88,35)" fg:x="82" fg:w="1656"/><text x="4.9438%" y="110.50">act (kappybara/system.py:74)</text></g><g><title>apply_update (kappybara/mixture.py:188) (1,656 samples, 94.79%)</title><rect x="4.6938%" y="116" width="94.7911%" height="15" fill="rgb(220,193,23)" fg:x="82" fg:w="1656"/><text x="4.9438%" y="126.50">apply_update (kappybara/mixture.py:188)</text></g><g><title>apply_update (kappybara/mixture.py:94) (656 samples, 37.55%)</title><rect x="61.9347%" y="132" width="37.5501%" height="15" fill="rgb(230,90,52)" fg:x="1082" fg:w="656"/><text x="62.1847%" y="142.50">apply_update (kappybara/mixture.py:94)</text></g><g><title>_remove_edge (kappybara/mixture.py:294) (6 samples, 0.34%)</title><rect x="99.1414%" y="148" width="0.3434%" height="15" fill="rgb(252,106,19)" fg:x="1732" fg:w="6"/><text x="99.3914%" y="158.50"></text></g><g><title>add (kappybara/indexed_set.py:118) (5 samples, 0.29%)</title><rect x="99.1986%" y="164" width="0.2862%" height="15" fill="rgb(206,74,20)" fg:x="1733" fg:w="5"/><text x="99.4486%" y="174.50"></text></g><g><title>add (kappybara/indexed_set.py:110) (2 samples, 0.11%)</title><rect x="99.3703%" y="180" width="0.1145%" height="15" fill="rgb(230,138,44)" fg:x="1736" fg:w="2"/><text x="99.6203%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:188) (2 samples, 0.11%)</title><rect x="99.3703%" y="196" width="0.1145%" height="15" fill="rgb(235,182,43)" fg:x="1736" fg:w="2"/><text x="99.6203%" y="206.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:23) (1,735 samples, 99.31%)</title><rect x="0.2290%" y="68" width="99.3131%" height="15" fill="rgb(242,16,51)" fg:x="4" fg:w="1735"/><text x="0.4790%" y="78.50">&lt;module&gt; (profile_uni_bi_small.py:23)</text></g><g><title>update (kappybara/system.py:79) (1,701 samples, 97.37%)</title><rect x="2.1752%" y="84" width="97.3669%" height="15" fill="rgb(248,9,4)" fg:x="38" fg:w="1701"/><text x="2.4252%" y="94.50">update (kappybara/system.py:79)</text></g><g><title>&lt;module&gt; (kappybara/grammar.py:35) (3 samples, 0.17%)</title><rect x="99.5421%" y="260" width="0.1717%" height="15" fill="rgb(210,31,22)" fg:x="1739" fg:w="3"/><text x="99.7921%" y="270.50"></text></g><g><title>__init__ (kappybara/grammar.py:15) (3 samples, 0.17%)</title><rect x="99.5421%" y="276" width="0.1717%" height="15" fill="rgb(239,54,39)" fg:x="1739" fg:w="3"/><text x="99.7921%" y="286.50"></text></g><g><title>open (lark/lark.py:577) (3 samples, 0.17%)</title><rect x="99.5421%" y="292" width="0.1717%" height="15" fill="rgb(230,99,41)" fg:x="1739" fg:w="3"/><text x="99.7921%" y="302.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:3) (5 samples, 0.29%)</title><rect x="99.5421%" y="68" width="0.2862%" height="15" fill="rgb(253,106,12)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (5 samples, 0.29%)</title><rect x="99.5421%" y="84" width="0.2862%" height="15" fill="rgb(213,46,41)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (5 samples, 0.29%)</title><rect x="99.5421%" y="100" width="0.2862%" height="15" fill="rgb(215,133,35)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (5 samples, 0.29%)</title><rect x="99.5421%" y="116" width="0.2862%" height="15" fill="rgb(213,28,5)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (5 samples, 0.29%)</title><rect x="99.5421%" y="132" width="0.2862%" height="15" fill="rgb(215,77,49)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (5 samples, 0.29%)</title><rect x="99.5421%" y="148" width="0.2862%" height="15" fill="rgb(248,100,22)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="158.50"></text></g><g><title>&lt;module&gt; (kappybara/kappa.py:6) (5 samples, 0.29%)</title><rect x="99.5421%" y="164" width="0.2862%" height="15" fill="rgb(208,67,9)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (5 samples, 0.29%)</title><rect x="99.5421%" y="180" width="0.2862%" height="15" fill="rgb(219,133,21)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (5 samples, 0.29%)</title><rect x="99.5421%" y="196" width="0.2862%" height="15" fill="rgb(246,46,29)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (5 samples, 0.29%)</title><rect x="99.5421%" y="212" width="0.2862%" height="15" fill="rgb(246,185,52)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (5 samples, 0.29%)</title><rect x="99.5421%" y="228" width="0.2862%" height="15" fill="rgb(252,136,11)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (5 samples, 0.29%)</title><rect x="99.5421%" y="244" width="0.2862%" height="15" fill="rgb(219,138,53)" fg:x="1739" fg:w="5"/><text x="99.7921%" y="254.50"></text></g><g><title>&lt;module&gt; (kappybara/grammar.py:4) (2 samples, 0.11%)</title><rect x="99.7138%" y="260" width="0.1145%" height="15" fill="rgb(211,51,23)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.11%)</title><rect x="99.7138%" y="276" width="0.1145%" height="15" fill="rgb(247,221,28)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 0.11%)</title><rect x="99.7138%" y="292" width="0.1145%" height="15" fill="rgb(251,222,45)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 0.11%)</title><rect x="99.7138%" y="308" width="0.1145%" height="15" fill="rgb(217,162,53)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.11%)</title><rect x="99.7138%" y="324" width="0.1145%" height="15" fill="rgb(229,93,14)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.11%)</title><rect x="99.7138%" y="340" width="0.1145%" height="15" fill="rgb(209,67,49)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="350.50"></text></g><g><title>&lt;module&gt; (lark/__init__.py:11) (2 samples, 0.11%)</title><rect x="99.7138%" y="356" width="0.1145%" height="15" fill="rgb(213,87,29)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.11%)</title><rect x="99.7138%" y="372" width="0.1145%" height="15" fill="rgb(205,151,52)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 0.11%)</title><rect x="99.7138%" y="388" width="0.1145%" height="15" fill="rgb(253,215,39)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 0.11%)</title><rect x="99.7138%" y="404" width="0.1145%" height="15" fill="rgb(221,220,41)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.11%)</title><rect x="99.7138%" y="420" width="0.1145%" height="15" fill="rgb(218,133,21)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.11%)</title><rect x="99.7138%" y="436" width="0.1145%" height="15" fill="rgb(221,193,43)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="446.50"></text></g><g><title>&lt;module&gt; (lark/lark.py:20) (2 samples, 0.11%)</title><rect x="99.7138%" y="452" width="0.1145%" height="15" fill="rgb(240,128,52)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.11%)</title><rect x="99.7138%" y="468" width="0.1145%" height="15" fill="rgb(253,114,12)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 0.11%)</title><rect x="99.7138%" y="484" width="0.1145%" height="15" fill="rgb(215,223,47)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 0.11%)</title><rect x="99.7138%" y="500" width="0.1145%" height="15" fill="rgb(248,225,23)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.11%)</title><rect x="99.7138%" y="516" width="0.1145%" height="15" fill="rgb(250,108,0)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.11%)</title><rect x="99.7138%" y="532" width="0.1145%" height="15" fill="rgb(228,208,7)" fg:x="1742" fg:w="2"/><text x="99.9638%" y="542.50"></text></g><g><title>all (1,747 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(244,45,10)" fg:x="0" fg:w="1747"/><text x="0.2500%" y="62.50"></text></g><g><title>sites (kappybara/pattern.py:113) (2 samples, 0.11%)</title><rect x="99.8855%" y="68" width="0.1145%" height="15" fill="rgb(207,125,25)" fg:x="1745" fg:w="2"/><text x="100.1355%" y="78.50"></text></g></svg></svg>