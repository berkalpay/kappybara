<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="682" onload="init(evt)" viewBox="0 0 1200 682" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="682" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">py-spy record -o results/profile_uni_bi_small_flamegraph.svg -- python profile_uni_bi_small.py # commit 23c7bb7</text><text id="details" fill="rgb(0,0,0)" x="10" y="40.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="671.00"> </text><svg id="frames" x="10" width="1180" total_samples="1626"><g><title>&lt;module&gt; (profile_uni_bi_small.py:1) (4 samples, 0.25%)</title><rect x="0.0000%" y="68" width="0.2460%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.25%)</title><rect x="0.0000%" y="84" width="0.2460%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.25%)</title><rect x="0.0000%" y="100" width="0.2460%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.25%)</title><rect x="0.0000%" y="116" width="0.2460%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (4 samples, 0.25%)</title><rect x="0.0000%" y="132" width="0.2460%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.25%)</title><rect x="0.0000%" y="148" width="0.2460%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (kappybara/mixture.py:1) (4 samples, 0.25%)</title><rect x="0.0000%" y="164" width="0.2460%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (4 samples, 0.25%)</title><rect x="0.0000%" y="180" width="0.2460%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (4 samples, 0.25%)</title><rect x="0.0000%" y="196" width="0.2460%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (4 samples, 0.25%)</title><rect x="0.0000%" y="212" width="0.2460%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (4 samples, 0.25%)</title><rect x="0.0000%" y="228" width="0.2460%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (4 samples, 0.25%)</title><rect x="0.0000%" y="244" width="0.2460%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (dataclasses.py:5) (3 samples, 0.18%)</title><rect x="0.0615%" y="260" width="0.1845%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="3"/><text x="0.3115%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (3 samples, 0.18%)</title><rect x="0.0615%" y="276" width="0.1845%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="3"/><text x="0.3115%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (3 samples, 0.18%)</title><rect x="0.0615%" y="292" width="0.1845%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="3"/><text x="0.3115%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (3 samples, 0.18%)</title><rect x="0.0615%" y="308" width="0.1845%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="3"/><text x="0.3115%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (3 samples, 0.18%)</title><rect x="0.0615%" y="324" width="0.1845%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="3"/><text x="0.3115%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (3 samples, 0.18%)</title><rect x="0.0615%" y="340" width="0.1845%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="3"/><text x="0.3115%" y="350.50"></text></g><g><title>&lt;module&gt; (inspect.py:145) (3 samples, 0.18%)</title><rect x="0.0615%" y="356" width="0.1845%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="3"/><text x="0.3115%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (3 samples, 0.18%)</title><rect x="0.0615%" y="372" width="0.1845%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="3"/><text x="0.3115%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (3 samples, 0.18%)</title><rect x="0.0615%" y="388" width="0.1845%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="3"/><text x="0.3115%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (3 samples, 0.18%)</title><rect x="0.0615%" y="404" width="0.1845%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="3"/><text x="0.3115%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.12%)</title><rect x="0.1230%" y="420" width="0.1230%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="2"/><text x="0.3730%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.12%)</title><rect x="0.1230%" y="436" width="0.1230%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="2"/><text x="0.3730%" y="446.50"></text></g><g><title>&lt;module&gt; (ast.py:30) (2 samples, 0.12%)</title><rect x="0.1230%" y="452" width="0.1230%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="2"/><text x="0.3730%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.12%)</title><rect x="0.1230%" y="468" width="0.1230%" height="15" fill="rgb(249,31,29)" fg:x="2" fg:w="2"/><text x="0.3730%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 0.12%)</title><rect x="0.1230%" y="484" width="0.1230%" height="15" fill="rgb(225,111,53)" fg:x="2" fg:w="2"/><text x="0.3730%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 0.12%)</title><rect x="0.1230%" y="500" width="0.1230%" height="15" fill="rgb(238,160,17)" fg:x="2" fg:w="2"/><text x="0.3730%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.12%)</title><rect x="0.1230%" y="516" width="0.1230%" height="15" fill="rgb(214,148,48)" fg:x="2" fg:w="2"/><text x="0.3730%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.12%)</title><rect x="0.1230%" y="532" width="0.1230%" height="15" fill="rgb(232,36,49)" fg:x="2" fg:w="2"/><text x="0.3730%" y="542.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:18) (3 samples, 0.18%)</title><rect x="0.2460%" y="68" width="0.1845%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="3"/><text x="0.4960%" y="78.50"></text></g><g><title>instantiate (kappybara/mixture.py:50) (3 samples, 0.18%)</title><rect x="0.2460%" y="84" width="0.1845%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="3"/><text x="0.4960%" y="94.50"></text></g><g><title>_instantiate_component (kappybara/mixture.py:69) (2 samples, 0.12%)</title><rect x="0.3075%" y="100" width="0.1230%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="2"/><text x="0.5575%" y="110.50"></text></g><g><title>apply_update (kappybara/mixture.py:187) (2 samples, 0.12%)</title><rect x="0.3075%" y="116" width="0.1230%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="2"/><text x="0.5575%" y="126.50"></text></g><g><title>apply_update (kappybara/mixture.py:97) (2 samples, 0.12%)</title><rect x="0.3075%" y="132" width="0.1230%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="2"/><text x="0.5575%" y="142.50"></text></g><g><title>expovariate (random.py:617) (3 samples, 0.18%)</title><rect x="0.6150%" y="116" width="0.1845%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="3"/><text x="0.8650%" y="126.50"></text></g><g><title>n_embeddings (kappybara/rule.py:184) (3 samples, 0.18%)</title><rect x="0.9840%" y="180" width="0.1845%" height="15" fill="rgb(226,3,54)" fg:x="16" fg:w="3"/><text x="1.2340%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:188) (3 samples, 0.18%)</title><rect x="1.1685%" y="180" width="0.1845%" height="15" fill="rgb(245,192,40)" fg:x="19" fg:w="3"/><text x="1.4185%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:189) (13 samples, 0.80%)</title><rect x="1.3530%" y="180" width="0.7995%" height="15" fill="rgb(238,167,29)" fg:x="22" fg:w="13"/><text x="1.6030%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (kappybara/rule.py:190) (7 samples, 0.43%)</title><rect x="1.7220%" y="196" width="0.4305%" height="15" fill="rgb(232,182,51)" fg:x="28" fg:w="7"/><text x="1.9720%" y="206.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:176) (6 samples, 0.37%)</title><rect x="1.7835%" y="212" width="0.3690%" height="15" fill="rgb(231,60,39)" fg:x="29" fg:w="6"/><text x="2.0335%" y="222.50"></text></g><g><title>lookup (kappybara/utils.py:196) (2 samples, 0.12%)</title><rect x="2.0295%" y="228" width="0.1230%" height="15" fill="rgb(208,69,12)" fg:x="33" fg:w="2"/><text x="2.2795%" y="238.50"></text></g><g><title>n_embeddings (kappybara/rule.py:238) (4 samples, 0.25%)</title><rect x="2.3370%" y="180" width="0.2460%" height="15" fill="rgb(235,93,37)" fg:x="38" fg:w="4"/><text x="2.5870%" y="190.50"></text></g><g><title>lookup (kappybara/utils.py:196) (2 samples, 0.12%)</title><rect x="2.7675%" y="212" width="0.1230%" height="15" fill="rgb(213,116,39)" fg:x="45" fg:w="2"/><text x="3.0175%" y="222.50"></text></g><g><title>n_embeddings (kappybara/rule.py:240) (6 samples, 0.37%)</title><rect x="2.5830%" y="180" width="0.3690%" height="15" fill="rgb(222,207,29)" fg:x="42" fg:w="6"/><text x="2.8330%" y="190.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:176) (4 samples, 0.25%)</title><rect x="2.7060%" y="196" width="0.2460%" height="15" fill="rgb(206,96,30)" fg:x="44" fg:w="4"/><text x="2.9560%" y="206.50"></text></g><g><title>n_embeddings (kappybara/rule.py:242) (3 samples, 0.18%)</title><rect x="2.9520%" y="180" width="0.1845%" height="15" fill="rgb(218,138,4)" fg:x="48" fg:w="3"/><text x="3.2020%" y="190.50"></text></g><g><title>n_embeddings (kappybara/rule.py:243) (4 samples, 0.25%)</title><rect x="3.1365%" y="180" width="0.2460%" height="15" fill="rgb(250,191,14)" fg:x="51" fg:w="4"/><text x="3.3865%" y="190.50"></text></g><g><title>embeddings_in_component (kappybara/mixture.py:176) (3 samples, 0.18%)</title><rect x="3.1980%" y="196" width="0.1845%" height="15" fill="rgb(239,60,40)" fg:x="52" fg:w="3"/><text x="3.4480%" y="206.50"></text></g><g><title>n_embeddings (kappybara/rule.py:76) (4 samples, 0.25%)</title><rect x="3.4440%" y="180" width="0.2460%" height="15" fill="rgb(206,27,48)" fg:x="56" fg:w="4"/><text x="3.6940%" y="190.50"></text></g><g><title>update (kappybara/system.py:78) (56 samples, 3.44%)</title><rect x="0.5535%" y="84" width="3.4440%" height="15" fill="rgb(225,35,8)" fg:x="9" fg:w="56"/><text x="0.8035%" y="94.50">upd..</text></g><g><title>wait (kappybara/system.py:60) (55 samples, 3.38%)</title><rect x="0.6150%" y="100" width="3.3825%" height="15" fill="rgb(250,213,24)" fg:x="10" fg:w="55"/><text x="0.8650%" y="110.50">wai..</text></g><g><title>reactivity (kappybara/system.py:56) (52 samples, 3.20%)</title><rect x="0.7995%" y="116" width="3.1980%" height="15" fill="rgb(247,123,22)" fg:x="13" fg:w="52"/><text x="1.0495%" y="126.50">rea..</text></g><g><title>__get__ (functools.py:998) (51 samples, 3.14%)</title><rect x="0.8610%" y="132" width="3.1365%" height="15" fill="rgb(231,138,38)" fg:x="14" fg:w="51"/><text x="1.1110%" y="142.50">__g..</text></g><g><title>rule_reactivities (kappybara/system.py:52) (51 samples, 3.14%)</title><rect x="0.8610%" y="148" width="3.1365%" height="15" fill="rgb(231,145,46)" fg:x="14" fg:w="51"/><text x="1.1110%" y="158.50">rul..</text></g><g><title>reactivity (kappybara/rule.py:32) (50 samples, 3.08%)</title><rect x="0.9225%" y="164" width="3.0750%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="50"/><text x="1.1725%" y="174.50">rea..</text></g><g><title>rate (kappybara/rule.py:73) (4 samples, 0.25%)</title><rect x="3.7515%" y="180" width="0.2460%" height="15" fill="rgb(217,147,25)" fg:x="61" fg:w="4"/><text x="4.0015%" y="190.50"></text></g><g><title>evaluate (kappybara/alg_exp.py:53) (2 samples, 0.12%)</title><rect x="3.8745%" y="196" width="0.1230%" height="15" fill="rgb(247,81,37)" fg:x="63" fg:w="2"/><text x="4.1245%" y="206.50"></text></g><g><title>choices (random.py:488) (3 samples, 0.18%)</title><rect x="4.1820%" y="116" width="0.1845%" height="15" fill="rgb(209,12,38)" fg:x="68" fg:w="3"/><text x="4.4320%" y="126.50"></text></g><g><title>act (kappybara/system.py:68) (7 samples, 0.43%)</title><rect x="3.9975%" y="100" width="0.4305%" height="15" fill="rgb(227,1,9)" fg:x="65" fg:w="7"/><text x="4.2475%" y="110.50"></text></g><g><title>_produce_update (kappybara/rule.py:124) (2 samples, 0.12%)</title><rect x="4.4895%" y="132" width="0.1230%" height="15" fill="rgb(248,47,43)" fg:x="73" fg:w="2"/><text x="4.7395%" y="142.50"></text></g><g><title>select (kappybara/rule.py:104) (10 samples, 0.62%)</title><rect x="4.4895%" y="116" width="0.6150%" height="15" fill="rgb(221,10,30)" fg:x="73" fg:w="10"/><text x="4.7395%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:165) (4 samples, 0.25%)</title><rect x="4.8585%" y="132" width="0.2460%" height="15" fill="rgb(210,229,1)" fg:x="79" fg:w="4"/><text x="5.1085%" y="142.50"></text></g><g><title>disconnect_site (kappybara/mixture.py:334) (4 samples, 0.25%)</title><rect x="4.8585%" y="148" width="0.2460%" height="15" fill="rgb(222,148,37)" fg:x="79" fg:w="4"/><text x="5.1085%" y="158.50"></text></g><g><title>__init__ (&lt;string&gt;:3) (2 samples, 0.12%)</title><rect x="4.9815%" y="164" width="0.1230%" height="15" fill="rgb(234,67,33)" fg:x="81" fg:w="2"/><text x="5.2315%" y="174.50"></text></g><g><title>select (kappybara/rule.py:212) (2 samples, 0.12%)</title><rect x="5.2276%" y="116" width="0.1230%" height="15" fill="rgb(247,98,35)" fg:x="85" fg:w="2"/><text x="5.4776%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:127) (3 samples, 0.18%)</title><rect x="5.5351%" y="132" width="0.1845%" height="15" fill="rgb(247,138,52)" fg:x="90" fg:w="3"/><text x="5.7851%" y="142.50"></text></g><g><title>_produce_update (kappybara/rule.py:141) (2 samples, 0.12%)</title><rect x="5.7811%" y="132" width="0.1230%" height="15" fill="rgb(213,79,30)" fg:x="94" fg:w="2"/><text x="6.0311%" y="142.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (2 samples, 0.12%)</title><rect x="5.7811%" y="148" width="0.1230%" height="15" fill="rgb(246,177,23)" fg:x="94" fg:w="2"/><text x="6.0311%" y="158.50"></text></g><g><title>_produce_update (kappybara/rule.py:157) (2 samples, 0.12%)</title><rect x="5.9656%" y="132" width="0.1230%" height="15" fill="rgb(230,62,27)" fg:x="97" fg:w="2"/><text x="6.2156%" y="142.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (2 samples, 0.12%)</title><rect x="5.9656%" y="148" width="0.1230%" height="15" fill="rgb(216,154,8)" fg:x="97" fg:w="2"/><text x="6.2156%" y="158.50"></text></g><g><title>sites (kappybara/pattern.py:112) (2 samples, 0.12%)</title><rect x="5.9656%" y="164" width="0.1230%" height="15" fill="rgb(244,35,45)" fg:x="97" fg:w="2"/><text x="6.2156%" y="174.50"></text></g><g><title>_produce_update (kappybara/rule.py:159) (2 samples, 0.12%)</title><rect x="6.0886%" y="132" width="0.1230%" height="15" fill="rgb(251,115,12)" fg:x="99" fg:w="2"/><text x="6.3386%" y="142.50"></text></g><g><title>select (kappybara/rule.py:222) (18 samples, 1.11%)</title><rect x="5.4121%" y="116" width="1.1070%" height="15" fill="rgb(240,54,50)" fg:x="88" fg:w="18"/><text x="5.6621%" y="126.50"></text></g><g><title>_produce_update (kappybara/rule.py:163) (5 samples, 0.31%)</title><rect x="6.2116%" y="132" width="0.3075%" height="15" fill="rgb(233,84,52)" fg:x="101" fg:w="5"/><text x="6.4616%" y="142.50"></text></g><g><title>connect_sites (kappybara/mixture.py:329) (4 samples, 0.25%)</title><rect x="6.2731%" y="148" width="0.2460%" height="15" fill="rgb(207,117,47)" fg:x="102" fg:w="4"/><text x="6.5231%" y="158.50"></text></g><g><title>act (kappybara/system.py:72) (36 samples, 2.21%)</title><rect x="4.4280%" y="100" width="2.2140%" height="15" fill="rgb(249,43,39)" fg:x="72" fg:w="36"/><text x="4.6780%" y="110.50">a..</text></g><g><title>__iter__ (kappybara/pattern.py:98) (4 samples, 0.25%)</title><rect x="6.9496%" y="180" width="0.2460%" height="15" fill="rgb(209,38,44)" fg:x="113" fg:w="4"/><text x="7.1996%" y="190.50"></text></g><g><title>neighborhood (kappybara/mixture.py:397) (6 samples, 0.37%)</title><rect x="6.8881%" y="148" width="0.3690%" height="15" fill="rgb(236,212,23)" fg:x="112" fg:w="6"/><text x="7.1381%" y="158.50"></text></g><g><title>neighbors (kappybara/pattern.py:121) (5 samples, 0.31%)</title><rect x="6.9496%" y="164" width="0.3075%" height="15" fill="rgb(242,79,21)" fg:x="113" fg:w="5"/><text x="7.1996%" y="174.50"></text></g><g><title>neighborhood (kappybara/mixture.py:398) (3 samples, 0.18%)</title><rect x="7.2571%" y="148" width="0.1845%" height="15" fill="rgb(211,96,35)" fg:x="118" fg:w="3"/><text x="7.5071%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:110) (14 samples, 0.86%)</title><rect x="6.7651%" y="132" width="0.8610%" height="15" fill="rgb(253,215,40)" fg:x="110" fg:w="14"/><text x="7.0151%" y="142.50"></text></g><g><title>__init__ (kappybara/utils.py:150) (2 samples, 0.12%)</title><rect x="7.6261%" y="148" width="0.1230%" height="15" fill="rgb(211,81,21)" fg:x="124" fg:w="2"/><text x="7.8761%" y="158.50"></text></g><g><title>__init__ (kappybara/utils.py:152) (2 samples, 0.12%)</title><rect x="7.8106%" y="148" width="0.1230%" height="15" fill="rgb(208,190,38)" fg:x="127" fg:w="2"/><text x="8.0606%" y="158.50"></text></g><g><title>apply_update (kappybara/mixture.py:112) (6 samples, 0.37%)</title><rect x="7.6261%" y="132" width="0.3690%" height="15" fill="rgb(235,213,38)" fg:x="124" fg:w="6"/><text x="7.8761%" y="142.50"></text></g><g><title>create_index (kappybara/utils.py:231) (4 samples, 0.25%)</title><rect x="8.0566%" y="148" width="0.2460%" height="15" fill="rgb(237,122,38)" fg:x="131" fg:w="4"/><text x="8.3066%" y="158.50"></text></g><g><title>add (kappybara/utils.py:160) (2 samples, 0.12%)</title><rect x="8.7331%" y="164" width="0.1230%" height="15" fill="rgb(244,218,35)" fg:x="142" fg:w="2"/><text x="8.9831%" y="174.50"></text></g><g><title>add (kappybara/utils.py:163) (2 samples, 0.12%)</title><rect x="8.8561%" y="164" width="0.1230%" height="15" fill="rgb(240,68,47)" fg:x="144" fg:w="2"/><text x="9.1061%" y="174.50"></text></g><g><title>add (kappybara/utils.py:164) (5 samples, 0.31%)</title><rect x="8.9791%" y="164" width="0.3075%" height="15" fill="rgb(210,16,53)" fg:x="146" fg:w="5"/><text x="9.2291%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:113) (24 samples, 1.48%)</title><rect x="7.9951%" y="132" width="1.4760%" height="15" fill="rgb(235,124,12)" fg:x="130" fg:w="24"/><text x="8.2451%" y="142.50"></text></g><g><title>create_index (kappybara/utils.py:234) (18 samples, 1.11%)</title><rect x="8.3641%" y="148" width="1.1070%" height="15" fill="rgb(224,169,11)" fg:x="136" fg:w="18"/><text x="8.6141%" y="158.50"></text></g><g><title>add (kappybara/utils.py:167) (3 samples, 0.18%)</title><rect x="9.2866%" y="164" width="0.1845%" height="15" fill="rgb(250,166,2)" fg:x="151" fg:w="3"/><text x="9.5366%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:114) (3 samples, 0.18%)</title><rect x="9.4711%" y="132" width="0.1845%" height="15" fill="rgb(242,216,29)" fg:x="154" fg:w="3"/><text x="9.7211%" y="142.50"></text></g><g><title>apply_update (kappybara/mixture.py:115) (2 samples, 0.12%)</title><rect x="9.6556%" y="132" width="0.1230%" height="15" fill="rgb(230,116,27)" fg:x="157" fg:w="2"/><text x="9.9056%" y="142.50"></text></g><g><title>embeddings (kappybara/pattern.py:267) (8 samples, 0.49%)</title><rect x="10.0861%" y="148" width="0.4920%" height="15" fill="rgb(228,99,48)" fg:x="164" fg:w="8"/><text x="10.3361%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:269) (38 samples, 2.34%)</title><rect x="10.5781%" y="148" width="2.3370%" height="15" fill="rgb(253,11,6)" fg:x="172" fg:w="38"/><text x="10.8281%" y="158.50">e..</text></g><g><title>__hash__ (kappybara/utils.py:50) (2 samples, 0.12%)</title><rect x="12.7921%" y="164" width="0.1230%" height="15" fill="rgb(247,143,39)" fg:x="208" fg:w="2"/><text x="13.0421%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:270) (14 samples, 0.86%)</title><rect x="12.9151%" y="148" width="0.8610%" height="15" fill="rgb(236,97,10)" fg:x="210" fg:w="14"/><text x="13.1651%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:273) (2 samples, 0.12%)</title><rect x="13.7761%" y="148" width="0.1230%" height="15" fill="rgb(233,208,19)" fg:x="224" fg:w="2"/><text x="14.0261%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:274) (4 samples, 0.25%)</title><rect x="13.8991%" y="148" width="0.2460%" height="15" fill="rgb(216,164,2)" fg:x="226" fg:w="4"/><text x="14.1491%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:275) (12 samples, 0.74%)</title><rect x="14.1451%" y="148" width="0.7380%" height="15" fill="rgb(220,129,5)" fg:x="230" fg:w="12"/><text x="14.3951%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:277) (14 samples, 0.86%)</title><rect x="14.8831%" y="148" width="0.8610%" height="15" fill="rgb(242,17,10)" fg:x="242" fg:w="14"/><text x="15.1331%" y="158.50"></text></g><g><title>embeds_in (kappybara/pattern.py:172) (7 samples, 0.43%)</title><rect x="16.0517%" y="164" width="0.4305%" height="15" fill="rgb(242,107,0)" fg:x="261" fg:w="7"/><text x="16.3017%" y="174.50"></text></g><g><title>__iter__ (kappybara/pattern.py:97) (7 samples, 0.43%)</title><rect x="17.1587%" y="180" width="0.4305%" height="15" fill="rgb(251,28,31)" fg:x="279" fg:w="7"/><text x="17.4087%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:110) (6 samples, 0.37%)</title><rect x="17.8352%" y="196" width="0.3690%" height="15" fill="rgb(233,223,10)" fg:x="290" fg:w="6"/><text x="18.0852%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:175) (46 samples, 2.83%)</title><rect x="16.4822%" y="164" width="2.8290%" height="15" fill="rgb(215,21,27)" fg:x="268" fg:w="46"/><text x="16.7322%" y="174.50">em..</text></g><g><title>__iter__ (kappybara/pattern.py:98) (28 samples, 1.72%)</title><rect x="17.5892%" y="180" width="1.7220%" height="15" fill="rgb(232,23,21)" fg:x="286" fg:w="28"/><text x="17.8392%" y="190.50"></text></g><g><title>sites (kappybara/pattern.py:112) (18 samples, 1.11%)</title><rect x="18.2042%" y="196" width="1.1070%" height="15" fill="rgb(244,5,23)" fg:x="296" fg:w="18"/><text x="18.4542%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:176) (4 samples, 0.25%)</title><rect x="19.3112%" y="164" width="0.2460%" height="15" fill="rgb(226,81,46)" fg:x="314" fg:w="4"/><text x="19.5612%" y="174.50"></text></g><g><title>embeds_in (kappybara/pattern.py:178) (11 samples, 0.68%)</title><rect x="19.5572%" y="164" width="0.6765%" height="15" fill="rgb(247,70,30)" fg:x="318" fg:w="11"/><text x="19.8072%" y="174.50"></text></g><g><title>__getitem__ (kappybara/pattern.py:101) (2 samples, 0.12%)</title><rect x="20.1107%" y="180" width="0.1230%" height="15" fill="rgb(212,68,19)" fg:x="327" fg:w="2"/><text x="20.3607%" y="190.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (7 samples, 0.43%)</title><rect x="22.5092%" y="180" width="0.4305%" height="15" fill="rgb(240,187,13)" fg:x="366" fg:w="7"/><text x="22.7592%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:69) (9 samples, 0.55%)</title><rect x="23.0012%" y="180" width="0.5535%" height="15" fill="rgb(223,113,26)" fg:x="374" fg:w="9"/><text x="23.2512%" y="190.50"></text></g><g><title>stated (kappybara/pattern.py:53) (6 samples, 0.37%)</title><rect x="23.1857%" y="196" width="0.3690%" height="15" fill="rgb(206,192,2)" fg:x="377" fg:w="6"/><text x="23.4357%" y="206.50"></text></g><g><title>bound (kappybara/pattern.py:58) (11 samples, 0.68%)</title><rect x="23.9852%" y="196" width="0.6765%" height="15" fill="rgb(241,108,4)" fg:x="390" fg:w="11"/><text x="24.2352%" y="206.50"></text></g><g><title>__eq__ (kappybara/utils.py:54) (6 samples, 0.37%)</title><rect x="24.2927%" y="212" width="0.3690%" height="15" fill="rgb(247,173,49)" fg:x="395" fg:w="6"/><text x="24.5427%" y="222.50"></text></g><g><title>bound (kappybara/pattern.py:59) (8 samples, 0.49%)</title><rect x="24.6617%" y="196" width="0.4920%" height="15" fill="rgb(224,114,35)" fg:x="401" fg:w="8"/><text x="24.9117%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:70) (32 samples, 1.97%)</title><rect x="23.5547%" y="180" width="1.9680%" height="15" fill="rgb(245,159,27)" fg:x="383" fg:w="32"/><text x="23.8047%" y="190.50">e..</text></g><g><title>bound (kappybara/pattern.py:60) (6 samples, 0.37%)</title><rect x="25.1538%" y="196" width="0.3690%" height="15" fill="rgb(245,172,44)" fg:x="409" fg:w="6"/><text x="25.4038%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:75) (5 samples, 0.31%)</title><rect x="25.5228%" y="180" width="0.3075%" height="15" fill="rgb(236,23,11)" fg:x="415" fg:w="5"/><text x="25.7728%" y="190.50"></text></g><g><title>__eq__ (kappybara/utils.py:54) (3 samples, 0.18%)</title><rect x="25.6458%" y="196" width="0.1845%" height="15" fill="rgb(205,117,38)" fg:x="417" fg:w="3"/><text x="25.8958%" y="206.50"></text></g><g><title>__eq__ (kappybara/utils.py:53) (2 samples, 0.12%)</title><rect x="26.5683%" y="196" width="0.1230%" height="15" fill="rgb(237,72,25)" fg:x="432" fg:w="2"/><text x="26.8183%" y="206.50"></text></g><g><title>embeds_in (kappybara/pattern.py:76) (24 samples, 1.48%)</title><rect x="25.8303%" y="180" width="1.4760%" height="15" fill="rgb(244,70,9)" fg:x="420" fg:w="24"/><text x="26.0803%" y="190.50"></text></g><g><title>__eq__ (kappybara/utils.py:54) (10 samples, 0.62%)</title><rect x="26.6913%" y="196" width="0.6150%" height="15" fill="rgb(217,125,39)" fg:x="434" fg:w="10"/><text x="26.9413%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (2 samples, 0.12%)</title><rect x="27.1833%" y="212" width="0.1230%" height="15" fill="rgb(235,36,10)" fg:x="442" fg:w="2"/><text x="27.4333%" y="222.50"></text></g><g><title>embeds_in (kappybara/pattern.py:82) (8 samples, 0.49%)</title><rect x="27.3063%" y="180" width="0.4920%" height="15" fill="rgb(251,123,47)" fg:x="444" fg:w="8"/><text x="27.5563%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:84) (5 samples, 0.31%)</title><rect x="27.7983%" y="180" width="0.3075%" height="15" fill="rgb(221,13,13)" fg:x="452" fg:w="5"/><text x="28.0483%" y="190.50"></text></g><g><title>embeds_in (kappybara/pattern.py:179) (141 samples, 8.67%)</title><rect x="20.2337%" y="164" width="8.6716%" height="15" fill="rgb(238,131,9)" fg:x="329" fg:w="141"/><text x="20.4837%" y="174.50">embeds_in (k..</text></g><g><title>sites (kappybara/pattern.py:112) (12 samples, 0.74%)</title><rect x="28.1673%" y="180" width="0.7380%" height="15" fill="rgb(211,50,8)" fg:x="458" fg:w="12"/><text x="28.4173%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:278) (217 samples, 13.35%)</title><rect x="15.7442%" y="148" width="13.3456%" height="15" fill="rgb(245,182,24)" fg:x="256" fg:w="217"/><text x="15.9942%" y="158.50">embeddings (kappybar..</text></g><g><title>embeds_in (kappybara/pattern.py:180) (3 samples, 0.18%)</title><rect x="28.9053%" y="164" width="0.1845%" height="15" fill="rgb(242,14,37)" fg:x="470" fg:w="3"/><text x="29.1553%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:279) (2 samples, 0.12%)</title><rect x="29.0898%" y="148" width="0.1230%" height="15" fill="rgb(246,228,12)" fg:x="473" fg:w="2"/><text x="29.3398%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:97) (2 samples, 0.12%)</title><rect x="29.2743%" y="164" width="0.1230%" height="15" fill="rgb(213,55,15)" fg:x="476" fg:w="2"/><text x="29.5243%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:282) (14 samples, 0.86%)</title><rect x="29.2128%" y="148" width="0.8610%" height="15" fill="rgb(209,9,3)" fg:x="475" fg:w="14"/><text x="29.4628%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (11 samples, 0.68%)</title><rect x="29.3973%" y="164" width="0.6765%" height="15" fill="rgb(230,59,30)" fg:x="478" fg:w="11"/><text x="29.6473%" y="174.50"></text></g><g><title>sites (kappybara/pattern.py:112) (5 samples, 0.31%)</title><rect x="29.7663%" y="180" width="0.3075%" height="15" fill="rgb(209,121,21)" fg:x="484" fg:w="5"/><text x="30.0163%" y="190.50"></text></g><g><title>embeddings (kappybara/pattern.py:283) (8 samples, 0.49%)</title><rect x="30.0738%" y="148" width="0.4920%" height="15" fill="rgb(220,109,13)" fg:x="489" fg:w="8"/><text x="30.3238%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:285) (2 samples, 0.12%)</title><rect x="30.5658%" y="148" width="0.1230%" height="15" fill="rgb(232,18,1)" fg:x="497" fg:w="2"/><text x="30.8158%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:287) (2 samples, 0.12%)</title><rect x="30.7503%" y="148" width="0.1230%" height="15" fill="rgb(215,41,42)" fg:x="500" fg:w="2"/><text x="31.0003%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:289) (3 samples, 0.18%)</title><rect x="30.8733%" y="148" width="0.1845%" height="15" fill="rgb(224,123,36)" fg:x="502" fg:w="3"/><text x="31.1233%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (2 samples, 0.12%)</title><rect x="31.7958%" y="164" width="0.1230%" height="15" fill="rgb(240,125,3)" fg:x="517" fg:w="2"/><text x="32.0458%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:292) (18 samples, 1.11%)</title><rect x="31.0578%" y="148" width="1.1070%" height="15" fill="rgb(205,98,50)" fg:x="505" fg:w="18"/><text x="31.3078%" y="158.50"></text></g><g><title>sites (kappybara/pattern.py:112) (4 samples, 0.25%)</title><rect x="31.9188%" y="164" width="0.2460%" height="15" fill="rgb(205,185,37)" fg:x="519" fg:w="4"/><text x="32.1688%" y="174.50"></text></g><g><title>embeddings (kappybara/pattern.py:294) (2 samples, 0.12%)</title><rect x="32.1648%" y="148" width="0.1230%" height="15" fill="rgb(238,207,15)" fg:x="523" fg:w="2"/><text x="32.4148%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:295) (2 samples, 0.12%)</title><rect x="32.2878%" y="148" width="0.1230%" height="15" fill="rgb(213,199,42)" fg:x="525" fg:w="2"/><text x="32.5378%" y="158.50"></text></g><g><title>embeddings (kappybara/pattern.py:297) (8 samples, 0.49%)</title><rect x="32.4723%" y="148" width="0.4920%" height="15" fill="rgb(235,201,11)" fg:x="528" fg:w="8"/><text x="32.7223%" y="158.50"></text></g><g><title>__eq__ (kappybara/utils.py:54) (4 samples, 0.25%)</title><rect x="32.7183%" y="164" width="0.2460%" height="15" fill="rgb(207,46,11)" fg:x="532" fg:w="4"/><text x="32.9683%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:116) (378 samples, 23.25%)</title><rect x="9.7786%" y="132" width="23.2472%" height="15" fill="rgb(241,35,35)" fg:x="159" fg:w="378"/><text x="10.0286%" y="142.50">apply_update (kappybara/mixture.py:11..</text></g><g><title>add (kappybara/utils.py:158) (20 samples, 1.23%)</title><rect x="33.2103%" y="148" width="1.2300%" height="15" fill="rgb(243,32,47)" fg:x="540" fg:w="20"/><text x="33.4603%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (14 samples, 0.86%)</title><rect x="33.5793%" y="164" width="0.8610%" height="15" fill="rgb(247,202,23)" fg:x="546" fg:w="14"/><text x="33.8293%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (2 samples, 0.12%)</title><rect x="34.3173%" y="180" width="0.1230%" height="15" fill="rgb(219,102,11)" fg:x="558" fg:w="2"/><text x="34.5673%" y="190.50"></text></g><g><title>add (kappybara/utils.py:160) (9 samples, 0.55%)</title><rect x="34.4403%" y="148" width="0.5535%" height="15" fill="rgb(243,110,44)" fg:x="560" fg:w="9"/><text x="34.6903%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (6 samples, 0.37%)</title><rect x="34.6248%" y="164" width="0.3690%" height="15" fill="rgb(222,74,54)" fg:x="563" fg:w="6"/><text x="34.8748%" y="174.50"></text></g><g><title>add (kappybara/utils.py:164) (14 samples, 0.86%)</title><rect x="34.9938%" y="148" width="0.8610%" height="15" fill="rgb(216,99,12)" fg:x="569" fg:w="14"/><text x="35.2438%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (7 samples, 0.43%)</title><rect x="35.4244%" y="164" width="0.4305%" height="15" fill="rgb(226,22,26)" fg:x="576" fg:w="7"/><text x="35.6744%" y="174.50"></text></g><g><title>add (kappybara/utils.py:167) (2 samples, 0.12%)</title><rect x="35.8549%" y="148" width="0.1230%" height="15" fill="rgb(217,163,10)" fg:x="583" fg:w="2"/><text x="36.1049%" y="158.50"></text></g><g><title>lookup (kappybara/utils.py:195) (2 samples, 0.12%)</title><rect x="37.0849%" y="196" width="0.1230%" height="15" fill="rgb(213,25,53)" fg:x="603" fg:w="2"/><text x="37.3349%" y="206.50"></text></g><g><title>lookup (kappybara/utils.py:199) (2 samples, 0.12%)</title><rect x="37.3309%" y="196" width="0.1230%" height="15" fill="rgb(252,105,26)" fg:x="607" fg:w="2"/><text x="37.5809%" y="206.50"></text></g><g><title>__call__ (kappybara/utils.py:104) (15 samples, 0.92%)</title><rect x="36.6544%" y="164" width="0.9225%" height="15" fill="rgb(220,39,43)" fg:x="596" fg:w="15"/><text x="36.9044%" y="174.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:183) (12 samples, 0.74%)</title><rect x="36.8389%" y="180" width="0.7380%" height="15" fill="rgb(229,68,48)" fg:x="599" fg:w="12"/><text x="37.0889%" y="190.50"></text></g><g><title>lookup (kappybara/utils.py:200) (2 samples, 0.12%)</title><rect x="37.4539%" y="196" width="0.1230%" height="15" fill="rgb(252,8,32)" fg:x="609" fg:w="2"/><text x="37.7039%" y="206.50"></text></g><g><title>add (kappybara/utils.py:169) (30 samples, 1.85%)</title><rect x="36.0394%" y="148" width="1.8450%" height="15" fill="rgb(223,20,43)" fg:x="586" fg:w="30"/><text x="36.2894%" y="158.50">a..</text></g><g><title>__call__ (kappybara/utils.py:84) (5 samples, 0.31%)</title><rect x="37.5769%" y="164" width="0.3075%" height="15" fill="rgb(229,81,49)" fg:x="611" fg:w="5"/><text x="37.8269%" y="174.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:80) (3 samples, 0.18%)</title><rect x="37.6999%" y="180" width="0.1845%" height="15" fill="rgb(236,28,36)" fg:x="613" fg:w="3"/><text x="37.9499%" y="190.50"></text></g><g><title>__init__ (kappybara/utils.py:150) (3 samples, 0.18%)</title><rect x="38.8069%" y="164" width="0.1845%" height="15" fill="rgb(249,185,26)" fg:x="631" fg:w="3"/><text x="39.0569%" y="174.50"></text></g><g><title>__init__ (kappybara/utils.py:152) (4 samples, 0.25%)</title><rect x="38.9914%" y="164" width="0.2460%" height="15" fill="rgb(249,174,33)" fg:x="634" fg:w="4"/><text x="39.2414%" y="174.50"></text></g><g><title>__init__ (kappybara/utils.py:154) (2 samples, 0.12%)</title><rect x="39.2374%" y="164" width="0.1230%" height="15" fill="rgb(233,201,37)" fg:x="638" fg:w="2"/><text x="39.4874%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:186) (2 samples, 0.12%)</title><rect x="39.9754%" y="180" width="0.1230%" height="15" fill="rgb(221,78,26)" fg:x="650" fg:w="2"/><text x="40.2254%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:50) (2 samples, 0.12%)</title><rect x="41.2669%" y="196" width="0.1230%" height="15" fill="rgb(250,127,30)" fg:x="671" fg:w="2"/><text x="41.5169%" y="206.50"></text></g><g><title>add (kappybara/utils.py:158) (34 samples, 2.09%)</title><rect x="39.3604%" y="164" width="2.0910%" height="15" fill="rgb(230,49,44)" fg:x="640" fg:w="34"/><text x="39.6104%" y="174.50">a..</text></g><g><title>__hash__ (kappybara/pattern.py:187) (22 samples, 1.35%)</title><rect x="40.0984%" y="180" width="1.3530%" height="15" fill="rgb(229,67,23)" fg:x="652" fg:w="22"/><text x="40.3484%" y="190.50"></text></g><g><title>add (kappybara/utils.py:160) (25 samples, 1.54%)</title><rect x="41.4514%" y="164" width="1.5375%" height="15" fill="rgb(249,83,47)" fg:x="674" fg:w="25"/><text x="41.7014%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (19 samples, 1.17%)</title><rect x="41.8204%" y="180" width="1.1685%" height="15" fill="rgb(215,43,3)" fg:x="680" fg:w="19"/><text x="42.0704%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (2 samples, 0.12%)</title><rect x="42.8659%" y="196" width="0.1230%" height="15" fill="rgb(238,154,13)" fg:x="697" fg:w="2"/><text x="43.1159%" y="206.50"></text></g><g><title>add (kappybara/utils.py:163) (2 samples, 0.12%)</title><rect x="42.9889%" y="164" width="0.1230%" height="15" fill="rgb(219,56,2)" fg:x="699" fg:w="2"/><text x="43.2389%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:50) (2 samples, 0.12%)</title><rect x="44.4034%" y="196" width="0.1230%" height="15" fill="rgb(233,0,4)" fg:x="722" fg:w="2"/><text x="44.6534%" y="206.50"></text></g><g><title>add (kappybara/utils.py:164) (28 samples, 1.72%)</title><rect x="43.1119%" y="164" width="1.7220%" height="15" fill="rgb(235,30,7)" fg:x="701" fg:w="28"/><text x="43.3619%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (20 samples, 1.23%)</title><rect x="43.6039%" y="180" width="1.2300%" height="15" fill="rgb(250,79,13)" fg:x="709" fg:w="20"/><text x="43.8539%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (5 samples, 0.31%)</title><rect x="44.5264%" y="196" width="0.3075%" height="15" fill="rgb(211,146,34)" fg:x="724" fg:w="5"/><text x="44.7764%" y="206.50"></text></g><g><title>apply_update (kappybara/mixture.py:117) (194 samples, 11.93%)</title><rect x="33.0258%" y="132" width="11.9311%" height="15" fill="rgb(228,22,38)" fg:x="537" fg:w="194"/><text x="33.2758%" y="142.50">apply_update (kapp..</text></g><g><title>add (kappybara/utils.py:172) (115 samples, 7.07%)</title><rect x="37.8844%" y="148" width="7.0726%" height="15" fill="rgb(235,168,5)" fg:x="616" fg:w="115"/><text x="38.1344%" y="158.50">add (kapp..</text></g><g><title>add (kappybara/utils.py:167) (2 samples, 0.12%)</title><rect x="44.8339%" y="164" width="0.1230%" height="15" fill="rgb(221,155,16)" fg:x="729" fg:w="2"/><text x="45.0839%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:88) (4 samples, 0.25%)</title><rect x="44.9569%" y="132" width="0.2460%" height="15" fill="rgb(215,215,53)" fg:x="731" fg:w="4"/><text x="45.2069%" y="142.50"></text></g><g><title>apply_update (kappybara/mixture.py:89) (2 samples, 0.12%)</title><rect x="45.2030%" y="132" width="0.1230%" height="15" fill="rgb(223,4,10)" fg:x="735" fg:w="2"/><text x="45.4530%" y="142.50"></text></g><g><title>remove_by (kappybara/utils.py:210) (3 samples, 0.18%)</title><rect x="45.7565%" y="148" width="0.1845%" height="15" fill="rgb(234,103,6)" fg:x="744" fg:w="3"/><text x="46.0065%" y="158.50"></text></g><g><title>remove_by (kappybara/utils.py:212) (10 samples, 0.62%)</title><rect x="46.0025%" y="148" width="0.6150%" height="15" fill="rgb(227,97,0)" fg:x="748" fg:w="10"/><text x="46.2525%" y="158.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (7 samples, 0.43%)</title><rect x="46.1870%" y="164" width="0.4305%" height="15" fill="rgb(234,150,53)" fg:x="751" fg:w="7"/><text x="46.4370%" y="174.50"></text></g><g><title>remove (kappybara/utils.py:175) (10 samples, 0.62%)</title><rect x="46.6790%" y="164" width="0.6150%" height="15" fill="rgb(228,201,54)" fg:x="759" fg:w="10"/><text x="46.9290%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (9 samples, 0.55%)</title><rect x="46.7405%" y="180" width="0.5535%" height="15" fill="rgb(222,22,37)" fg:x="760" fg:w="9"/><text x="46.9905%" y="190.50"></text></g><g><title>remove (kappybara/utils.py:176) (11 samples, 0.68%)</title><rect x="47.2940%" y="164" width="0.6765%" height="15" fill="rgb(237,53,32)" fg:x="769" fg:w="11"/><text x="47.5440%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (9 samples, 0.55%)</title><rect x="47.4170%" y="180" width="0.5535%" height="15" fill="rgb(233,25,53)" fg:x="771" fg:w="9"/><text x="47.6670%" y="190.50"></text></g><g><title>remove (kappybara/utils.py:179) (18 samples, 1.11%)</title><rect x="47.9705%" y="164" width="1.1070%" height="15" fill="rgb(210,40,34)" fg:x="780" fg:w="18"/><text x="48.2205%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (11 samples, 0.68%)</title><rect x="48.4010%" y="180" width="0.6765%" height="15" fill="rgb(241,220,44)" fg:x="787" fg:w="11"/><text x="48.6510%" y="190.50"></text></g><g><title>remove (kappybara/utils.py:183) (14 samples, 0.86%)</title><rect x="49.2620%" y="164" width="0.8610%" height="15" fill="rgb(235,28,35)" fg:x="801" fg:w="14"/><text x="49.5120%" y="174.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (10 samples, 0.62%)</title><rect x="49.5080%" y="180" width="0.6150%" height="15" fill="rgb(210,56,17)" fg:x="805" fg:w="10"/><text x="49.7580%" y="190.50"></text></g><g><title>remove (kappybara/utils.py:186) (6 samples, 0.37%)</title><rect x="50.1230%" y="164" width="0.3690%" height="15" fill="rgb(224,130,29)" fg:x="815" fg:w="6"/><text x="50.3730%" y="174.50"></text></g><g><title>lookup (kappybara/utils.py:195) (4 samples, 0.25%)</title><rect x="51.7220%" y="212" width="0.2460%" height="15" fill="rgb(235,212,8)" fg:x="841" fg:w="4"/><text x="51.9720%" y="222.50"></text></g><g><title>lookup (kappybara/utils.py:196) (5 samples, 0.31%)</title><rect x="51.9680%" y="212" width="0.3075%" height="15" fill="rgb(223,33,50)" fg:x="845" fg:w="5"/><text x="52.2180%" y="222.50"></text></g><g><title>__call__ (kappybara/utils.py:104) (26 samples, 1.60%)</title><rect x="50.9840%" y="180" width="1.5990%" height="15" fill="rgb(219,149,13)" fg:x="829" fg:w="26"/><text x="51.2340%" y="190.50"></text></g><g><title>&lt;lambda&gt; (kappybara/mixture.py:183) (24 samples, 1.48%)</title><rect x="51.1070%" y="196" width="1.4760%" height="15" fill="rgb(250,156,29)" fg:x="831" fg:w="24"/><text x="51.3570%" y="206.50"></text></g><g><title>lookup (kappybara/utils.py:200) (4 samples, 0.25%)</title><rect x="52.3370%" y="212" width="0.2460%" height="15" fill="rgb(216,193,19)" fg:x="851" fg:w="4"/><text x="52.5870%" y="222.50"></text></g><g><title>remove (kappybara/utils.py:188) (36 samples, 2.21%)</title><rect x="50.5535%" y="164" width="2.2140%" height="15" fill="rgb(216,135,14)" fg:x="822" fg:w="36"/><text x="50.8035%" y="174.50">r..</text></g><g><title>__call__ (kappybara/utils.py:84) (3 samples, 0.18%)</title><rect x="52.5830%" y="180" width="0.1845%" height="15" fill="rgb(241,47,5)" fg:x="855" fg:w="3"/><text x="52.8330%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (4 samples, 0.25%)</title><rect x="53.3210%" y="180" width="0.2460%" height="15" fill="rgb(233,42,35)" fg:x="867" fg:w="4"/><text x="53.5710%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:50) (3 samples, 0.18%)</title><rect x="55.9656%" y="212" width="0.1845%" height="15" fill="rgb(231,13,6)" fg:x="910" fg:w="3"/><text x="56.2156%" y="222.50"></text></g><g><title>remove (kappybara/utils.py:175) (43 samples, 2.64%)</title><rect x="53.6285%" y="180" width="2.6445%" height="15" fill="rgb(207,181,40)" fg:x="872" fg:w="43"/><text x="53.8785%" y="190.50">re..</text></g><g><title>__hash__ (kappybara/pattern.py:187) (35 samples, 2.15%)</title><rect x="54.1205%" y="196" width="2.1525%" height="15" fill="rgb(254,173,49)" fg:x="880" fg:w="35"/><text x="54.3705%" y="206.50">_..</text></g><g><title>__hash__ (kappybara/utils.py:51) (2 samples, 0.12%)</title><rect x="56.1501%" y="212" width="0.1230%" height="15" fill="rgb(221,1,38)" fg:x="913" fg:w="2"/><text x="56.4001%" y="222.50"></text></g><g><title>remove (kappybara/utils.py:176) (29 samples, 1.78%)</title><rect x="56.2731%" y="180" width="1.7835%" height="15" fill="rgb(206,124,46)" fg:x="915" fg:w="29"/><text x="56.5231%" y="190.50">r..</text></g><g><title>__hash__ (kappybara/pattern.py:187) (22 samples, 1.35%)</title><rect x="56.7036%" y="196" width="1.3530%" height="15" fill="rgb(249,21,11)" fg:x="922" fg:w="22"/><text x="56.9536%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (4 samples, 0.25%)</title><rect x="57.8106%" y="212" width="0.2460%" height="15" fill="rgb(222,201,40)" fg:x="940" fg:w="4"/><text x="58.0606%" y="222.50"></text></g><g><title>__hash__ (kappybara/utils.py:50) (2 samples, 0.12%)</title><rect x="60.2091%" y="212" width="0.1230%" height="15" fill="rgb(235,61,29)" fg:x="979" fg:w="2"/><text x="60.4591%" y="222.50"></text></g><g><title>remove (kappybara/utils.py:179) (38 samples, 2.34%)</title><rect x="58.0566%" y="180" width="2.3370%" height="15" fill="rgb(219,207,3)" fg:x="944" fg:w="38"/><text x="58.3066%" y="190.50">r..</text></g><g><title>__hash__ (kappybara/pattern.py:187) (26 samples, 1.60%)</title><rect x="58.7946%" y="196" width="1.5990%" height="15" fill="rgb(222,56,46)" fg:x="956" fg:w="26"/><text x="59.0446%" y="206.50"></text></g><g><title>remove (kappybara/utils.py:180) (6 samples, 0.37%)</title><rect x="60.3936%" y="180" width="0.3690%" height="15" fill="rgb(239,76,54)" fg:x="982" fg:w="6"/><text x="60.6436%" y="190.50"></text></g><g><title>remove (kappybara/utils.py:181) (7 samples, 0.43%)</title><rect x="60.7626%" y="180" width="0.4305%" height="15" fill="rgb(231,124,27)" fg:x="988" fg:w="7"/><text x="61.0126%" y="190.50"></text></g><g><title>remove (kappybara/utils.py:183) (19 samples, 1.17%)</title><rect x="61.1931%" y="180" width="1.1685%" height="15" fill="rgb(249,195,6)" fg:x="995" fg:w="19"/><text x="61.4431%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (14 samples, 0.86%)</title><rect x="61.5006%" y="196" width="0.8610%" height="15" fill="rgb(237,174,47)" fg:x="1000" fg:w="14"/><text x="61.7506%" y="206.50"></text></g><g><title>remove (kappybara/utils.py:189) (161 samples, 9.90%)</title><rect x="52.7675%" y="164" width="9.9016%" height="15" fill="rgb(206,201,31)" fg:x="858" fg:w="161"/><text x="53.0175%" y="174.50">remove (kappyb..</text></g><g><title>remove (kappybara/utils.py:186) (5 samples, 0.31%)</title><rect x="62.3616%" y="180" width="0.3075%" height="15" fill="rgb(231,57,52)" fg:x="1014" fg:w="5"/><text x="62.6116%" y="190.50"></text></g><g><title>remove (kappybara/utils.py:191) (4 samples, 0.25%)</title><rect x="62.6691%" y="164" width="0.2460%" height="15" fill="rgb(248,177,22)" fg:x="1019" fg:w="4"/><text x="62.9191%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:90) (292 samples, 17.96%)</title><rect x="45.3260%" y="132" width="17.9582%" height="15" fill="rgb(215,211,37)" fg:x="737" fg:w="292"/><text x="45.5760%" y="142.50">apply_update (kappybara/mixt..</text></g><g><title>remove_by (kappybara/utils.py:213) (271 samples, 16.67%)</title><rect x="46.6175%" y="148" width="16.6667%" height="15" fill="rgb(241,128,51)" fg:x="758" fg:w="271"/><text x="46.8675%" y="158.50">remove_by (kappybara/utils..</text></g><g><title>remove (kappybara/utils.py:192) (6 samples, 0.37%)</title><rect x="62.9151%" y="164" width="0.3690%" height="15" fill="rgb(227,165,31)" fg:x="1023" fg:w="6"/><text x="63.1651%" y="174.50"></text></g><g><title>apply_update (kappybara/mixture.py:92) (2 samples, 0.12%)</title><rect x="63.2841%" y="132" width="0.1230%" height="15" fill="rgb(228,167,24)" fg:x="1029" fg:w="2"/><text x="63.5341%" y="142.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:251) (3 samples, 0.18%)</title><rect x="63.6531%" y="148" width="0.1845%" height="15" fill="rgb(228,143,12)" fg:x="1035" fg:w="3"/><text x="63.9031%" y="158.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:155) (3 samples, 0.18%)</title><rect x="63.6531%" y="164" width="0.1845%" height="15" fill="rgb(249,149,8)" fg:x="1035" fg:w="3"/><text x="63.9031%" y="174.50"></text></g><g><title>__eq__ (kappybara/utils.py:54) (2 samples, 0.12%)</title><rect x="63.7146%" y="180" width="0.1230%" height="15" fill="rgb(243,35,44)" fg:x="1036" fg:w="2"/><text x="63.9646%" y="190.50"></text></g><g><title>__init__ (kappybara/utils.py:150) (9 samples, 0.55%)</title><rect x="64.3296%" y="180" width="0.5535%" height="15" fill="rgb(246,89,9)" fg:x="1046" fg:w="9"/><text x="64.5796%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (4 samples, 0.25%)</title><rect x="64.6371%" y="196" width="0.2460%" height="15" fill="rgb(233,213,13)" fg:x="1051" fg:w="4"/><text x="64.8871%" y="206.50"></text></g><g><title>__init__ (kappybara/pattern.py:218) (37 samples, 2.28%)</title><rect x="64.2066%" y="164" width="2.2755%" height="15" fill="rgb(233,141,41)" fg:x="1044" fg:w="37"/><text x="64.4566%" y="174.50">_..</text></g><g><title>__init__ (kappybara/utils.py:152) (26 samples, 1.60%)</title><rect x="64.8831%" y="180" width="1.5990%" height="15" fill="rgb(239,167,4)" fg:x="1055" fg:w="26"/><text x="65.1331%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (3 samples, 0.18%)</title><rect x="66.2977%" y="196" width="0.1845%" height="15" fill="rgb(209,217,16)" fg:x="1078" fg:w="3"/><text x="66.5477%" y="206.50"></text></g><g><title>create_index (kappybara/utils.py:230) (3 samples, 0.18%)</title><rect x="66.4822%" y="180" width="0.1845%" height="15" fill="rgb(219,88,35)" fg:x="1081" fg:w="3"/><text x="66.7322%" y="190.50"></text></g><g><title>create_index (kappybara/utils.py:231) (51 samples, 3.14%)</title><rect x="66.6667%" y="180" width="3.1365%" height="15" fill="rgb(220,193,23)" fg:x="1084" fg:w="51"/><text x="66.9167%" y="190.50">cre..</text></g><g><title>__call__ (kappybara/utils.py:104) (9 samples, 0.55%)</title><rect x="69.2497%" y="196" width="0.5535%" height="15" fill="rgb(230,90,52)" fg:x="1126" fg:w="9"/><text x="69.4997%" y="206.50"></text></g><g><title>create_index (kappybara/utils.py:232) (2 samples, 0.12%)</title><rect x="69.8032%" y="180" width="0.1230%" height="15" fill="rgb(252,106,19)" fg:x="1135" fg:w="2"/><text x="70.0532%" y="190.50"></text></g><g><title>__hash__ (kappybara/utils.py:50) (2 samples, 0.12%)</title><rect x="72.9397%" y="212" width="0.1230%" height="15" fill="rgb(206,74,20)" fg:x="1186" fg:w="2"/><text x="73.1897%" y="222.50"></text></g><g><title>add (kappybara/utils.py:158) (26 samples, 1.60%)</title><rect x="71.5867%" y="196" width="1.5990%" height="15" fill="rgb(230,138,44)" fg:x="1164" fg:w="26"/><text x="71.8367%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:51) (2 samples, 0.12%)</title><rect x="73.0627%" y="212" width="0.1230%" height="15" fill="rgb(235,182,43)" fg:x="1188" fg:w="2"/><text x="73.3127%" y="222.50"></text></g><g><title>add (kappybara/utils.py:160) (14 samples, 0.86%)</title><rect x="73.2472%" y="196" width="0.8610%" height="15" fill="rgb(242,16,51)" fg:x="1191" fg:w="14"/><text x="73.4972%" y="206.50"></text></g><g><title>add (kappybara/utils.py:163) (5 samples, 0.31%)</title><rect x="74.1082%" y="196" width="0.3075%" height="15" fill="rgb(248,9,4)" fg:x="1205" fg:w="5"/><text x="74.3582%" y="206.50"></text></g><g><title>add (kappybara/utils.py:164) (35 samples, 2.15%)</title><rect x="74.4157%" y="196" width="2.1525%" height="15" fill="rgb(210,31,22)" fg:x="1210" fg:w="35"/><text x="74.6657%" y="206.50">a..</text></g><g><title>__hash__ (kappybara/utils.py:51) (5 samples, 0.31%)</title><rect x="76.2608%" y="212" width="0.3075%" height="15" fill="rgb(239,54,39)" fg:x="1240" fg:w="5"/><text x="76.5108%" y="222.50"></text></g><g><title>__init__ (kappybara/pattern.py:220) (186 samples, 11.44%)</title><rect x="66.4822%" y="164" width="11.4391%" height="15" fill="rgb(230,99,41)" fg:x="1081" fg:w="186"/><text x="66.7322%" y="174.50">__init__ (kappyba..</text></g><g><title>create_index (kappybara/utils.py:234) (130 samples, 8.00%)</title><rect x="69.9262%" y="180" width="7.9951%" height="15" fill="rgb(253,106,12)" fg:x="1137" fg:w="130"/><text x="70.1762%" y="190.50">create_inde..</text></g><g><title>add (kappybara/utils.py:167) (22 samples, 1.35%)</title><rect x="76.5683%" y="196" width="1.3530%" height="15" fill="rgb(213,46,41)" fg:x="1245" fg:w="22"/><text x="76.8183%" y="206.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:129) (6 samples, 0.37%)</title><rect x="77.9213%" y="164" width="0.3690%" height="15" fill="rgb(215,133,35)" fg:x="1267" fg:w="6"/><text x="78.1713%" y="174.50"></text></g><g><title>__hash__ (kappybara/utils.py:50) (6 samples, 0.37%)</title><rect x="81.7343%" y="180" width="0.3690%" height="15" fill="rgb(213,28,5)" fg:x="1329" fg:w="6"/><text x="81.9843%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:130) (68 samples, 4.18%)</title><rect x="78.2903%" y="164" width="4.1820%" height="15" fill="rgb(215,77,49)" fg:x="1273" fg:w="68"/><text x="78.5403%" y="174.50">depth..</text></g><g><title>__hash__ (kappybara/utils.py:51) (6 samples, 0.37%)</title><rect x="82.1033%" y="180" width="0.3690%" height="15" fill="rgb(248,100,22)" fg:x="1335" fg:w="6"/><text x="82.3533%" y="190.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:131) (15 samples, 0.92%)</title><rect x="82.4723%" y="164" width="0.9225%" height="15" fill="rgb(208,67,9)" fg:x="1341" fg:w="15"/><text x="82.7223%" y="174.50"></text></g><g><title>depth_first_traversal (kappybara/pattern.py:132) (4 samples, 0.25%)</title><rect x="83.3948%" y="164" width="0.2460%" height="15" fill="rgb(219,133,21)" fg:x="1356" fg:w="4"/><text x="83.6448%" y="174.50"></text></g><g><title>__iter__ (kappybara/pattern.py:97) (8 samples, 0.49%)</title><rect x="90.0984%" y="196" width="0.4920%" height="15" fill="rgb(246,46,29)" fg:x="1465" fg:w="8"/><text x="90.3484%" y="206.50"></text></g><g><title>sites (kappybara/pattern.py:110) (6 samples, 0.37%)</title><rect x="91.9434%" y="212" width="0.3690%" height="15" fill="rgb(246,185,52)" fg:x="1495" fg:w="6"/><text x="92.1934%" y="222.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (62 samples, 3.81%)</title><rect x="90.5904%" y="196" width="3.8130%" height="15" fill="rgb(252,136,11)" fg:x="1473" fg:w="62"/><text x="90.8404%" y="206.50">__it..</text></g><g><title>sites (kappybara/pattern.py:112) (34 samples, 2.09%)</title><rect x="92.3124%" y="212" width="2.0910%" height="15" fill="rgb(219,138,53)" fg:x="1501" fg:w="34"/><text x="92.5624%" y="222.50">s..</text></g><g><title>coupled (kappybara/pattern.py:63) (3 samples, 0.18%)</title><rect x="94.4034%" y="196" width="0.1845%" height="15" fill="rgb(211,51,23)" fg:x="1535" fg:w="3"/><text x="94.6534%" y="206.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:259) (526 samples, 32.35%)</title><rect x="63.8376%" y="148" width="32.3493%" height="15" fill="rgb(247,221,28)" fg:x="1038" fg:w="526"/><text x="64.0876%" y="158.50">_remove_edge (kappybara/mixture.py:259)</text></g><g><title>depth_first_traversal (kappybara/pattern.py:133) (204 samples, 12.55%)</title><rect x="83.6408%" y="164" width="12.5461%" height="15" fill="rgb(251,222,45)" fg:x="1360" fg:w="204"/><text x="83.8908%" y="174.50">depth_first_travers..</text></g><g><title>neighbors (kappybara/pattern.py:121) (182 samples, 11.19%)</title><rect x="84.9938%" y="180" width="11.1931%" height="15" fill="rgb(217,162,53)" fg:x="1382" fg:w="182"/><text x="85.2438%" y="190.50">neighbors (kappy..</text></g><g><title>coupled (kappybara/pattern.py:65) (26 samples, 1.60%)</title><rect x="94.5879%" y="196" width="1.5990%" height="15" fill="rgb(229,93,14)" fg:x="1538" fg:w="26"/><text x="94.8379%" y="206.50"></text></g><g><title>__eq__ (kappybara/utils.py:54) (6 samples, 0.37%)</title><rect x="96.9250%" y="164" width="0.3690%" height="15" fill="rgb(209,67,49)" fg:x="1576" fg:w="6"/><text x="97.1750%" y="174.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:261) (20 samples, 1.23%)</title><rect x="96.1870%" y="148" width="1.2300%" height="15" fill="rgb(213,87,29)" fg:x="1564" fg:w="20"/><text x="96.4370%" y="158.50"></text></g><g><title>__iter__ (kappybara/pattern.py:224) (2 samples, 0.12%)</title><rect x="97.2940%" y="164" width="0.1230%" height="15" fill="rgb(205,151,52)" fg:x="1582" fg:w="2"/><text x="97.5440%" y="174.50"></text></g><g><title>_remove_edge (kappybara/mixture.py:273) (2 samples, 0.12%)</title><rect x="97.4785%" y="148" width="0.1230%" height="15" fill="rgb(253,215,39)" fg:x="1585" fg:w="2"/><text x="97.7285%" y="158.50"></text></g><g><title>add (kappybara/utils.py:169) (3 samples, 0.18%)</title><rect x="97.7245%" y="164" width="0.1845%" height="15" fill="rgb(221,220,41)" fg:x="1589" fg:w="3"/><text x="97.9745%" y="174.50"></text></g><g><title>add (kappybara/utils.py:158) (3 samples, 0.18%)</title><rect x="98.0320%" y="180" width="0.1845%" height="15" fill="rgb(218,133,21)" fg:x="1594" fg:w="3"/><text x="98.2820%" y="190.50"></text></g><g><title>__hash__ (kappybara/pattern.py:187) (3 samples, 0.18%)</title><rect x="98.0320%" y="196" width="0.1845%" height="15" fill="rgb(221,193,43)" fg:x="1594" fg:w="3"/><text x="98.2820%" y="206.50"></text></g><g><title>__hash__ (kappybara/utils.py:50) (2 samples, 0.12%)</title><rect x="98.0935%" y="212" width="0.1230%" height="15" fill="rgb(240,128,52)" fg:x="1595" fg:w="2"/><text x="98.3435%" y="222.50"></text></g><g><title>apply_update (kappybara/mixture.py:93) (567 samples, 34.87%)</title><rect x="63.4071%" y="132" width="34.8708%" height="15" fill="rgb(253,114,12)" fg:x="1031" fg:w="567"/><text x="63.6571%" y="142.50">apply_update (kappybara/mixture.py:93)</text></g><g><title>_remove_edge (kappybara/mixture.py:293) (10 samples, 0.62%)</title><rect x="97.6630%" y="148" width="0.6150%" height="15" fill="rgb(215,223,47)" fg:x="1588" fg:w="10"/><text x="97.9130%" y="158.50"></text></g><g><title>add (kappybara/utils.py:172) (6 samples, 0.37%)</title><rect x="97.9090%" y="164" width="0.3690%" height="15" fill="rgb(248,225,23)" fg:x="1592" fg:w="6"/><text x="98.1590%" y="174.50"></text></g><g><title>_add_edge (kappybara/mixture.py:226) (4 samples, 0.25%)</title><rect x="98.3395%" y="148" width="0.2460%" height="15" fill="rgb(250,108,0)" fg:x="1599" fg:w="4"/><text x="98.5895%" y="158.50"></text></g><g><title>remove (kappybara/utils.py:189) (3 samples, 0.18%)</title><rect x="98.4010%" y="164" width="0.1845%" height="15" fill="rgb(228,208,7)" fg:x="1600" fg:w="3"/><text x="98.6510%" y="174.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:23) (1,596 samples, 98.15%)</title><rect x="0.4920%" y="68" width="98.1550%" height="15" fill="rgb(244,45,10)" fg:x="8" fg:w="1596"/><text x="0.7420%" y="78.50">&lt;module&gt; (profile_uni_bi_small.py:23)</text></g><g><title>update (kappybara/system.py:79) (1,539 samples, 94.65%)</title><rect x="3.9975%" y="84" width="94.6494%" height="15" fill="rgb(207,125,25)" fg:x="65" fg:w="1539"/><text x="4.2475%" y="94.50">update (kappybara/system.py:79)</text></g><g><title>act (kappybara/system.py:74) (1,496 samples, 92.00%)</title><rect x="6.6421%" y="100" width="92.0049%" height="15" fill="rgb(210,195,18)" fg:x="108" fg:w="1496"/><text x="6.8921%" y="110.50">act (kappybara/system.py:74)</text></g><g><title>apply_update (kappybara/mixture.py:187) (1,496 samples, 92.00%)</title><rect x="6.6421%" y="116" width="92.0049%" height="15" fill="rgb(249,80,12)" fg:x="108" fg:w="1496"/><text x="6.8921%" y="126.50">apply_update (kappybara/mixture.py:187)</text></g><g><title>apply_update (kappybara/mixture.py:99) (6 samples, 0.37%)</title><rect x="98.2780%" y="132" width="0.3690%" height="15" fill="rgb(221,65,9)" fg:x="1598" fg:w="6"/><text x="98.5280%" y="142.50"></text></g><g><title>_parse_grammar (lark/load_grammar.py:966) (2 samples, 0.12%)</title><rect x="98.6470%" y="356" width="0.1230%" height="15" fill="rgb(235,49,36)" fg:x="1604" fg:w="2"/><text x="98.8970%" y="366.50"></text></g><g><title>parse (lark/parser_frontends.py:104) (2 samples, 0.12%)</title><rect x="98.6470%" y="372" width="0.1230%" height="15" fill="rgb(225,32,20)" fg:x="1604" fg:w="2"/><text x="98.8970%" y="382.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:42) (2 samples, 0.12%)</title><rect x="98.6470%" y="388" width="0.1230%" height="15" fill="rgb(215,141,46)" fg:x="1604" fg:w="2"/><text x="98.8970%" y="398.50"></text></g><g><title>parse (lark/parsers/lalr_parser.py:88) (2 samples, 0.12%)</title><rect x="98.6470%" y="404" width="0.1230%" height="15" fill="rgb(250,160,47)" fg:x="1604" fg:w="2"/><text x="98.8970%" y="414.50"></text></g><g><title>load_grammar (lark/load_grammar.py:1240) (3 samples, 0.18%)</title><rect x="98.6470%" y="340" width="0.1845%" height="15" fill="rgb(216,222,40)" fg:x="1604" fg:w="3"/><text x="98.8970%" y="350.50"></text></g><g><title>__init__ (lark/lark.py:357) (4 samples, 0.25%)</title><rect x="98.6470%" y="308" width="0.2460%" height="15" fill="rgb(234,217,39)" fg:x="1604" fg:w="4"/><text x="98.8970%" y="318.50"></text></g><g><title>load_grammar (lark/load_grammar.py:1415) (4 samples, 0.25%)</title><rect x="98.6470%" y="324" width="0.2460%" height="15" fill="rgb(207,178,40)" fg:x="1604" fg:w="4"/><text x="98.8970%" y="334.50"></text></g><g><title>compile (lark/load_grammar.py:693) (2 samples, 0.12%)</title><rect x="98.8930%" y="324" width="0.1230%" height="15" fill="rgb(221,136,13)" fg:x="1608" fg:w="2"/><text x="99.1430%" y="334.50"></text></g><g><title>nr_deepcopy_tree (lark/load_grammar.py:676) (2 samples, 0.12%)</title><rect x="98.8930%" y="340" width="0.1230%" height="15" fill="rgb(249,199,10)" fg:x="1608" fg:w="2"/><text x="99.1430%" y="350.50"></text></g><g><title>compile (lark/load_grammar.py:710) (2 samples, 0.12%)</title><rect x="99.0160%" y="324" width="0.1230%" height="15" fill="rgb(249,222,13)" fg:x="1610" fg:w="2"/><text x="99.2660%" y="334.50"></text></g><g><title>transform (lark/visitors.py:264) (2 samples, 0.12%)</title><rect x="99.0160%" y="340" width="0.1230%" height="15" fill="rgb(244,185,38)" fg:x="1610" fg:w="2"/><text x="99.2660%" y="350.50"></text></g><g><title>__init__ (lark/lark.py:407) (5 samples, 0.31%)</title><rect x="98.8930%" y="308" width="0.3075%" height="15" fill="rgb(236,202,9)" fg:x="1608" fg:w="5"/><text x="99.1430%" y="318.50"></text></g><g><title>&lt;module&gt; (kappybara/grammar.py:35) (10 samples, 0.62%)</title><rect x="98.6470%" y="260" width="0.6150%" height="15" fill="rgb(250,229,37)" fg:x="1604" fg:w="10"/><text x="98.8970%" y="270.50"></text></g><g><title>__init__ (kappybara/grammar.py:15) (10 samples, 0.62%)</title><rect x="98.6470%" y="276" width="0.6150%" height="15" fill="rgb(206,174,23)" fg:x="1604" fg:w="10"/><text x="98.8970%" y="286.50"></text></g><g><title>open (lark/lark.py:577) (10 samples, 0.62%)</title><rect x="98.6470%" y="292" width="0.6150%" height="15" fill="rgb(211,33,43)" fg:x="1604" fg:w="10"/><text x="98.8970%" y="302.50"></text></g><g><title>&lt;module&gt; (profile_uni_bi_small.py:3) (13 samples, 0.80%)</title><rect x="98.6470%" y="68" width="0.7995%" height="15" fill="rgb(245,58,50)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (13 samples, 0.80%)</title><rect x="98.6470%" y="84" width="0.7995%" height="15" fill="rgb(244,68,36)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (13 samples, 0.80%)</title><rect x="98.6470%" y="100" width="0.7995%" height="15" fill="rgb(232,229,15)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (13 samples, 0.80%)</title><rect x="98.6470%" y="116" width="0.7995%" height="15" fill="rgb(254,30,23)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (13 samples, 0.80%)</title><rect x="98.6470%" y="132" width="0.7995%" height="15" fill="rgb(235,160,14)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.80%)</title><rect x="98.6470%" y="148" width="0.7995%" height="15" fill="rgb(212,155,44)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="158.50"></text></g><g><title>&lt;module&gt; (kappybara/kappa.py:6) (13 samples, 0.80%)</title><rect x="98.6470%" y="164" width="0.7995%" height="15" fill="rgb(226,2,50)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (13 samples, 0.80%)</title><rect x="98.6470%" y="180" width="0.7995%" height="15" fill="rgb(234,177,6)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (13 samples, 0.80%)</title><rect x="98.6470%" y="196" width="0.7995%" height="15" fill="rgb(217,24,9)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (13 samples, 0.80%)</title><rect x="98.6470%" y="212" width="0.7995%" height="15" fill="rgb(220,13,46)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (13 samples, 0.80%)</title><rect x="98.6470%" y="228" width="0.7995%" height="15" fill="rgb(239,221,27)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (13 samples, 0.80%)</title><rect x="98.6470%" y="244" width="0.7995%" height="15" fill="rgb(222,198,25)" fg:x="1604" fg:w="13"/><text x="98.8970%" y="254.50"></text></g><g><title>&lt;module&gt; (kappybara/grammar.py:4) (3 samples, 0.18%)</title><rect x="99.2620%" y="260" width="0.1845%" height="15" fill="rgb(211,99,13)" fg:x="1614" fg:w="3"/><text x="99.5120%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (3 samples, 0.18%)</title><rect x="99.2620%" y="276" width="0.1845%" height="15" fill="rgb(232,111,31)" fg:x="1614" fg:w="3"/><text x="99.5120%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (3 samples, 0.18%)</title><rect x="99.2620%" y="292" width="0.1845%" height="15" fill="rgb(245,82,37)" fg:x="1614" fg:w="3"/><text x="99.5120%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (3 samples, 0.18%)</title><rect x="99.2620%" y="308" width="0.1845%" height="15" fill="rgb(227,149,46)" fg:x="1614" fg:w="3"/><text x="99.5120%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (3 samples, 0.18%)</title><rect x="99.2620%" y="324" width="0.1845%" height="15" fill="rgb(218,36,50)" fg:x="1614" fg:w="3"/><text x="99.5120%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (3 samples, 0.18%)</title><rect x="99.2620%" y="340" width="0.1845%" height="15" fill="rgb(226,80,48)" fg:x="1614" fg:w="3"/><text x="99.5120%" y="350.50"></text></g><g><title>&lt;module&gt; (lark/__init__.py:11) (2 samples, 0.12%)</title><rect x="99.3235%" y="356" width="0.1230%" height="15" fill="rgb(238,224,15)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.12%)</title><rect x="99.3235%" y="372" width="0.1230%" height="15" fill="rgb(241,136,10)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 0.12%)</title><rect x="99.3235%" y="388" width="0.1230%" height="15" fill="rgb(208,32,45)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 0.12%)</title><rect x="99.3235%" y="404" width="0.1230%" height="15" fill="rgb(207,135,9)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.12%)</title><rect x="99.3235%" y="420" width="0.1230%" height="15" fill="rgb(206,86,44)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.12%)</title><rect x="99.3235%" y="436" width="0.1230%" height="15" fill="rgb(245,177,15)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="446.50"></text></g><g><title>&lt;module&gt; (lark/lark.py:20) (2 samples, 0.12%)</title><rect x="99.3235%" y="452" width="0.1230%" height="15" fill="rgb(206,64,50)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.12%)</title><rect x="99.3235%" y="468" width="0.1230%" height="15" fill="rgb(234,36,40)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 0.12%)</title><rect x="99.3235%" y="484" width="0.1230%" height="15" fill="rgb(213,64,8)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 0.12%)</title><rect x="99.3235%" y="500" width="0.1230%" height="15" fill="rgb(210,75,36)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.12%)</title><rect x="99.3235%" y="516" width="0.1230%" height="15" fill="rgb(229,88,21)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.12%)</title><rect x="99.3235%" y="532" width="0.1230%" height="15" fill="rgb(252,204,47)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="542.50"></text></g><g><title>&lt;module&gt; (lark/load_grammar.py:15) (2 samples, 0.12%)</title><rect x="99.3235%" y="548" width="0.1230%" height="15" fill="rgb(208,77,27)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1360) (2 samples, 0.12%)</title><rect x="99.3235%" y="564" width="0.1230%" height="15" fill="rgb(221,76,26)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:1331) (2 samples, 0.12%)</title><rect x="99.3235%" y="580" width="0.1230%" height="15" fill="rgb(225,139,18)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:935) (2 samples, 0.12%)</title><rect x="99.3235%" y="596" width="0.1230%" height="15" fill="rgb(230,137,11)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:999) (2 samples, 0.12%)</title><rect x="99.3235%" y="612" width="0.1230%" height="15" fill="rgb(212,28,1)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:488) (2 samples, 0.12%)</title><rect x="99.3235%" y="628" width="0.1230%" height="15" fill="rgb(248,164,17)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="638.50"></text></g><g><title>&lt;module&gt; (lark/lexer.py:142) (2 samples, 0.12%)</title><rect x="99.3235%" y="644" width="0.1230%" height="15" fill="rgb(222,171,42)" fg:x="1615" fg:w="2"/><text x="99.5735%" y="654.50"></text></g><g><title>__iter__ (kappybara/pattern.py:98) (4 samples, 0.25%)</title><rect x="99.5080%" y="68" width="0.2460%" height="15" fill="rgb(243,84,45)" fg:x="1618" fg:w="4"/><text x="99.7580%" y="78.50"></text></g><g><title>all (1,626 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(252,49,23)" fg:x="0" fg:w="1626"/><text x="0.2500%" y="62.50"></text></g><g><title>sites (kappybara/pattern.py:112) (4 samples, 0.25%)</title><rect x="99.7540%" y="68" width="0.2460%" height="15" fill="rgb(215,19,7)" fg:x="1622" fg:w="4"/><text x="100.0040%" y="78.50"></text></g></svg></svg>